{
synchronized (this) {
    if (released) {
      return;
    }
    released=true;
  }
  healthCheckTimer.stop();
  sendServerClosePacket();
  closePinpointServer();
  if (serverChannel != null) {
    ChannelFuture close=serverChannel.close();
    close.awaitUninterruptibly(3000,TimeUnit.MILLISECONDS);
    serverChannel=null;
  }
  if (bootstrap != null) {
    bootstrap.releaseExternalResources();
    bootstrap=null;
  }
  requestManagerTimer.stop();
}
