{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetHostname()).compareTo(other.isSetHostname());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetHostname()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.hostname,other.hostname);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetIp()).compareTo(other.isSetIp());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetIp()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.ip,other.ip);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPorts()).compareTo(other.isSetPorts());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPorts()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.ports,other.ports);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAgentId()).compareTo(other.isSetAgentId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAgentId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.agentId,other.agentId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetApplicationName()).compareTo(other.isSetApplicationName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetApplicationName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.applicationName,other.applicationName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetServiceType()).compareTo(other.isSetServiceType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetServiceType()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.serviceType,other.serviceType);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetIsAlive()).compareTo(other.isSetIsAlive());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetIsAlive()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.isAlive,other.isAlive);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTimestamp()).compareTo(other.isSetTimestamp());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTimestamp()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.timestamp,other.timestamp);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPid()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.pid,other.pid);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
