{
  boolean marked=false;
  for (  SpanAlign spanAlign : spanAligns) {
    if (spanAlign.isSpan()) {
      SpanBo spanBo=spanAlign.getSpanBo();
      AnnotationUtils.sortAnnotationListByKey(spanBo);
      String method=(String)AnnotationUtils.getDisplayMethod(spanBo);
      String arguments=(String)AnnotationUtils.getDisplayArgument(spanBo);
      long begin=spanBo.getStartTime();
      long elapsed=spanBo.getElapsed();
      if (!marked) {
        setStartTime(begin);
        setEndTime(begin + elapsed);
        applicationName=arguments;
        beginTimestamp=begin;
        marked=true;
      }
      if (spanBo.getCollectorAcceptTime() == focusTimestamp) {
        applicationName=arguments;
        beginTimestamp=begin;
      }
      Record record=new Record(spanAlign.getDepth(),true,method,arguments,begin,elapsed,spanBo.getAgentId(),spanBo.getServiceName(),spanBo.getServiceType(),null);
      recordset.add(record);
      addAnnotationRecord(spanAlign.getDepth() + 1,spanBo.getAnnotationBoList());
    }
 else {
      SubSpanBo subSpan=spanAlign.getSubSpanBo();
      AnnotationUtils.sortAnnotationListByKey(subSpan);
      String method=(String)AnnotationUtils.getDisplayMethod(subSpan);
      Object arguments=AnnotationUtils.getDisplayArgument(subSpan);
      long begin=spanAlign.getSpanBo().getStartTime() + subSpan.getStartElapsed();
      long elapsed=subSpan.getEndElapsed();
      if (!marked) {
        setStartTime(begin);
        setEndTime(begin + elapsed);
        marked=true;
      }
      String destinationId=subSpan.getDestinationId();
      recordset.add(new Record(spanAlign.getDepth(),true,method,(arguments != null) ? arguments.toString() : "",begin,elapsed,subSpan.getAgentId(),subSpan.getDestinationId(),subSpan.getServiceType(),destinationId));
      addAnnotationRecord(spanAlign.getDepth() + 1,subSpan.getAnnotationBoList());
    }
  }
}
