{
  final int numDataPoints=6;
  final long initialTimestamp=AGENT_STAT_TIMESPAN_MS - TEST_COLLECTION_INTERVAL;
  final long expectedBaseTimestamp1=AgentStatUtils.getBaseTimestamp(initialTimestamp);
  final long expectedBaseTimestamp2=AgentStatUtils.getBaseTimestamp(expectedBaseTimestamp1 + AGENT_STAT_TIMESPAN_MS);
  final List<AgentStatDataPoint> testDataPoints=createTestDataPoints(initialTimestamp,TEST_COLLECTION_INTERVAL,numDataPoints);
  List<Put> puts=this.agentStatHbaseOperationFactory.createPuts(TEST_AGENT_ID,TEST_AGENT_STAT_TYPE,testDataPoints,this.mockSerializer);
  assertEquals(2,puts.size());
  Put firstPut=puts.get(0);
  assertEquals(TEST_AGENT_ID,this.agentStatHbaseOperationFactory.getAgentId(firstPut.getRow()));
  assertEquals(TEST_AGENT_STAT_TYPE,this.agentStatHbaseOperationFactory.getAgentStatType(firstPut.getRow()));
  assertEquals(expectedBaseTimestamp1,this.agentStatHbaseOperationFactory.getBaseTimestamp(firstPut.getRow()));
  Put secondPut=puts.get(1);
  assertEquals(TEST_AGENT_ID,this.agentStatHbaseOperationFactory.getAgentId(secondPut.getRow()));
  assertEquals(TEST_AGENT_STAT_TYPE,this.agentStatHbaseOperationFactory.getAgentStatType(secondPut.getRow()));
  assertEquals(expectedBaseTimestamp2,this.agentStatHbaseOperationFactory.getBaseTimestamp(secondPut.getRow()));
}
