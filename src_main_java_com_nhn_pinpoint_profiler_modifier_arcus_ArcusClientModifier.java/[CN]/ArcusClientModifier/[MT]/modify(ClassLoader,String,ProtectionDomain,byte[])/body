{
  if (logger.isInfoEnabled()) {
    logger.info("Modifing. {}",javassistClassName);
  }
  try {
    InstrumentClass aClass=byteCodeInstrumentor.getClass(javassistClassName);
    Interceptor setCacheManagerInterceptor=byteCodeInstrumentor.newInterceptor(classLoader,protectedDomain,"com.nhn.pinpoint.profiler.modifier.arcus.interceptor.SetCacheManagerInterceptor");
    aClass.addInterceptor("setCacheManager",new String[]{"net.spy.memcached.CacheManager"},setCacheManagerInterceptor,Type.before);
    String[] ignored=new String[]{"__","shutdown"};
    for (    Method method : aClass.getDeclaredMethods(new ArcusMethodFilter(ignored))) {
      Interceptor apiInterceptor=byteCodeInstrumentor.newInterceptor(classLoader,protectedDomain,"com.nhn.pinpoint.profiler.modifier.arcus.interceptor.ApiInterceptor");
      aClass.addInterceptor(method.getMethodName(),method.getMethodParams(),apiInterceptor,Type.around);
    }
    return aClass.toBytecode();
  }
 catch (  Exception e) {
    if (logger.isWarnEnabled()) {
      logger.warn(e.getMessage(),e);
    }
    return null;
  }
}
