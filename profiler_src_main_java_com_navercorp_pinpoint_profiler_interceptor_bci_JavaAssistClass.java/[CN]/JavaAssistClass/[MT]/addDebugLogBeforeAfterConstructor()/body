{
  final String className=this.ctClass.getName();
  final LoggingInterceptor loggingInterceptor=new LoggingInterceptor(className);
  final int id=InterceptorRegistry.addInterceptor(loggingInterceptor);
  try {
    for (    CtConstructor constructor : ctClass.getConstructors()) {
      if (constructor.isEmpty()) {
        if (isDebug) {
          logger.debug("{} is empty.",constructor.getLongName());
        }
        continue;
      }
      String constructorName=constructor.getName();
      addStaticAroundInterceptor(constructorName,id,constructor,false);
    }
    return true;
  }
 catch (  Exception e) {
    if (logger.isWarnEnabled()) {
      logger.warn(e.getMessage(),e);
    }
  }
  return false;
}
