{
  final String returnType=getReturnType(behavior);
  final String target=getTargetIdentifier(behavior);
  final String[] parameterType=JavaAssistUtils.parseParameterSignature(behavior.getSignature());
  String parameterTypeString=null;
  if (interceptorType == STATIC_INTERCEPTOR) {
    parameterTypeString=JavaAssistUtils.getParameterDescription(parameterType);
  }
  final String parameterIdentifier=getParameterIdentifier(parameterType);
  final CodeBuilder after=new CodeBuilder();
  after.begin();
  if (interceptorType == STATIC_INTERCEPTOR) {
    after.format("  %1$s interceptor = %2$s.getStaticInterceptor(%3$d);",StaticAroundInterceptor.class.getName(),interceptorRegistryBinder.getInterceptorRegistryClassName(),id);
    after.format("  interceptor.after(%1$s, \"%2$s\", \"%3$s\", \"%4$s\", %5$s, %6$s, null);",target,ctClass.getName(),methodName,parameterTypeString,parameterIdentifier,returnType);
  }
 else {
    after.format("  %1$s interceptor = %2$s.getSimpleInterceptor(%3$d);",SimpleAroundInterceptor.class.getName(),interceptorRegistryBinder.getInterceptorRegistryClassName(),id);
    after.format("  interceptor.after(%1$s, %2$s, %3$s, null);",target,parameterIdentifier,returnType);
  }
  after.end();
  final String buildAfter=after.toString();
  if (isDebug) {
    logger.debug("addAfterInterceptor after behavior:{} code:{}",behavior.getLongName(),buildAfter);
  }
  behavior.insertAfter(buildAfter);
  CodeBuilder catchCode=new CodeBuilder();
  catchCode.begin();
  if (interceptorType == STATIC_INTERCEPTOR) {
    catchCode.format("  %1$s interceptor = %2$s.getStaticInterceptor(%3$d);",StaticAroundInterceptor.class.getName(),interceptorRegistryBinder.getInterceptorRegistryClassName(),id);
    catchCode.format("  interceptor.after(%1$s, \"%2$s\", \"%3$s\", \"%4$s\", %5$s, null, $e);",target,ctClass.getName(),methodName,parameterTypeString,parameterIdentifier);
  }
 else {
    catchCode.format("  %1$s interceptor = %2$s.getSimpleInterceptor(%3$d);",SimpleAroundInterceptor.class.getName(),interceptorRegistryBinder.getInterceptorRegistryClassName(),id);
    catchCode.format("  interceptor.after(%1$s, %2$s, null, $e);",target,parameterIdentifier);
  }
  catchCode.append("  throw $e;");
  catchCode.end();
  String buildCatch=catchCode.toString();
  if (isDebug) {
    logger.debug("addAfterInterceptor catch behavior:{} code:{}",behavior.getLongName(),buildCatch);
  }
  CtClass th=instrumentor.getClassPool().get("java.lang.Throwable");
  behavior.addCatch(buildCatch,th);
}
