{
  if (logger.isInfoEnabled()) {
    logger.info("Modifing. {}",javassistClassName);
  }
  this.byteCodeInstrumentor.checkLibrary(classLoader,javassistClassName);
  try {
    InstrumentClass cubridConnection=byteCodeInstrumentor.getClass(javassistClassName);
    cubridConnection.addTraceVariable("__url","__setUrl","__getUrl","java.lang.Object");
    Interceptor connectionCloseInterceptor=new ScopeDelegateSimpleInterceptor(new ConnectionCloseInterceptor(),JDBCScope.SCOPE);
    cubridConnection.addInterceptor("close",null,connectionCloseInterceptor);
    Interceptor statementCreateInterceptor=new ScopeDelegateSimpleInterceptor(new StatementCreateInterceptor(),JDBCScope.SCOPE);
    cubridConnection.addInterceptor("createStatement",null,statementCreateInterceptor);
    Interceptor preparedStatementCreateInterceptor=new ScopeDelegateSimpleInterceptor(new PreparedStatementCreateInterceptor(),JDBCScope.SCOPE);
    cubridConnection.addInterceptor("prepareStatement",new String[]{"java.lang.String"},preparedStatementCreateInterceptor);
    final ProfilerConfig profilerConfig=agent.getProfilerConfig();
    if (profilerConfig.isJdbcProfileCubridSetAutoCommit()) {
      Interceptor setAutoCommit=new ScopeDelegateSimpleInterceptor(new TransactionSetAutoCommitInterceptor(),JDBCScope.SCOPE);
      cubridConnection.addInterceptor("setAutoCommit",new String[]{"boolean"},setAutoCommit);
    }
    if (profilerConfig.isJdbcProfileCubridCommit()) {
      Interceptor commit=new ScopeDelegateSimpleInterceptor(new TransactionCommitInterceptor(),JDBCScope.SCOPE);
      cubridConnection.addInterceptor("commit",null,commit);
    }
    if (profilerConfig.isJdbcProfileCubridRollback()) {
      Interceptor rollback=new ScopeDelegateSimpleInterceptor(new TransactionRollbackInterceptor(),JDBCScope.SCOPE);
      cubridConnection.addInterceptor("rollback",null,rollback);
    }
    if (this.logger.isInfoEnabled()) {
      this.logger.info("{} class is converted.",javassistClassName);
    }
    return cubridConnection.toBytecode();
  }
 catch (  InstrumentException e) {
    if (logger.isWarnEnabled()) {
      logger.warn("{} modify fail. Cause:{}",this.getClass().getSimpleName(),e.getMessage(),e);
    }
    return null;
  }
}
