{
  if (args.length != 1) {
    System.out.println("usage : " + NetworkAvailabilityChecker.class.getSimpleName() + " AGENT_CONFIG_FILE");
    return;
  }
  String configPath=args[0];
  DataSender udpStatSender=null;
  DataSender udpSpanSender=null;
  DataSender tcpSender=null;
  PinpointClientFactory clientFactory=null;
  PinpointClient client=null;
  try {
    ProfilerConfig profilerConfig=ProfilerConfig.load(configPath);
    String collectorStatIp=profilerConfig.getCollectorStatServerIp();
    int collectorStatPort=profilerConfig.getCollectorStatServerPort();
    udpStatSender=new UdpDataSender(collectorStatIp,collectorStatPort,"UDP-STAT",10);
    String collectorSpanIp=profilerConfig.getCollectorSpanServerIp();
    int collectorSpanPort=profilerConfig.getCollectorSpanServerPort();
    udpSpanSender=new UdpDataSender(collectorSpanIp,collectorSpanPort,"UDP-SPAN",10);
    String collectorTcpIp=profilerConfig.getCollectorTcpServerIp();
    int collectorTcpPort=profilerConfig.getCollectorTcpServerPort();
    clientFactory=createPinpointClientFactory();
    client=createPinpointClient(collectorTcpIp,collectorTcpPort,clientFactory);
    tcpSender=new TcpDataSender(client);
    boolean udpSenderResult=udpStatSender.isNetworkAvailable();
    boolean udpSpanSenderResult=udpSpanSender.isNetworkAvailable();
    boolean tcpSenderResult=tcpSender.isNetworkAvailable();
    StringBuilder buffer=new StringBuilder();
    buffer.append("\nTEST RESULT\n");
    write(buffer,"UDP-STAT://",collectorStatIp,collectorStatPort,udpSenderResult);
    write(buffer,"UDP-SPAN://",collectorSpanIp,collectorSpanPort,udpSpanSenderResult);
    write(buffer,"TCP://",collectorTcpIp,collectorTcpPort,tcpSenderResult);
    System.out.println(buffer.toString());
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
 finally {
    closeDataSender(udpStatSender);
    closeDataSender(udpSpanSender);
    closeDataSender(tcpSender);
    System.out.println("END.");
    if (client != null) {
      client.close();
    }
    if (clientFactory != null) {
      clientFactory.release();
    }
  }
}
