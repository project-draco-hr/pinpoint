{
  Map<String,List<TimeHistogram>> agentLevelMap=new HashMap<String,List<TimeHistogram>>();
  for (  ResponseTime responseTime : responseHistogramList) {
    Set<Map.Entry<String,Histogram>> agentHistogram=responseTime.getAgentHistogram();
    for (    Map.Entry<String,Histogram> agentEntry : agentHistogram) {
      List<TimeHistogram> histogramList=agentLevelMap.get(agentEntry.getKey());
      if (histogramList == null) {
        histogramList=new ArrayList<TimeHistogram>();
        agentLevelMap.put(agentEntry.getKey(),histogramList);
      }
      Histogram histogram=agentEntry.getValue();
      TimeHistogram timeHistogram=new TimeHistogram(application.getServiceType(),responseTime.getTimeStamp());
      timeHistogram.add(histogram);
      histogramList.add(timeHistogram);
    }
  }
  Map<String,List<TimeHistogram>> histogramMap=interpolation(agentLevelMap);
  if (logger.isDebugEnabled()) {
    for (    Map.Entry<String,List<TimeHistogram>> agentListEntry : agentLevelMap.entrySet()) {
      String agentName=agentListEntry.getKey();
      logger.debug("agentName:{}",agentName);
      List<TimeHistogram> value=agentListEntry.getValue();
      for (      TimeHistogram histogram : value) {
        logger.debug("histogram:{}",histogram);
      }
    }
  }
  AgentTimeSeriesHistogram agentTimeSeriesHistogram=new AgentTimeSeriesHistogram(application,range,histogramMap);
  return agentTimeSeriesHistogram;
}
