{
  transformTemplate.transform("org.apache.catalina.connector.Request",new TransformCallback(){
    @Override public byte[] doInTransform(    Instrumentor instrumentor,    ClassLoader classLoader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      InstrumentClass target=instrumentor.getInstrumentClass(classLoader,className,classfileBuffer);
      target.addField(TomcatConstants.TRACE_ACCESSOR);
      target.addField(TomcatConstants.ASYNC_ACCESSOR);
      InstrumentMethod recycleMethodEditorBuilder=target.getDeclaredMethod("recycle");
      if (recycleMethodEditorBuilder != null) {
        recycleMethodEditorBuilder.addInterceptor("com.navercorp.pinpoint.plugin.tomcat.interceptor.RequestRecycleInterceptor");
      }
      InstrumentMethod startAsyncMethodEditor=target.getDeclaredMethod("startAsync","javax.servlet.ServletRequest","javax.servlet.ServletResponse");
      if (startAsyncMethodEditor != null) {
        startAsyncMethodEditor.addInterceptor("com.navercorp.pinpoint.plugin.tomcat.interceptor.RequestStartAsyncInterceptor");
      }
      return target.toBytecode();
    }
  }
);
}
