{
  if (logger.isInfoEnabled()) {
    logger.info("Modifing. {}",className);
  }
  try {
    final InstrumentClass instrumentClass=byteCodeInstrumentor.getClass(className);
    instrumentClass.addTraceValue(ObjectTraceValue.class);
    final Interceptor constructorInterceptor=byteCodeInstrumentor.newInterceptor(classLoader,protectedDomain,"com.nhn.pinpoint.profiler.modifier.redis.interceptor.RedisClusterConstructorInterceptor");
    instrumentClass.addConstructorInterceptor(new String[]{"java.lang.String"},constructorInterceptor);
    instrumentClass.addConstructorInterceptor(new String[]{"java.lang.String","int"},constructorInterceptor);
    instrumentClass.addConstructorInterceptor(new String[]{"java.lang.String","int","int"},constructorInterceptor);
    final List<Method> declaredMethods=instrumentClass.getDeclaredMethods(new NameBasedMethodFilter(RedisClusterMethodNames.get()));
    for (    Method method : declaredMethods) {
      final Interceptor methodInterceptor=byteCodeInstrumentor.newInterceptor(classLoader,protectedDomain,"com.nhn.pinpoint.profiler.modifier.redis.interceptor.RedisClusterMethodInterceptor");
      instrumentClass.addInterceptor(method.getMethodName(),method.getMethodParams(),methodInterceptor);
    }
    return instrumentClass.toBytecode();
  }
 catch (  Exception e) {
    if (logger.isWarnEnabled()) {
      logger.warn("redis.RedisClusterModifier(nBase-ARC) fail. Target class is " + getTargetClass() + ", Caused "+ e.getMessage(),e);
    }
  }
  return null;
}
