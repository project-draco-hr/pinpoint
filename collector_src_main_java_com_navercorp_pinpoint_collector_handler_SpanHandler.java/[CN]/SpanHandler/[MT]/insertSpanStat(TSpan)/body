{
  final ServiceType applicationServiceType=getApplicationServiceType(span);
  final ServiceType spanServiceType=registry.findServiceType(span.getServiceType());
  final boolean isError=span.getErr() != 0;
  int bugCheck=0;
  if (span.getParentSpanId() == -1) {
    if (spanServiceType.isQueue()) {
      statisticsHandler.updateCaller(span.getAcceptorHost(),spanServiceType,span.getRemoteAddr(),span.getApplicationName(),applicationServiceType,span.getEndPoint(),span.getElapsed(),isError);
      statisticsHandler.updateCallee(span.getApplicationName(),applicationServiceType,span.getAcceptorHost(),spanServiceType,span.getAgentId(),span.getElapsed(),isError);
    }
 else {
      statisticsHandler.updateCaller(span.getApplicationName(),ServiceType.USER,span.getAgentId(),span.getApplicationName(),applicationServiceType,span.getAgentId(),span.getElapsed(),isError);
      statisticsHandler.updateCallee(span.getApplicationName(),applicationServiceType,span.getApplicationName(),ServiceType.USER,span.getAgentId(),span.getElapsed(),isError);
    }
    bugCheck++;
  }
  if (span.getParentApplicationName() != null) {
    String parentApplicationName=span.getParentApplicationName();
    logger.debug("Received parent application name. {}",parentApplicationName);
    ServiceType parentApplicationType=registry.findServiceType(span.getParentApplicationType());
    if (spanServiceType.isQueue()) {
      if (!applicationServiceType.isQueue() && !parentApplicationType.isQueue()) {
        hostApplicationMapDao.insert(span.getRemoteAddr(),span.getAcceptorHost(),spanServiceType.getCode(),parentApplicationName,parentApplicationType.getCode());
        statisticsHandler.updateCaller(span.getAcceptorHost(),spanServiceType,span.getRemoteAddr(),span.getApplicationName(),applicationServiceType,span.getEndPoint(),span.getElapsed(),isError);
        parentApplicationName=span.getAcceptorHost();
        parentApplicationType=spanServiceType;
      }
    }
    statisticsHandler.updateCallee(span.getApplicationName(),applicationServiceType,parentApplicationName,parentApplicationType,span.getAgentId(),span.getElapsed(),isError);
    bugCheck++;
  }
  statisticsHandler.updateResponseTime(span.getApplicationName(),applicationServiceType,span.getAgentId(),span.getElapsed(),isError);
  if (bugCheck != 1) {
    logger.warn("ambiguous span found(bug). span:{}",span);
  }
}
