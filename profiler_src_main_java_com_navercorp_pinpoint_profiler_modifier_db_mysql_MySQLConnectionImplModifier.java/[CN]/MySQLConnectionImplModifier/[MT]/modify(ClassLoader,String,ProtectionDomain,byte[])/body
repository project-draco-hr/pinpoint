{
  if (logger.isInfoEnabled()) {
    logger.info("Modifying. {}",javassistClassName);
  }
  try {
    InstrumentClass mysqlConnection=byteCodeInstrumentor.getClass(classLoader,javassistClassName,classFileBuffer);
    mysqlConnection.addTraceValue(DatabaseInfoTraceValue.class);
    Interceptor connectionUrlBindInterceptor=new MySQLConnectionCreateInterceptor();
    mysqlConnection.addConstructorInterceptor(new String[]{"java.lang.String","int","java.util.Properties","java.lang.String","java.lang.String"},connectionUrlBindInterceptor);
    Interceptor closeConnection=new ConnectionCloseInterceptor();
    mysqlConnection.addGroupInterceptor("close",null,closeConnection,MYSQLScope.SCOPE_NAME);
    Interceptor statementCreateInterceptor1=new StatementCreateInterceptor();
    mysqlConnection.addGroupInterceptor("createStatement",null,statementCreateInterceptor1,MYSQLScope.SCOPE_NAME);
    Interceptor statementCreateInterceptor2=new StatementCreateInterceptor();
    mysqlConnection.addGroupInterceptor("createStatement",new String[]{"int","int"},statementCreateInterceptor2,MYSQLScope.SCOPE_NAME);
    Interceptor statementCreateInterceptor3=new StatementCreateInterceptor();
    mysqlConnection.addGroupInterceptor("createStatement",new String[]{"int","int","int"},statementCreateInterceptor3,MYSQLScope.SCOPE_NAME);
    Interceptor preparedStatementCreateInterceptor1=new PreparedStatementCreateInterceptor();
    mysqlConnection.addGroupInterceptor("prepareStatement",new String[]{"java.lang.String"},preparedStatementCreateInterceptor1,MYSQLScope.SCOPE_NAME);
    Interceptor preparedStatementCreateInterceptor2=new PreparedStatementCreateInterceptor();
    mysqlConnection.addGroupInterceptor("prepareStatement",new String[]{"java.lang.String","int"},preparedStatementCreateInterceptor2,MYSQLScope.SCOPE_NAME);
    Interceptor preparedStatementCreateInterceptor3=new PreparedStatementCreateInterceptor();
    mysqlConnection.addGroupInterceptor("prepareStatement",new String[]{"java.lang.String","int[]"},preparedStatementCreateInterceptor3,MYSQLScope.SCOPE_NAME);
    Interceptor preparedStatementCreateInterceptor4=new PreparedStatementCreateInterceptor();
    mysqlConnection.addGroupInterceptor("prepareStatement",new String[]{"java.lang.String","java.lang.String[]"},preparedStatementCreateInterceptor4,MYSQLScope.SCOPE_NAME);
    Interceptor preparedStatementCreateInterceptor5=new PreparedStatementCreateInterceptor();
    mysqlConnection.addGroupInterceptor("prepareStatement",new String[]{"java.lang.String","int","int"},preparedStatementCreateInterceptor5,MYSQLScope.SCOPE_NAME);
    Interceptor preparedStatementCreateInterceptor6=new PreparedStatementCreateInterceptor();
    mysqlConnection.addGroupInterceptor("prepareStatement",new String[]{"java.lang.String","int","int","int"},preparedStatementCreateInterceptor6,MYSQLScope.SCOPE_NAME);
    if (this.logger.isInfoEnabled()) {
      this.logger.info("{} class is converted.",javassistClassName);
    }
    return mysqlConnection.toBytecode();
  }
 catch (  InstrumentException e) {
    if (logger.isWarnEnabled()) {
      logger.warn("{} modify fail. Cause:{}",this.getClass().getSimpleName(),e.getMessage(),e);
    }
    return null;
  }
}
