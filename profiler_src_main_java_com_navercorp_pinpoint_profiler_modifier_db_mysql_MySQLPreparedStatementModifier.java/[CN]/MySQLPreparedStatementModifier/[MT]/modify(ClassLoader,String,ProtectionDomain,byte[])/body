{
  if (logger.isInfoEnabled()) {
    logger.info("Modifying. {}",javassistClassName);
  }
  try {
    InstrumentableClass preparedStatement=byteCodeInstrumentor.getClass(classLoader,javassistClassName,classFileBuffer);
    Interceptor execute=new PreparedStatementExecuteQueryInterceptor();
    preparedStatement.addGroupInterceptor("execute",null,execute,MYSQLScope.SCOPE_NAME);
    Interceptor executeQuery=new PreparedStatementExecuteQueryInterceptor();
    preparedStatement.addGroupInterceptor("executeQuery",null,executeQuery,MYSQLScope.SCOPE_NAME);
    Interceptor executeUpdate=new PreparedStatementExecuteQueryInterceptor();
    preparedStatement.addGroupInterceptor("executeUpdate",null,executeUpdate,MYSQLScope.SCOPE_NAME);
    preparedStatement.addTraceValue(DatabaseInfoTraceValue.class);
    preparedStatement.addTraceValue(ParsingResultTraceValue.class);
    preparedStatement.addTraceValue(BindValueTraceValue.class,"new java.util.HashMap();");
    bindVariableIntercept(preparedStatement,classLoader,protectedDomain);
    return preparedStatement.toBytecode();
  }
 catch (  InstrumentException e) {
    if (logger.isWarnEnabled()) {
      logger.warn("{} modify fail. Cause:{}",this.getClass().getSimpleName(),e.getMessage(),e);
    }
    return null;
  }
}
