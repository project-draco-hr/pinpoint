{
  final PinpointSocketFactory pinpointSocketFactory=new PinpointSocketFactory();
  pinpointSocketFactory.setReconnectDelay(200);
  PinpointSocket socket=null;
  PinpointServerAcceptor serverAcceptor=null;
  try {
    socket=pinpointSocketFactory.scheduledConnect("localhost",bindPort);
    serverAcceptor=PinpointRPCTestUtils.createPinpointServerFactory(bindPort,new TestSeverMessageListener());
    Thread.sleep(2000);
    logger.info("request server---------------------------");
    byte[] randomByte=TestByteUtils.createRandomByte(10);
    byte[] response=PinpointRPCTestUtils.request(socket,randomByte);
    Assert.assertArrayEquals(randomByte,response);
  }
  finally {
    PinpointRPCTestUtils.close(socket);
    pinpointSocketFactory.release();
    PinpointRPCTestUtils.close(serverAcceptor);
  }
}
