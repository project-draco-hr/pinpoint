{
  String type=annotation.type();
  if (type == null) {
    throw new PinpointException("type of @TargetFilter is null: " + interceptorClassName);
  }
  final TraceContext traceContext=pluginContext.getTraceContext();
  final InterceptorArgumentProvider interceptorArgumentProvider=new InterceptorArgumentProvider(traceContext,targetClass);
  AutoBindingObjectFactory filterFactory=new AutoBindingObjectFactory(pluginContext,classLoader,interceptorArgumentProvider);
  MethodFilter filter=(MethodFilter)filterFactory.createInstance(ObjectFactory.byConstructor(type,(Object[])annotation.constructorArguments()));
  MethodRecipe recipe=annotation.singleton() ? new SharedAnnotatedInterceptorInjector(injector) : injector;
  return new FilteringMethodTransformer(new MethodFilter[]{filter},Arrays.<MethodRecipe>asList(recipe),null);
}
