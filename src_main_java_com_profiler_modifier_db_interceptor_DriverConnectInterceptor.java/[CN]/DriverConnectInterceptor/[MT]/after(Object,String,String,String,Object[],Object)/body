{
  if (logger.isLoggable(Level.INFO)) {
    logger.info("after " + StringUtils.toString(target) + " "+ className+ "."+ methodName+ parameterDescription+ " args:"+ Arrays.toString(args)+ " result:"+ result);
  }
  if (logger.isLoggable(Level.FINE)) {
    logger.fine("JDBCScope pop:" + Thread.currentThread().getName());
  }
  JDBCScope.popScope();
  boolean success=InterceptorUtils.isSuccess(result);
  DatabaseInfo databaseInfo=createDatabaseInfo((String)args[0]);
  if (success) {
    this.setUrl.invoke(result,databaseInfo);
  }
  TraceContext traceContext=TraceContext.getTraceContext();
  Trace trace=traceContext.currentTraceObject();
  if (trace == null) {
    return;
  }
  trace.recordRpcName(databaseInfo.getType() + "/" + databaseInfo.getDatabaseId(),databaseInfo.getUrl());
  trace.recordTerminalEndPoint(databaseInfo.getUrl());
  trace.recordApi(descriptor,new Object[]{args[0]});
  trace.recordException(result);
  trace.markAfterTime();
  trace.traceBlockEnd();
}
