{
  if (isDebug) {
    LoggingUtils.logAfter(logger,target,className,methodName,parameterDescription,args,result);
    logger.fine("JDBCScope pop:" + Thread.currentThread().getName());
  }
  JDBCScope.popScope();
  boolean success=InterceptorUtils.isSuccess(result);
  DatabaseInfo databaseInfo=createDatabaseInfo((String)args[0]);
  if (success) {
    this.setUrl.invoke(result,databaseInfo);
  }
  TraceContext traceContext=TraceContext.getTraceContext();
  Trace trace=traceContext.currentTraceObject();
  if (trace == null) {
    return;
  }
  trace.recordServiceType(databaseInfo.getType());
  trace.recordRpcName(databaseInfo.getUrl());
  trace.recordEndPoint(databaseInfo.getUrl());
  trace.recordDestinationId(databaseInfo.getDatabaseId());
  trace.recordDestinationAddress(databaseInfo.getHost());
  trace.recordApi(descriptor,new Object[]{args[0]});
  trace.recordException(result);
  trace.markAfterTime();
  trace.traceBlockEnd();
}
