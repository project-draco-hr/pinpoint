{
  if (filterText == null) {
    throw new NullPointerException("filterText must not be null");
  }
  logger.debug("make filter from string. {}",filterText);
  final String[] element=FILTER_ENTRY_DELIMETER.split(filterText);
  if (element.length == 4) {
    return new FromToFilter(element[0],element[1],element[2],element[3]);
  }
 else   if (element.length == 5) {
    String condition=element[4];
    Boolean includeFailed=null;
    long fromResponseTime;
    long toResponseTime;
    String[] conditions=condition.split(",");
    if (conditions.length == 2) {
      fromResponseTime=Long.valueOf(conditions[0]);
      toResponseTime=Long.valueOf(conditions[1]);
    }
 else     if (conditions.length == 3) {
      boolean findError="error".equals(conditions[0]);
      if (!findError) {
        throw new IllegalArgumentException("invalid conditions:" + condition);
      }
      includeFailed=true;
      fromResponseTime=Long.valueOf(conditions[1]);
      toResponseTime=Long.valueOf(conditions[2]);
    }
 else     if (conditions.length == 1) {
      boolean findError="error".equals(conditions[0]);
      if (!findError) {
        throw new IllegalArgumentException("invalid conditions:" + condition);
      }
      includeFailed=true;
      fromResponseTime=0;
      toResponseTime=Long.MAX_VALUE;
    }
 else {
      throw new IllegalArgumentException("invalid conditions:" + condition);
    }
    return new FromToResponseFilter(element[0],element[1],element[2],element[3],fromResponseTime,toResponseTime,includeFailed);
  }
  throw new IllegalArgumentException("Invalid filterText:" + filterText);
}
