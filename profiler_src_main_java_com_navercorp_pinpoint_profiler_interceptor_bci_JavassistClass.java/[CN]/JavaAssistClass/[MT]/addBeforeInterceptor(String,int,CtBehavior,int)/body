{
  final String target=getTargetIdentifier(behavior);
  final String[] parameterType=JavaAssistUtils.parseParameterSignature(behavior.getSignature());
  String parameterDescription=null;
  if (interceptorType == STATIC_INTERCEPTOR) {
    parameterDescription=JavaAssistUtils.getParameterDescription(parameterType);
  }
  final String parameterIdentifier=getParameterIdentifier(parameterType);
  CodeBuilder code=new CodeBuilder();
  code.begin();
  if (interceptorType == STATIC_INTERCEPTOR) {
    code.format("  %1$s interceptor = %2$s.getStaticInterceptor(%3$d);",StaticAroundInterceptor.class.getName(),interceptorRegistryBinder.getInterceptorRegistryClassName(),id);
    code.format("  interceptor.before(%1$s, \"%2$s\", \"%3$s\", \"%4$s\", %5$s);",target,ctClass.getName(),methodName,parameterDescription,parameterIdentifier);
  }
 else {
    code.format("  %1$s interceptor = %2$s.getSimpleInterceptor(%3$d);",SimpleAroundInterceptor.class.getName(),interceptorRegistryBinder.getInterceptorRegistryClassName(),id);
    code.format("  interceptor.before(%1$s, %2$s);",target,parameterIdentifier);
  }
  code.end();
  String buildBefore=code.toString();
  if (isDebug) {
    logger.debug("addStaticBeforeInterceptor catch behavior:{} code:{}",behavior.getLongName(),buildBefore);
  }
  if (behavior instanceof CtConstructor) {
    ((CtConstructor)behavior).insertBeforeBody(buildBefore);
  }
 else {
    behavior.insertBefore(buildBefore);
  }
}
