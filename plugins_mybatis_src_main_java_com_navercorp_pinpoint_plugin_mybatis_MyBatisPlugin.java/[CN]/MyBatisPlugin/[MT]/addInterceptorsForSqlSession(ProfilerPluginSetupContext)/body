{
  final MethodFilter methodFilter=MethodFilters.name("selectOne","selectList","selectMap","select","insert","update","delete");
  final String[] sqlSessionImpls={"org.apache.ibatis.session.defaults.DefaultSqlSession","org.mybatis.spring.SqlSessionTemplate"};
  for (  final String sqlSession : sqlSessionImpls) {
    context.addClassFileTransformer(sqlSession,new PinpointClassFileTransformer(){
      @Override public byte[] transform(      PinpointInstrument instrumentContext,      ClassLoader loader,      String className,      Class<?> classBeingRedefined,      ProtectionDomain protectionDomain,      byte[] classfileBuffer) throws InstrumentException {
        final InstrumentClass target=instrumentContext.getInstrumentClass(loader,sqlSession,classfileBuffer);
        final InterceptorGroup group=instrumentContext.getInterceptorGroup(MYBATIS_SCOPE);
        final List<InstrumentMethod> methodsToTrace=target.getDeclaredMethods(methodFilter);
        for (        InstrumentMethod methodToTrace : methodsToTrace) {
          String sqlSessionOperationInterceptor="com.navercorp.pinpoint.plugin.mybatis.interceptor.SqlSessionOperationInterceptor";
          methodToTrace.addInterceptor(sqlSessionOperationInterceptor,group,ExecutionPolicy.BOUNDARY);
        }
        return target.toBytecode();
      }
    }
);
  }
}
