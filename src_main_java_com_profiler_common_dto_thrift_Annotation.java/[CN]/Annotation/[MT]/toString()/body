{
  StringBuilder sb=new StringBuilder("Annotation(");
  boolean first=true;
  sb.append("key:");
  sb.append(this.key);
  first=false;
  if (isSetStringValue()) {
    if (!first)     sb.append(", ");
    sb.append("stringValue:");
    if (this.stringValue == null) {
      sb.append("null");
    }
 else {
      sb.append(this.stringValue);
    }
    first=false;
  }
  if (isSetBoolValue()) {
    if (!first)     sb.append(", ");
    sb.append("boolValue:");
    sb.append(this.boolValue);
    first=false;
  }
  if (isSetIntValue()) {
    if (!first)     sb.append(", ");
    sb.append("intValue:");
    sb.append(this.intValue);
    first=false;
  }
  if (isSetLongValue()) {
    if (!first)     sb.append(", ");
    sb.append("longValue:");
    sb.append(this.longValue);
    first=false;
  }
  if (isSetShortValue()) {
    if (!first)     sb.append(", ");
    sb.append("shortValue:");
    sb.append(this.shortValue);
    first=false;
  }
  if (isSetDoubleValue()) {
    if (!first)     sb.append(", ");
    sb.append("doubleValue:");
    sb.append(this.doubleValue);
    first=false;
  }
  if (isSetBinaryValue()) {
    if (!first)     sb.append(", ");
    sb.append("binaryValue:");
    if (this.binaryValue == null) {
      sb.append("null");
    }
 else {
      org.apache.thrift.TBaseHelper.toString(this.binaryValue,sb);
    }
    first=false;
  }
  if (isSetByteValue()) {
    if (!first)     sb.append(", ");
    sb.append("byteValue:");
    sb.append(this.byteValue);
    first=false;
  }
  sb.append(")");
  return sb.toString();
}
