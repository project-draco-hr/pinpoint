{
  ClassFileTransformerBuilder builder=context.getClassFileTransformerBuilder("com.fasterxml.jackson.databind.ObjectMapper");
  builder.editConstructor().injectInterceptor("com.navercorp.pinpoint.bootstrap.interceptor.BasicMethodInterceptor",SERVICE_TYPE).group(JACKSON_OBJECTMAPPER_GROUP);
  builder.editConstructor("com.fasterxml.jackson.core.JsonFactory").injectInterceptor("com.navercorp.pinpoint.bootstrap.interceptor.BasicMethodInterceptor",SERVICE_TYPE).group(JACKSON_OBJECTMAPPER_GROUP);
  builder.editConstructor("com.fasterxml.jackson.core.JsonFactory","com.fasterxml.jackson.databind.ser.DefaultSerializerProvider","com.fasterxml.jackson.databind.deser.DefaultDeserializationContext").injectInterceptor("com.navercorp.pinpoint.bootstrap.interceptor.BasicMethodInterceptor",SERVICE_TYPE).group(JACKSON_OBJECTMAPPER_GROUP);
  builder.editMethod("writeValueAsString","java.lang.Object").injectInterceptor("com.navercorp.pinpoint.plugin.jackson.interceptor.ObjectMapperWriteValueInterceptor");
  builder.editMethod("writeValueAsBytes","java.lang.Object").injectInterceptor("com.navercorp.pinpoint.plugin.jackson.interceptor.ObjectMapperWriteValueInterceptor");
  builder.editMethods(new MethodNameFilter("writeValue")).injectInterceptor("com.navercorp.pinpoint.plugin.jackson.interceptor.ObjectMapperWriteValueInterceptor");
  builder.editMethods(new MethodNameFilter("readValue")).injectInterceptor("com.navercorp.pinpoint.plugin.jackson.interceptor.ObjectMapperReadValueInterceptor");
  ClassFileTransformer transformer=builder.build();
  context.addClassFileTransformer(transformer);
}
