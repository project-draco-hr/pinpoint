{
  jvmGcDao=new AgentStatDao<JvmGcBo>(){
    @Override public List<JvmGcBo> getAgentStatList(    String agentId,    Range range){
      return Collections.emptyList();
    }
    @Override public boolean agentStatExists(    String agentId,    Range range){
      return false;
    }
  }
;
  cpuLoadDao=new AgentStatDao<CpuLoadBo>(){
    public List<CpuLoadBo> getAgentStatList(    String agentId,    Range range){
      List<CpuLoadBo> cpuLoads=new LinkedList<>();
      for (int i=0; i < 36; i++) {
        CpuLoadBo cpuLoad=new CpuLoadBo();
        cpuLoad.setJvmCpuLoad(0.6);
        cpuLoads.add(cpuLoad);
      }
      return cpuLoads;
    }
    @Override public boolean agentStatExists(    String agentId,    Range range){
      return true;
    }
  }
;
  applicationIndexDao=new ApplicationIndexDao(){
    @Override public List<Application> selectAllApplicationNames(){
      throw new UnsupportedOperationException();
    }
    @Override public List<String> selectAgentIds(    String applicationName){
      if (SERVICE_NAME.equals(applicationName)) {
        List<String> agentIds=new LinkedList<String>();
        agentIds.add("local_tomcat");
        return agentIds;
      }
      throw new IllegalArgumentException();
    }
    @Override public void deleteApplicationName(    String applicationName){
      throw new UnsupportedOperationException();
    }
    @Override public void deleteAgentIds(    Map<String,List<String>> applicationAgentIdMap){
      throw new UnsupportedOperationException();
    }
    @Override public void deleteAgentId(    String applicationName,    String agentId){
      throw new UnsupportedOperationException();
    }
  }
;
}
