{
  logger.info("{} handshakeStart method started.",simpleClassNameAndHashCodeString());
  if (channel == null) {
    logger.info("{} handshakeStart method failed. channel may not be null.",simpleClassNameAndHashCodeString());
    return;
  }
  if (!channel.isConnected()) {
    logger.info("{} handshakeStart method failed. channel is not connected.",simpleClassNameAndHashCodeString());
    return;
  }
  if (!state.compareAndSet(STATE_INIT,STATE_STARTED)) {
    logger.info("{} handshakeStart method failed. currentState:{}",simpleClassNameAndHashCodeString(),state.get());
    return;
  }
  HandshakeJob handshakeJob=null;
  try {
    handshakeJob=createHandshakeJob(channel,handshakeData);
  }
 catch (  Exception e) {
    if (logger.isWarnEnabled()) {
      logger.warn(simpleClassNameAndHashCodeString() + " create handshake job failed. Error:" + e.getMessage()+ " state will be aborted.",e);
    }
  }
  if (handshakeJob == null) {
    handshakeAbort();
    logger.info("{} handshakeStart method failed.",simpleClassNameAndHashCodeString());
    return;
  }
  handshake(handshakeJob);
  reservationJob(handshakeJob);
  logger.info("{} handshakeStart method completed. channel:{}, data:{}",simpleClassNameAndHashCodeString(),channel,handshakeData);
}
