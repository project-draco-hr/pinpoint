{
  if (logger.isInfoEnabled()) {
    logger.info("Modifing. {}",javassistClassName);
  }
  try {
    InstrumentClass connectorClass=byteCodeInstrumentor.getClass(classLoader,javassistClassName,classFileBuffer);
    connectorClass.addTraceVariable("_serverAddress","__setServerAddress","__getServerAddress","java.net.InetSocketAddress");
    Interceptor constructorInterceptor=byteCodeInstrumentor.newInterceptor(classLoader,protectedDomain,"com.nhn.pinpoint.profiler.modifier.connector.npc.interceptor.ConnectorConstructorInterceptor");
    connectorClass.addConstructorInterceptor(new String[]{"com.nhncorp.lucy.npc.connector.NpcConnectorOption"},constructorInterceptor);
    Interceptor constructorInterceptor2=byteCodeInstrumentor.newInterceptor(classLoader,protectedDomain,"com.nhn.pinpoint.profiler.modifier.connector.npc.interceptor.ConnectorConstructorInterceptor");
    connectorClass.addConstructorInterceptor(new String[]{"java.net.InetSocketAddress","long","long","java.nio.charset.Charset"},constructorInterceptor2);
    Interceptor initializeConnectorInterceptor=byteCodeInstrumentor.newInterceptor(classLoader,protectedDomain,"com.nhn.pinpoint.profiler.modifier.connector.npc.interceptor.InitializeConnectorInterceptor");
    connectorClass.addInterceptor("initializeConnector",null,initializeConnectorInterceptor);
    Interceptor invokeImplInterceptor=new MethodInterceptor();
    connectorClass.addInterceptor("invokeImpl",new String[]{"java.lang.String","java.lang.String","java.nio.charset.Charset","java.lang.Object[]"},invokeImplInterceptor);
    Interceptor invokeInterceptor=new InvokeInterceptor();
    connectorClass.addInterceptor("invoke",new String[]{"java.lang.String","java.lang.String","java.nio.charset.Charset","java.lang.Object[]"},invokeInterceptor);
    return connectorClass.toBytecode();
  }
 catch (  Throwable e) {
    logger.warn(this.getClass().getSimpleName() + " modifier error. Caused:{}",e.getMessage(),e);
    return null;
  }
}
