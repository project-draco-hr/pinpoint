{
  if (agentLevelMap.size() == 0) {
    return Collections.emptyMap();
  }
  Map<Application,Map<Long,TimeHistogram>> windowTimeMap=new HashMap<Application,Map<Long,TimeHistogram>>();
  for (  AgentHistogram agentHistogram : agentLevelMap.getAgentHistogramList()) {
    Map<Long,TimeHistogram> timeMap=new HashMap<Long,TimeHistogram>();
    for (    Long time : window) {
      timeMap.put(time,new TimeHistogram(application.getServiceType(),time));
    }
    windowTimeMap.put(agentHistogram.getAgentId(),timeMap);
  }
  for (  AgentHistogram agentHistogram : agentLevelMap.getAgentHistogramList()) {
    for (    TimeHistogram timeHistogram : agentHistogram.getTimeHistogram()) {
      final Long time=window.refineTimestamp(timeHistogram.getTimeStamp());
      Map<Long,TimeHistogram> findSlot=windowTimeMap.get(agentHistogram.getAgentId());
      TimeHistogram windowHistogram=findSlot.get(time);
      if (windowHistogram == null) {
        windowHistogram=new TimeHistogram(application.getServiceType(),time);
        findSlot.put(time,windowHistogram);
      }
      windowHistogram.add(timeHistogram);
    }
  }
  return windowTimeMap;
}
