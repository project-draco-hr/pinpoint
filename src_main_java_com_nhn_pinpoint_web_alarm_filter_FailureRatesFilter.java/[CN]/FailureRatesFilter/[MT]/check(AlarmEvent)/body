{
  logger.debug("{} check.",this.getClass().getSimpleName());
  MapStatisticsCallerDao dao=event.getMapStatisticsCallerDao();
  if (dao == null) {
    logger.warn("{} object is null.",MapStatisticsCallerDao.class.getSimpleName());
    return false;
  }
  long startEventTimeMillis=event.getEventStartTimeMillis();
  int continuationTime=getRule().getContinuosTime();
  Range range=Range.createUncheckedRange(startEventTimeMillis - continuationTime,startEventTimeMillis);
  LinkDataMap linkDataMap=dao.selectCaller(application,range);
  for (  LinkData linkData : linkDataMap.getLinkDataList()) {
    Application toApplication=linkData.getToApplication();
    if (toApplication.getServiceType().isTerminal() || toApplication.getServiceType().isUnknown()) {
      logger.debug("Application({}) is invalid serviceType. this is skip.",toApplication.getName());
      continue;
    }
    AgentHistogramList sourceList=linkData.getSourceList();
    Collection<AgentHistogram> agentHistogramList=sourceList.getAgentHistogramList();
    boolean isSatisFied=checkRates(toApplication,agentHistogramList);
    if (isSatisFied) {
      return true;
    }
  }
  return false;
}
