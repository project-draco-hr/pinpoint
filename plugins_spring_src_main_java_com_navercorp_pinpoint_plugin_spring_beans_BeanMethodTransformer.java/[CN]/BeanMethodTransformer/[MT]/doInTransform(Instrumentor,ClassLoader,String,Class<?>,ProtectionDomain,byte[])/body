{
  if (logger.isInfoEnabled()) {
    logger.info("Modify {}",className);
  }
  try {
    final InstrumentClass target=instrumentor.getInstrumentClass(loader,className,classfileBuffer);
    if (!target.isInterceptable()) {
      return null;
    }
    final List<InstrumentMethod> methodList=target.getDeclaredMethods(METHOD_FILTER);
    for (    InstrumentMethod method : methodList) {
      if (logger.isDebugEnabled()) {
        logger.debug("### c={}, m={}, params={}",className,method.getName(),Arrays.toString(method.getParameterTypes()));
      }
      addInterceptor(method);
    }
    return target.toBytecode();
  }
 catch (  Exception e) {
    logger.warn("modify fail. Cause:{}",e.getMessage(),e);
    return null;
  }
}
