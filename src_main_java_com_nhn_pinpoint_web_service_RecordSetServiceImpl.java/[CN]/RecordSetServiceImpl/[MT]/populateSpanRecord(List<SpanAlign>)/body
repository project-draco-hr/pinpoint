{
  List<Record> recordList=new ArrayList<Record>(spanAlignList.size() * 2);
  Integer annotationSeq=spanAlignList.size() + 1;
  Deque<Integer> stack=new LinkedList<Integer>();
  stack.add(-1);
  int prevDepth=0;
  for (int i=0; i < spanAlignList.size(); i++) {
    SpanAlign spanAlign=spanAlignList.get(i);
    int parentSeq;
    int currentSeq=spanAlign.getSequence();
    int currentDepth=spanAlign.getDepth();
    if (i == 0) {
      parentSeq=-1;
      prevDepth=currentDepth;
      stack.add(currentSeq);
    }
 else {
      if (prevDepth < currentDepth) {
        parentSeq=stack.getLast();
        stack.add(currentSeq);
      }
 else       if (prevDepth > currentDepth) {
        stack.pollLast();
        parentSeq=stack.getLast();
      }
 else {
        parentSeq=stack.getLast();
      }
      prevDepth=currentDepth;
    }
    if (spanAlign.isSpan()) {
      SpanBo spanBo=spanAlign.getSpanBo();
      String argument=getRpcArgument(spanBo);
      long begin=spanBo.getStartTime();
      long elapsed=spanBo.getElapsed();
      String method=AnnotationUtils.findApiAnnotation(spanBo.getAnnotationBoList());
      if (method != null) {
        ApiDescription apiDescription=apiDescriptionParser.parse(method);
        Record record=new Record(spanAlign.getDepth(),spanAlign.getSequence(),parentSeq,true,apiDescription.getSimpleMethodDescription(),argument,begin,elapsed,spanBo.getAgentId(),spanBo.getApplicationId(),spanBo.getServiceType(),null,spanAlign.isHasChild());
        record.setSimpleClassName(apiDescription.getSimpleClassName());
        record.setFullApiDescription(method);
        recordList.add(record);
      }
 else {
        AnnotationKey apiMetaDataError=AnnotationUtils.getApiMetaDataError(spanBo.getAnnotationBoList());
        Record record=new Record(spanAlign.getDepth(),spanAlign.getSequence(),parentSeq,true,apiMetaDataError.getValue(),argument,begin,elapsed,spanBo.getAgentId(),spanBo.getApplicationId(),spanBo.getServiceType(),null,spanAlign.isHasChild());
        record.setSimpleClassName("");
        record.setFullApiDescription("");
        recordList.add(record);
      }
      List<Record> annotationRecord=createAnnotationRecord(spanAlign.getDepth() + 1,annotationSeq++,parentSeq,spanBo.getAnnotationBoList());
      recordList.addAll(annotationRecord);
      if (spanBo.getRemoteAddr() != null) {
        Record remoteAddress=createParameterRecord(spanAlign.getDepth() + 1,annotationSeq++,parentSeq,"REMOTE_ADDRESS",spanBo.getRemoteAddr());
        recordList.add(remoteAddress);
      }
    }
 else {
      SpanEventBo spanEventBo=spanAlign.getSpanEventBo();
      String argument=getDisplayArgument(spanEventBo);
      final String method=AnnotationUtils.findApiAnnotation(spanEventBo.getAnnotationBoList());
      if (method != null) {
        ApiDescription apiDescription=apiDescriptionParser.parse(method);
        String destinationId=spanEventBo.getDestinationId();
        long begin=spanAlign.getSpanBo().getStartTime() + spanEventBo.getStartElapsed();
        long elapsed=spanEventBo.getEndElapsed();
        Record record=new Record(spanAlign.getDepth(),spanAlign.getSequence(),parentSeq,true,apiDescription.getSimpleMethodDescription(),argument,begin,elapsed,spanEventBo.getAgentId(),spanEventBo.getDestinationId(),spanEventBo.getServiceType(),destinationId,spanAlign.isHasChild());
        record.setSimpleClassName(apiDescription.getSimpleClassName());
        record.setFullApiDescription(method);
        recordList.add(record);
      }
 else {
        AnnotationKey apiMetaDataError=AnnotationUtils.getApiMetaDataError(spanEventBo.getAnnotationBoList());
        String destinationId=spanEventBo.getDestinationId();
        long begin=spanAlign.getSpanBo().getStartTime() + spanEventBo.getStartElapsed();
        long elapsed=spanEventBo.getEndElapsed();
        Record record=new Record(spanAlign.getDepth(),spanAlign.getSequence(),parentSeq,true,apiMetaDataError.getValue(),argument,begin,elapsed,spanEventBo.getAgentId(),spanEventBo.getDestinationId(),spanEventBo.getServiceType(),destinationId,spanAlign.isHasChild());
        record.setSimpleClassName("");
        record.setFullApiDescription(method);
        recordList.add(record);
      }
      List<Record> annotationRecord=createAnnotationRecord(spanAlign.getDepth() + 1,annotationSeq++,parentSeq,spanEventBo.getAnnotationBoList());
      recordList.addAll(annotationRecord);
    }
  }
  return recordList;
}
