{
  ClassPool pool=ClassPool.getDefault();
  CtClass ctClass=pool.get("com.nhn.pinpoint.profiler.interceptor.bci.TestObject");
  CtClass object=pool.get("java.lang.String");
  System.out.println(ctClass);
  CtMethod callA=ctClass.getDeclaredMethod("callA",null);
  System.out.println(callA);
  callA.addLocalVariable("__test",object);
  String inti="__test = \"abc\";";
  callA.insertBefore("{com.nhn.pinpoint.profiler.interceptor.bci.TestObject.before();}");
  callA.insertAfter("{com.nhn.pinpoint.profiler.interceptor.bci.TestObject.after();}");
  callA.addCatch("{ com.nhn.pinpoint.profiler.interceptor.bci.TestObject.callCatch(); throw $e; }",pool.get("java.lang.Throwable"));
  Class aClass=ctClass.toClass();
  java.lang.reflect.Method callA1=aClass.getMethod("callA");
  Object target=aClass.newInstance();
  try {
    Object result=callA1.invoke(target);
    System.out.println(result);
  }
 catch (  IllegalAccessException e) {
    e.printStackTrace();
  }
catch (  IllegalArgumentException e) {
    e.printStackTrace();
  }
catch (  InvocationTargetException e) {
    e.printStackTrace();
  }
  ctClass.debugWriteFile("./TestObjectAAA.class");
}
