{
  Object message=e.getMessage();
  if (message instanceof Packet) {
    final Packet packet=(Packet)message;
    final short packetType=packet.getPacketType();
    final Channel channel=e.getChannel();
    logger.debug("messageReceived:{} channel:{}",message,channel);
switch (packetType) {
case PacketType.APPLICATION_SEND:
{
        SocketChannel socketChannel=getChannelContext(e.getChannel()).getSocketChannel();
        messageListener.handleSend((SendPacket)message,socketChannel);
        return;
      }
case PacketType.APPLICATION_REQUEST:
{
      SocketChannel socketChannel=getChannelContext(e.getChannel()).getSocketChannel();
      messageListener.handleRequest((RequestPacket)message,socketChannel);
      return;
    }
case PacketType.APPLICATION_STREAM_CREATE:
case PacketType.APPLICATION_STREAM_CLOSE:
case PacketType.APPLICATION_STREAM_CREATE_SUCCESS:
case PacketType.APPLICATION_STREAM_CREATE_FAIL:
case PacketType.APPLICATION_STREAM_RESPONSE:
  handleStreamPacket((StreamPacket)message,e.getChannel());
return;
default :
logger.warn("invalid messageReceived msg:{}, connection:{}",message,e.getChannel());
}
}
 else {
logger.warn("invalid messageReceived msg:{}, connection:{}",message,e.getChannel());
}
}
