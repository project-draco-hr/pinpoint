{
  CallHistogram callHistogram=new CallHistogram("test",ServiceType.TOMCAT);
  TimeHistogram histogram=new TimeHistogram(ServiceType.TOMCAT,0);
  histogram.addCallCount(ServiceType.TOMCAT.getHistogramSchema().getErrorSlot().getSlotTime(),1);
  callHistogram.addTimeHistogram(histogram);
  CallHistogram copy=new CallHistogram(callHistogram);
  logger.debug(copy.getHistogram().toString());
  Assert.assertEquals(copy.getHistogram().getErrorCount(),1);
  TimeHistogram histogram2=new TimeHistogram(ServiceType.TOMCAT,0);
  histogram2.addCallCount(ServiceType.TOMCAT.getHistogramSchema().getErrorSlot().getSlotTime(),2);
  callHistogram.addTimeHistogram(histogram2);
  Assert.assertEquals(callHistogram.getHistogram().getErrorCount(),3);
  String callJson=mapper.writeValueAsString(callHistogram);
  String before=originalJson(callHistogram);
  logger.debug("callJson:{}",callJson);
  HashMap callJsonHashMap=mapper.readValue(callJson,HashMap.class);
  logger.debug("before:{}",before);
  HashMap beforeJsonHashMap=mapper.readValue(before,HashMap.class);
  logger.debug("{} {}",callJsonHashMap,beforeJsonHashMap);
  Assert.assertEquals(callJsonHashMap,beforeJsonHashMap);
}
