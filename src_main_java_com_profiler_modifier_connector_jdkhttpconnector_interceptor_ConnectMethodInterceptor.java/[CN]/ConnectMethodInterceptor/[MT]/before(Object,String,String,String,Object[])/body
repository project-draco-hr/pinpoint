{
  if (isDebug) {
    logger.beforeInterceptor(target,className,methodName,parameterDescription,args);
  }
  Trace trace=traceContext.currentTraceObject();
  if (trace == null) {
    return;
  }
  trace.traceBlockBegin();
  trace.markBeforeTime();
  TraceID nextId=trace.getTraceId().getNextTraceId();
  trace.recordNextSpanId(nextId.getSpanId());
  HttpURLConnection request=(HttpURLConnection)target;
  request.setRequestProperty(Header.HTTP_TRACE_ID.toString(),nextId.getId().toString());
  request.setRequestProperty(Header.HTTP_SPAN_ID.toString(),Integer.toString(nextId.getSpanId()));
  request.setRequestProperty(Header.HTTP_PARENT_SPAN_ID.toString(),Integer.toString(nextId.getParentSpanId()));
  request.setRequestProperty(Header.HTTP_SAMPLED.toString(),String.valueOf(nextId.isSampled()));
  request.setRequestProperty(Header.HTTP_FLAGS.toString(),String.valueOf(nextId.getFlags()));
  request.setRequestProperty(Header.HTTP_PARENT_APPLICATION_NAME.toString(),traceContext.getApplicationId());
  request.setRequestProperty(Header.HTTP_PARENT_APPLICATION_TYPE.toString(),String.valueOf(ServiceType.TOMCAT.getCode()));
  trace.recordServiceType(ServiceType.JDK_HTTPURLCONNECTOR);
  String host=request.getURL().getHost();
  int port=request.getURL().getPort();
  trace.recordDestinationId(host + ((port > 0) ? ":" + port : ""));
  trace.recordAttribute(AnnotationKey.HTTP_URL,request.getURL().toString());
}
