{
  transformTemplate.transform("cubrid.jdbc.driver.CUBRIDPreparedStatement",new TransformCallback(){
    @Override public byte[] doInTransform(    Instrumentor instrumentContext,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      InstrumentClass target=instrumentContext.getInstrumentClass(loader,className,classfileBuffer);
      target.addField("com.navercorp.pinpoint.bootstrap.plugin.jdbc.DatabaseInfoAccessor");
      target.addField("com.navercorp.pinpoint.bootstrap.plugin.jdbc.ParsingResultAccessor");
      target.addField("com.navercorp.pinpoint.bootstrap.plugin.jdbc.BindValueAccessor");
      int maxBindValueSize=config.getMaxSqlBindValueSize();
      target.addScopedInterceptor("com.navercorp.pinpoint.bootstrap.plugin.jdbc.interceptor.PreparedStatementExecuteQueryInterceptor",va(maxBindValueSize),CubridConstants.CUBRID_SCOPE);
      target.addScopedInterceptor("com.navercorp.pinpoint.bootstrap.plugin.jdbc.interceptor.PreparedStatementBindVariableInterceptor",CubridConstants.CUBRID_SCOPE);
      return target.toBytecode();
    }
  }
);
}
