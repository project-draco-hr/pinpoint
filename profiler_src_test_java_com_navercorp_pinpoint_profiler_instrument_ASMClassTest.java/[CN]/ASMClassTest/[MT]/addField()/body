{
  ASMClass clazz=getClass("com.navercorp.pinpoint.profiler.instrument.mock.BaseClass");
  clazz.addField("com.navercorp.pinpoint.profiler.instrument.mock.accessor.IntAccessor");
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_setTraceInt","int"));
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_getTraceInt"));
  clazz=getClass("com.navercorp.pinpoint.profiler.instrument.mock.BaseClass");
  clazz.addField("com.navercorp.pinpoint.profiler.instrument.mock.accessor.IntArrayAccessor");
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_setTraceIntArray","int[]"));
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_getTraceIntArray"));
  clazz=getClass("com.navercorp.pinpoint.profiler.instrument.mock.BaseClass");
  clazz.addField("com.navercorp.pinpoint.profiler.instrument.mock.accessor.IntArraysAccessor");
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_setTraceIntArrays","int[][]"));
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_getTraceIntArrays"));
  clazz=getClass("com.navercorp.pinpoint.profiler.instrument.mock.BaseClass");
  clazz.addField("com.navercorp.pinpoint.profiler.instrument.mock.accessor.ObjectAccessor");
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_setTraceObject","java.lang.Object"));
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_getTraceObject"));
  clazz=getClass("com.navercorp.pinpoint.profiler.instrument.mock.BaseClass");
  clazz.addField("com.navercorp.pinpoint.profiler.instrument.mock.accessor.ObjectArrayAccessor");
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_setTraceObjectArray","java.lang.Object[]"));
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_getTraceObjectArray"));
  clazz=getClass("com.navercorp.pinpoint.profiler.instrument.mock.BaseClass");
  clazz.addField("com.navercorp.pinpoint.profiler.instrument.mock.accessor.ObjectArraysAccessor");
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_setTraceObjectArrays","java.lang.Object[][]"));
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_getTraceObjectArrays"));
  clazz=getClass("com.navercorp.pinpoint.profiler.instrument.mock.BaseClass");
  clazz.addField("com.navercorp.pinpoint.profiler.instrument.mock.accessor.PublicStrAccessor");
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_setTracePublicStr","java.lang.String"));
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_getTracePublicStr"));
  clazz=getClass("com.navercorp.pinpoint.profiler.instrument.mock.BaseClass");
  clazz.addField("com.navercorp.pinpoint.profiler.instrument.mock.accessor.ThrowExceptionAccessor");
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_setTraceDefaultStr","java.lang.String"));
  assertNotNull(clazz.getDeclaredMethod("_$PINPOINT$_getTraceDefaultStr"));
}
