{
  ASMClass clazz=getClass("com.navercorp.pinpoint.profiler.instrument.mock.BaseClass");
  assertTrue(clazz.hasField("s"));
  assertFalse(clazz.hasField("notExists"));
  assertTrue(clazz.hasField("b","boolean"));
  assertTrue(clazz.hasField("s","java.lang.String"));
  clazz=getClass("com.navercorp.pinpoint.profiler.instrument.mock.ExtendedClass");
  assertTrue(clazz.hasField("s"));
  assertTrue(clazz.hasField("e"));
  clazz=getClass("com.navercorp.pinpoint.profiler.instrument.mock.FieldClass");
  assertTrue(clazz.hasField("b"));
  assertTrue(clazz.hasField("s"));
  assertTrue(clazz.hasField("i"));
  assertTrue(clazz.hasField("l"));
  assertTrue(clazz.hasField("f"));
  assertTrue(clazz.hasField("d"));
  assertTrue(clazz.hasField("y"));
  assertTrue(clazz.hasField("c"));
  assertTrue(clazz.hasField("bArray"));
  assertTrue(clazz.hasField("sArray"));
  assertTrue(clazz.hasField("iArray"));
  assertTrue(clazz.hasField("lArray"));
  assertTrue(clazz.hasField("fArray"));
  assertTrue(clazz.hasField("dArray"));
  assertTrue(clazz.hasField("yArray"));
  assertTrue(clazz.hasField("cArray"));
  assertTrue(clazz.hasField("bArrays"));
  assertTrue(clazz.hasField("sArrays"));
  assertTrue(clazz.hasField("iArrays"));
  assertTrue(clazz.hasField("lArrays"));
  assertTrue(clazz.hasField("fArrays"));
  assertTrue(clazz.hasField("dArrays"));
  assertTrue(clazz.hasField("yArrays"));
  assertTrue(clazz.hasField("cArrays"));
  assertTrue(clazz.hasField("str"));
  assertTrue(clazz.hasField("object"));
  assertTrue(clazz.hasField("publicStaticFinalStr"));
  assertTrue(clazz.hasField("volatileInt"));
  assertTrue(clazz.hasField("transientInt"));
}
