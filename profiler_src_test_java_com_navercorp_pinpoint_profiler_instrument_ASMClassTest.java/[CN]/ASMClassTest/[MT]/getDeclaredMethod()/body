{
  ASMClass clazz=getClass("com.navercorp.pinpoint.profiler.instrument.mock.ArgsClass");
  assertNull(clazz.getDeclaredMethod("notExists"));
  assertNotNull(clazz.getDeclaredMethod("arg"));
  assertNotNull(clazz.getDeclaredMethod("argByteType","byte"));
  assertNotNull(clazz.getDeclaredMethod("argShortType","short"));
  assertNotNull(clazz.getDeclaredMethod("argIntType","int"));
  assertNotNull(clazz.getDeclaredMethod("argFloatType","float"));
  assertNotNull(clazz.getDeclaredMethod("argDoubleType","double"));
  assertNotNull(clazz.getDeclaredMethod("argBooleanType","boolean"));
  assertNotNull(clazz.getDeclaredMethod("argCharType","char"));
  assertNotNull(clazz.getDeclaredMethod("argByteArrayType","byte[]"));
  assertNotNull(clazz.getDeclaredMethod("argShortArrayType","short[]"));
  assertNotNull(clazz.getDeclaredMethod("argIntArrayType","int[]"));
  assertNotNull(clazz.getDeclaredMethod("argFloatArrayType","float[]"));
  assertNotNull(clazz.getDeclaredMethod("argDoubleArrayType","double[]"));
  assertNotNull(clazz.getDeclaredMethod("argBooleanArrayType","boolean[]"));
  assertNotNull(clazz.getDeclaredMethod("argCharArrayType","char[]"));
  assertNotNull(clazz.getDeclaredMethod("argByteArraysType","byte[][]"));
  assertNotNull(clazz.getDeclaredMethod("argShortArraysType","short[][]"));
  assertNotNull(clazz.getDeclaredMethod("argIntArraysType","int[][]"));
  assertNotNull(clazz.getDeclaredMethod("argFloatArraysType","float[][]"));
  assertNotNull(clazz.getDeclaredMethod("argDoubleArraysType","double[][]"));
  assertNotNull(clazz.getDeclaredMethod("argBooleanArraysType","boolean[][]"));
  assertNotNull(clazz.getDeclaredMethod("argCharArraysType","char[][]"));
  assertNotNull(clazz.getDeclaredMethod("argAllType","byte","short","int","float","double","boolean","char","byte[]","short[]","int[]","float[]","double[]","boolean[]","char[]","byte[][]","short[][]","int[][]","float[][]","double[][]","boolean[][]","char[][]"));
  assertNotNull(clazz.getDeclaredMethod("argObject","java.lang.String","java.lang.Object","java.lang.Byte","java.lang.Short","java.lang.Integer","java.lang.Long","java.lang.Float","java.lang.Double","java.lang.Boolean","java.lang.Character","java.lang.String[]","java.lang.Object[]","java.lang.Byte[]","java.lang.Short[]","java.lang.Integer[]","java.lang.Long[]","java.lang.Float[]","java.lang.Double[]","java.lang.Boolean[]","java.lang.Character[]","java.lang.String[][]","java.lang.Object[][]","java.lang.Byte[][]","java.lang.Short[][]","java.lang.Integer[][]","java.lang.Long[][]","java.lang.Float[][]","java.lang.Double[][]","java.lang.Boolean[][]","java.lang.Character[][]"));
  assertNotNull(clazz.getDeclaredMethod("argArgs","java.lang.Object[]"));
  assertNotNull(clazz.getDeclaredMethod("argInterface","java.util.Map","java.util.Map","java.util.Map"));
  assertNotNull(clazz.getDeclaredMethod("argEnum","java.lang.Enum"));
  assertNotNull(clazz.getDeclaredMethod("argEnumArray","java.lang.Enum[]"));
  assertNotNull(clazz.getDeclaredMethod("argEnumArrays","java.lang.Enum[][]"));
  clazz=getClass("com.navercorp.pinpoint.profiler.instrument.mock.ExtendedClass");
  assertNull(clazz.getDeclaredMethod("base"));
}
