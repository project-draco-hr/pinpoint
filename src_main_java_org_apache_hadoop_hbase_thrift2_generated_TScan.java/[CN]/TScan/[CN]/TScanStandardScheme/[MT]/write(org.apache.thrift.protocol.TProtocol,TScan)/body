{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.startRow != null) {
    if (struct.isSetStartRow()) {
      oprot.writeFieldBegin(START_ROW_FIELD_DESC);
      oprot.writeBinary(struct.startRow);
      oprot.writeFieldEnd();
    }
  }
  if (struct.stopRow != null) {
    if (struct.isSetStopRow()) {
      oprot.writeFieldBegin(STOP_ROW_FIELD_DESC);
      oprot.writeBinary(struct.stopRow);
      oprot.writeFieldEnd();
    }
  }
  if (struct.columns != null) {
    if (struct.isSetColumns()) {
      oprot.writeFieldBegin(COLUMNS_FIELD_DESC);
{
        oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,struct.columns.size()));
        for (        TColumn _iter43 : struct.columns) {
          _iter43.write(oprot);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (struct.isSetCaching()) {
    oprot.writeFieldBegin(CACHING_FIELD_DESC);
    oprot.writeI32(struct.caching);
    oprot.writeFieldEnd();
  }
  if (struct.isSetMaxVersions()) {
    oprot.writeFieldBegin(MAX_VERSIONS_FIELD_DESC);
    oprot.writeI32(struct.maxVersions);
    oprot.writeFieldEnd();
  }
  if (struct.timeRange != null) {
    if (struct.isSetTimeRange()) {
      oprot.writeFieldBegin(TIME_RANGE_FIELD_DESC);
      struct.timeRange.write(oprot);
      oprot.writeFieldEnd();
    }
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
