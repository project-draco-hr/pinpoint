{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  TScan typedOther=(TScan)other;
  lastComparison=Boolean.valueOf(isSetStartRow()).compareTo(typedOther.isSetStartRow());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStartRow()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.startRow,typedOther.startRow);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetStopRow()).compareTo(typedOther.isSetStopRow());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStopRow()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.stopRow,typedOther.stopRow);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetColumns()).compareTo(typedOther.isSetColumns());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumns()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.columns,typedOther.columns);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetCaching()).compareTo(typedOther.isSetCaching());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetCaching()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.caching,typedOther.caching);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMaxVersions()).compareTo(typedOther.isSetMaxVersions());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMaxVersions()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.maxVersions,typedOther.maxVersions);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTimeRange()).compareTo(typedOther.isSetTimeRange());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTimeRange()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.timeRange,typedOther.timeRange);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
