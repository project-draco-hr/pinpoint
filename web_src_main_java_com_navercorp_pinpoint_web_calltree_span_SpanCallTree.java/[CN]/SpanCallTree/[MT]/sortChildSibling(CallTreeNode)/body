{
  if (!parent.hasChild() || !parent.getChild().hasSibling()) {
    return;
  }
  final List<CallTreeNode> nodes=getChildSiblingNodes(parent);
  if (nodes == null) {
    return;
  }
  Collections.sort(nodes,new Comparator<CallTreeNode>(){
    @Override public int compare(    CallTreeNode source,    CallTreeNode target){
      return (int)(source.getValue().getStartTime() - target.getValue().getStartTime());
    }
  }
);
  CallTreeNode prev=null;
  for (  CallTreeNode node : nodes) {
    final CallTreeNode reset=null;
    node.setSibling(reset);
    if (prev == null) {
      parent.setChild(node);
      prev=node;
    }
 else {
      prev.setSibling(node);
      prev=node;
    }
  }
}
