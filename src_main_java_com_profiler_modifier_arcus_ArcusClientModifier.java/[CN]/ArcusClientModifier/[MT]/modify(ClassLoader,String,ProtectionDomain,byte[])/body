{
  if (logger.isLoggable(Level.INFO)) {
    logger.info("Modifing. " + javassistClassName);
  }
  try {
    InstrumentClass aClass=byteCodeInstrumentor.getClass(javassistClassName);
    aClass.addTraceVariable("__asyncTrace","__setAsyncTrace","__getAsyncTrace","java.lang.Object");
    aClass.addConstructorInterceptor(null,new ConstructInterceptor());
    Interceptor transitionStateInterceptor=newInterceptor(classLoader,protectedDomain,"com.profiler.modifier.arcus.interceptors.BaseOperationTransitionStateInterceptor");
    aClass.addInterceptor("transitionState",new String[]{"net.spy.memcached.ops.OperationState"},transitionStateInterceptor);
    Interceptor cancelInterceptor=newInterceptor(classLoader,protectedDomain,"com.profiler.modifier.arcus.interceptors.BaseOperationCancelInterceptor");
    aClass.addInterceptor("cancel",null,cancelInterceptor);
    return aClass.toBytecode();
  }
 catch (  Exception e) {
    if (logger.isLoggable(Level.WARNING)) {
      logger.log(Level.WARNING,e.getMessage(),e);
    }
    return null;
  }
}
