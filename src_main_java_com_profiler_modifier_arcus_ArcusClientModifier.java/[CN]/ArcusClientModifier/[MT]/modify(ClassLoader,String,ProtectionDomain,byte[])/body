{
  if (logger.isLoggable(Level.INFO)) {
    logger.info("Modifing. " + javassistClassName);
  }
  try {
    classLoader.loadClass("net.spy.memcached.ops.OperationState");
    CtClass cc=classPool.get(javassistClassName);
    CtClass[] params1=new CtClass[1];
    params1[0]=classPool.getCtClass("net.spy.memcached.ops.OperationState");
    CtMethod transitionStateMethod=cc.getDeclaredMethod("transitionState",params1);
    StringBuilder code=new StringBuilder();
    code.append("{");
    code.append("if (newState == net.spy.memcached.ops.OperationState.READING) {");
    code.append("	java.net.SocketAddress socketAddress = handlingNode.getSocketAddress();");
    code.append("	if (socketAddress instanceof java.net.InetSocketAddress) {");
    code.append("		java.net.InetSocketAddress addr = (java.net.InetSocketAddress) handlingNode.getSocketAddress();");
    code.append("		com.profiler.context.Trace.recordServerAddr(addr.getHostName(), addr.getPort());");
    code.append("	}");
    code.append("	com.profiler.context.Trace.recordRpcName(\"arcus\", ((cmd == null) ? \"UNKNOWN\" : new String(cmd.array())));");
    code.append("	System.out.println(\"CS\");");
    code.append("	com.profiler.context.Trace.record(new com.profiler.context.Annotation.ClientSend());");
    code.append("} else if (newState == net.spy.memcached.ops.OperationState.COMPLETE) {");
    code.append("	System.out.println(\"CR\");");
    code.append("	com.profiler.context.Trace.record(new com.profiler.context.Annotation.ClientRecv());");
    code.append("}");
    code.append("}");
    transitionStateMethod.insertBefore(code.toString());
    return cc.toBytecode();
  }
 catch (  Exception e) {
    e.printStackTrace();
    return null;
  }
}
