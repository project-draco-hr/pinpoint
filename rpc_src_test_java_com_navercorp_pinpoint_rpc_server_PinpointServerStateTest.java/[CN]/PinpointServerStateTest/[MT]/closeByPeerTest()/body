{
  PinpointServerAcceptor serverAcceptor=null;
  PinpointClient client=null;
  PinpointClientFactory clientFactory=null;
  try {
    serverAcceptor=PinpointRPCTestUtils.createPinpointServerFactory(bindPort,PinpointRPCTestUtils.createEchoServerListener());
    clientFactory=PinpointRPCTestUtils.createClientFactory(PinpointRPCTestUtils.getParams(),PinpointRPCTestUtils.createEchoClientListener());
    client=clientFactory.connect("127.0.0.1",bindPort);
    Thread.sleep(1000);
    List<PinpointSocket> pinpointServerList=serverAcceptor.getWritableSocketList();
    PinpointSocket pinpointServer=pinpointServerList.get(0);
    if (pinpointServer instanceof PinpointServer) {
      Assert.assertEquals(SocketStateCode.RUN_DUPLEX,((PinpointServer)pinpointServer).getCurrentStateCode());
      client.close();
      Thread.sleep(1000);
      Assert.assertEquals(SocketStateCode.CLOSED_BY_CLIENT,((PinpointServer)pinpointServer).getCurrentStateCode());
    }
 else {
      Assert.fail();
    }
  }
  finally {
    PinpointRPCTestUtils.close(client);
    if (clientFactory != null) {
      clientFactory.release();
    }
    PinpointRPCTestUtils.close(serverAcceptor);
  }
}
