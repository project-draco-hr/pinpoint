{
  if (isDebug) {
    logger.afterInterceptor(target,null,result);
  }
  scope.pop();
  boolean success=InterceptorUtils.isSuccess(result);
  final String driverUrl=(String)args[0];
  DatabaseInfo databaseInfo=createDatabaseInfo(driverUrl);
  if (success) {
    this.setUrl.invoke(result,databaseInfo);
  }
  Trace trace=traceContext.currentTraceObject();
  if (trace == null) {
    return;
  }
  try {
    trace.recordServiceType(databaseInfo.getExecuteQueryType());
    trace.recordEndPoint(databaseInfo.getMultipleHost());
    trace.recordDestinationId(databaseInfo.getDatabaseId());
    trace.recordApi(descriptor,args,0,1);
    trace.recordException(result);
    trace.markAfterTime();
  }
  finally {
    trace.traceBlockEnd();
  }
}
