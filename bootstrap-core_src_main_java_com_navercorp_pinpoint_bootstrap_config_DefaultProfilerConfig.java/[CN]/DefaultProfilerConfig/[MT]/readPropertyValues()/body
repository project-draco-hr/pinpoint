{
  final ValueResolver placeHolderResolver=new PlaceHolderResolver();
  this.profileEnable=readBoolean("profiler.enable",true);
  this.collectorSpanServerIp=readString("profiler.collector.span.ip",DEFAULT_IP,placeHolderResolver);
  this.collectorSpanServerPort=readInt("profiler.collector.span.port",9996);
  this.collectorStatServerIp=readString("profiler.collector.stat.ip",DEFAULT_IP,placeHolderResolver);
  this.collectorStatServerPort=readInt("profiler.collector.stat.port",9995);
  this.collectorTcpServerIp=readString("profiler.collector.tcp.ip",DEFAULT_IP,placeHolderResolver);
  this.collectorTcpServerPort=readInt("profiler.collector.tcp.port",9994);
  this.spanDataSenderWriteQueueSize=readInt("profiler.spandatasender.write.queue.size",1024 * 5);
  this.spanDataSenderSocketSendBufferSize=readInt("profiler.spandatasender.socket.sendbuffersize",1024 * 64 * 16);
  this.spanDataSenderSocketTimeout=readInt("profiler.spandatasender.socket.timeout",1000 * 3);
  this.spanDataSenderChunkSize=readInt("profiler.spandatasender.chunk.size",1024 * 16);
  this.statDataSenderWriteQueueSize=readInt("profiler.statdatasender.write.queue.size",1024 * 5);
  this.statDataSenderSocketSendBufferSize=readInt("profiler.statdatasender.socket.sendbuffersize",1024 * 64 * 16);
  this.statDataSenderSocketTimeout=readInt("profiler.statdatasender.socket.timeout",1000 * 3);
  this.statDataSenderChunkSize=readInt("profiler.statdatasender.chunk.size",1024 * 16);
  this.tcpDataSenderCommandAcceptEnable=readBoolean("profiler.tcpdatasender.command.accept.enable",false);
  this.traceAgentActiveThread=readBoolean("profiler.pinpoint.activethread",true);
  this.callStackMaxDepth=readInt("profiler.callstack.max.depth",64);
  if (this.callStackMaxDepth < 2) {
    this.callStackMaxDepth=2;
  }
  this.jdbcSqlCacheSize=readInt("profiler.jdbc.sqlcachesize",1024);
  this.traceSqlBindValue=readBoolean("profiler.jdbc.tracesqlbindvalue",false);
  this.tomcatHidePinpointHeader=readBoolean("profiler.tomcat.hidepinpointheader",true);
  this.tomcatTraceRequestParam=readBoolean("profiler.tomcat.tracerequestparam",true);
  final String tomcatExcludeURL=readString("profiler.tomcat.excludeurl","");
  if (!tomcatExcludeURL.isEmpty()) {
    this.tomcatExcludeUrlFilter=new ExcludeUrlFilter(tomcatExcludeURL);
  }
  this.tomcatRealIpHeader=readString("profiler.tomcat.realipheader",null);
  this.tomcatRealIpEmptyValue=readString("profiler.tomcat.realipemptyvalue",null);
  final String tomcatExcludeProfileMethod=readString("profiler.tomcat.excludemethod","");
  if (!tomcatExcludeProfileMethod.isEmpty()) {
    this.tomcatExcludeProfileMethodFilter=new ExcludeMethodFilter(tomcatExcludeProfileMethod);
  }
  this.apacheHttpClient3Profile=readBoolean("profiler.apache.httpclient3",true);
  this.apacheHttpClient3ProfileCookie=readBoolean("profiler.apache.httpclient3.cookie",false);
  this.apacheHttpClient3ProfileCookieDumpType=readDumpType("profiler.apache.httpclient3.cookie.dumptype",DumpType.EXCEPTION);
  this.apacheHttpClient3ProfileCookieSamplingRate=readInt("profiler.apache.httpclient3.cookie.sampling.rate",1);
  this.apacheHttpClient3ProfileEntity=readBoolean("profiler.apache.httpclient3.entity",false);
  this.apacheHttpClient3ProfileEntityDumpType=readDumpType("profiler.apache.httpclient3.entity.dumptype",DumpType.EXCEPTION);
  this.apacheHttpClient3ProfileEntitySamplingRate=readInt("profiler.apache.httpclient3.entity.sampling.rate",1);
  this.apacheHttpClient3ProfileIo=readBoolean("profiler.apache.httpclient3.io",true);
  this.apacheHttpClient4Profile=readBoolean("profiler.apache.httpclient4",true);
  this.apacheHttpClient4ProfileCookie=readBoolean("profiler.apache.httpclient4.cookie",false);
  this.apacheHttpClient4ProfileCookieDumpType=readDumpType("profiler.apache.httpclient4.cookie.dumptype",DumpType.EXCEPTION);
  this.apacheHttpClient4ProfileCookieSamplingRate=readInt("profiler.apache.httpclient4.cookie.sampling.rate",1);
  this.apacheHttpClient4ProfileEntity=readBoolean("profiler.apache.httpclient4.entity",false);
  this.apacheHttpClient4ProfileEntityDumpType=readDumpType("profiler.apache.httpclient4.entity.dumptype",DumpType.EXCEPTION);
  this.apacheHttpClient4ProfileEntitySamplingRate=readInt("profiler.apache.httpclient4.entity.sampling.rate",1);
  this.apacheHttpClient4ProfileStatusCode=readBoolean("profiler.apache.httpclient4.entity.statuscode",true);
  this.apacheHttpClient4ProfileIo=readBoolean("profiler.apache.httpclient4.io",true);
  this.apacheNIOHttpClient4Profile=readBoolean("profiler.apache.nio.httpclient4",true);
  this.log4jLoggingTransactionInfo=readBoolean("profiler.log4j.logging.transactioninfo",false);
  this.logbackLoggingTransactionInfo=readBoolean("profiler.logback.logging.transactioninfo",false);
  this.redis=readBoolean("profiler.redis",true);
  this.redisPipeline=readBoolean("profiler.redis.pipeline",true);
  this.ibatis=readBoolean("profiler.orm.ibatis",true);
  this.mybatis=readBoolean("profiler.orm.mybatis",true);
  this.samplingEnable=readBoolean("profiler.sampling.enable",true);
  this.samplingRate=readInt("profiler.sampling.rate",1);
  this.ioBufferingEnable=readBoolean("profiler.io.buffering.enable",true);
  this.ioBufferingBufferSize=readInt("profiler.io.buffering.buffersize",20);
  this.profileJvmCollectInterval=readInt("profiler.jvm.collect.interval",1000);
  this.profilerJvmCollectDetailedMetrics=readBoolean("profiler.jvm.collect.detailed.metrics",false);
  this.agentInfoSendRetryInterval=readLong("profiler.agentInfo.send.retry.interval",DEFAULT_AGENT_INFO_SEND_RETRY_INTERVAL);
  this.applicationServerType=readString("profiler.applicationservertype",null);
  this.applicationTypeDetectOrder=readList("profiler.type.detect.order");
  this.disabledPlugins=readList("profiler.plugin.disable");
  final String profilableClass=readString("profiler.include","");
  if (!profilableClass.isEmpty()) {
    this.profilableClassFilter=new ProfilableClassFilter(profilableClass);
  }
  this.propagateInterceptorException=readBoolean("profiler.interceptor.exception.propagate",false);
  logger.info("configuration loaded successfully.");
}
