{
  StringBuilder builder=new StringBuilder();
  builder.append("{properties=");
  builder.append(properties);
  builder.append(", propertyPlaceholderHelper=");
  builder.append(propertyPlaceholderHelper);
  builder.append(", profileEnable=");
  builder.append(profileEnable);
  builder.append(", collectorSpanServerIp=");
  builder.append(collectorSpanServerIp);
  builder.append(", collectorSpanServerPort=");
  builder.append(collectorSpanServerPort);
  builder.append(", collectorStatServerIp=");
  builder.append(collectorStatServerIp);
  builder.append(", collectorStatServerPort=");
  builder.append(collectorStatServerPort);
  builder.append(", collectorTcpServerIp=");
  builder.append(collectorTcpServerIp);
  builder.append(", collectorTcpServerPort=");
  builder.append(collectorTcpServerPort);
  builder.append(", spanDataSenderWriteQueueSize=");
  builder.append(spanDataSenderWriteQueueSize);
  builder.append(", spanDataSenderSocketSendBufferSize=");
  builder.append(spanDataSenderSocketSendBufferSize);
  builder.append(", spanDataSenderSocketTimeout=");
  builder.append(spanDataSenderSocketTimeout);
  builder.append(", spanDataSenderChunkSize=");
  builder.append(spanDataSenderChunkSize);
  builder.append(", statDataSenderWriteQueueSize=");
  builder.append(statDataSenderWriteQueueSize);
  builder.append(", statDataSenderSocketSendBufferSize=");
  builder.append(statDataSenderSocketSendBufferSize);
  builder.append(", statDataSenderSocketTimeout=");
  builder.append(statDataSenderSocketTimeout);
  builder.append(", statDataSenderChunkSize=");
  builder.append(statDataSenderChunkSize);
  builder.append(", tcpDataSenderCommandAcceptEnable=");
  builder.append(tcpDataSenderCommandAcceptEnable);
  builder.append(", traceAgentActiveThread=");
  builder.append(traceAgentActiveThread);
  builder.append(", callStackMaxDepth=");
  builder.append(callStackMaxDepth);
  builder.append(", jdbcSqlCacheSize=");
  builder.append(jdbcSqlCacheSize);
  builder.append(", traceSqlBindValue=");
  builder.append(traceSqlBindValue);
  builder.append(", maxSqlBindValueSize=");
  builder.append(maxSqlBindValueSize);
  builder.append(", tomcatHidePinpointHeader=");
  builder.append(tomcatHidePinpointHeader);
  builder.append(", tomcatTraceRequestParam=");
  builder.append(tomcatTraceRequestParam);
  builder.append(", tomcatExcludeUrlFilter=");
  builder.append(tomcatExcludeUrlFilter);
  builder.append(", tomcatExcludeProfileMethodFilter=");
  builder.append(tomcatExcludeProfileMethodFilter);
  builder.append(", ibatis=");
  builder.append(ibatis);
  builder.append(", mybatis=");
  builder.append(mybatis);
  builder.append(", redis=");
  builder.append(redis);
  builder.append(", redisPipeline=");
  builder.append(redisPipeline);
  builder.append(", apacheHttpClient3Profile=");
  builder.append(apacheHttpClient3Profile);
  builder.append(", apacheHttpClient3ProfileCookie=");
  builder.append(apacheHttpClient3ProfileCookie);
  builder.append(", apacheHttpClient3ProfileCookieDumpType=");
  builder.append(apacheHttpClient3ProfileCookieDumpType);
  builder.append(", apacheHttpClient3ProfileCookieSamplingRate=");
  builder.append(apacheHttpClient3ProfileCookieSamplingRate);
  builder.append(", apacheHttpClient3ProfileEntity=");
  builder.append(apacheHttpClient3ProfileEntity);
  builder.append(", apacheHttpClient3ProfileEntityDumpType=");
  builder.append(apacheHttpClient3ProfileEntityDumpType);
  builder.append(", apacheHttpClient3ProfileEntitySamplingRate=");
  builder.append(apacheHttpClient3ProfileEntitySamplingRate);
  builder.append(", apacheHttpClient3ProfileIo=");
  builder.append(apacheHttpClient3ProfileIo);
  builder.append(", apacheHttpClient4Profile=");
  builder.append(apacheHttpClient4Profile);
  builder.append(", apacheHttpClient4ProfileCookie=");
  builder.append(apacheHttpClient4ProfileCookie);
  builder.append(", apacheHttpClient4ProfileCookieDumpType=");
  builder.append(apacheHttpClient4ProfileCookieDumpType);
  builder.append(", apacheHttpClient4ProfileCookieSamplingRate=");
  builder.append(apacheHttpClient4ProfileCookieSamplingRate);
  builder.append(", apacheHttpClient4ProfileEntity=");
  builder.append(apacheHttpClient4ProfileEntity);
  builder.append(", apacheHttpClient4ProfileEntityDumpType=");
  builder.append(apacheHttpClient4ProfileEntityDumpType);
  builder.append(", apacheHttpClient4ProfileEntitySamplingRate=");
  builder.append(apacheHttpClient4ProfileEntitySamplingRate);
  builder.append(", apacheHttpClient4ProfileStatusCode=");
  builder.append(apacheHttpClient4ProfileStatusCode);
  builder.append(", apacheHttpClient4ProfileIo=");
  builder.append(apacheHttpClient4ProfileIo);
  builder.append(", apacheNIOHttpClient4Profile=");
  builder.append(apacheNIOHttpClient4Profile);
  builder.append(", samplingEnable=");
  builder.append(samplingEnable);
  builder.append(", samplingRate=");
  builder.append(samplingRate);
  builder.append(", ioBufferingEnable=");
  builder.append(ioBufferingEnable);
  builder.append(", ioBufferingBufferSize=");
  builder.append(ioBufferingBufferSize);
  builder.append(", profileJvmCollectInterval=");
  builder.append(profileJvmCollectInterval);
  builder.append(", profilableClassFilter=");
  builder.append(profilableClassFilter);
  builder.append(", DEFAULT_AGENT_INFO_SEND_RETRY_INTERVAL=");
  builder.append(DEFAULT_AGENT_INFO_SEND_RETRY_INTERVAL);
  builder.append(", agentInfoSendRetryInterval=");
  builder.append(agentInfoSendRetryInterval);
  builder.append(", applicationServerType=");
  builder.append(applicationServerType);
  builder.append(", applicationTypeDetectOrder=");
  builder.append(applicationTypeDetectOrder);
  builder.append(", disabledPlugins=");
  builder.append(disabledPlugins);
  builder.append(", log4jLoggingTransactionInfo=");
  builder.append(log4jLoggingTransactionInfo);
  builder.append(", logbackLoggingTransactionInfo=");
  builder.append(logbackLoggingTransactionInfo);
  builder.append("}");
  return builder.toString();
}
