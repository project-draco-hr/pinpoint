{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  StatWithSerialCollector typedOther=(StatWithSerialCollector)other;
  lastComparison=Boolean.valueOf(isSetAgentId()).compareTo(typedOther.isSetAgentId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAgentId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.agentId,typedOther.agentId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTimestamp()).compareTo(typedOther.isSetTimestamp());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTimestamp()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.timestamp,typedOther.timestamp);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryTotalUsed()).compareTo(typedOther.isSetJvmMemoryTotalUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryTotalUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryTotalUsed,typedOther.jvmMemoryTotalUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryTotalMax()).compareTo(typedOther.isSetJvmMemoryTotalMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryTotalMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryTotalMax,typedOther.jvmMemoryTotalMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryHeapUsed()).compareTo(typedOther.isSetJvmMemoryHeapUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryHeapUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryHeapUsed,typedOther.jvmMemoryHeapUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryHeapMax()).compareTo(typedOther.isSetJvmMemoryHeapMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryHeapMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryHeapMax,typedOther.jvmMemoryHeapMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryNonHeapUsed()).compareTo(typedOther.isSetJvmMemoryNonHeapUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryNonHeapUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryNonHeapUsed,typedOther.jvmMemoryNonHeapUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryNonHeapMax()).compareTo(typedOther.isSetJvmMemoryNonHeapMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryNonHeapMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryNonHeapMax,typedOther.jvmMemoryNonHeapMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsCodeCacheUsage()).compareTo(typedOther.isSetJvmMemoryPoolsCodeCacheUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsCodeCacheUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsCodeCacheUsage,typedOther.jvmMemoryPoolsCodeCacheUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsEdenSpaceUsage()).compareTo(typedOther.isSetJvmMemoryPoolsEdenSpaceUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsEdenSpaceUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsEdenSpaceUsage,typedOther.jvmMemoryPoolsEdenSpaceUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsSurvivorSpaceUsage()).compareTo(typedOther.isSetJvmMemoryPoolsSurvivorSpaceUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsSurvivorSpaceUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsSurvivorSpaceUsage,typedOther.jvmMemoryPoolsSurvivorSpaceUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsPermGenUsage()).compareTo(typedOther.isSetJvmMemoryPoolsPermGenUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsPermGenUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsPermGenUsage,typedOther.jvmMemoryPoolsPermGenUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsTenuredGenUsage()).compareTo(typedOther.isSetJvmMemoryPoolsTenuredGenUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsTenuredGenUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsTenuredGenUsage,typedOther.jvmMemoryPoolsTenuredGenUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcCopyCount()).compareTo(typedOther.isSetJvmGcCopyCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcCopyCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcCopyCount,typedOther.jvmGcCopyCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcCopyTime()).compareTo(typedOther.isSetJvmGcCopyTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcCopyTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcCopyTime,typedOther.jvmGcCopyTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcMarkSweepCompactCount()).compareTo(typedOther.isSetJvmGcMarkSweepCompactCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcMarkSweepCompactCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcMarkSweepCompactCount,typedOther.jvmGcMarkSweepCompactCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcMarkSweepCompactTime()).compareTo(typedOther.isSetJvmGcMarkSweepCompactTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcMarkSweepCompactTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcMarkSweepCompactTime,typedOther.jvmGcMarkSweepCompactTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMetadata()).compareTo(typedOther.isSetMetadata());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMetadata()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.metadata,typedOther.metadata);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
