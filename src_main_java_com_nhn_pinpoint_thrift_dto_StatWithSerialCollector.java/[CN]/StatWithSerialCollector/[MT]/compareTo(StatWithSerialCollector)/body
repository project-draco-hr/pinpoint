{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetAgentId()).compareTo(other.isSetAgentId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAgentId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.agentId,other.agentId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTimestamp()).compareTo(other.isSetTimestamp());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTimestamp()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.timestamp,other.timestamp);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryTotalUsed()).compareTo(other.isSetJvmMemoryTotalUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryTotalUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryTotalUsed,other.jvmMemoryTotalUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryTotalMax()).compareTo(other.isSetJvmMemoryTotalMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryTotalMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryTotalMax,other.jvmMemoryTotalMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryHeapUsed()).compareTo(other.isSetJvmMemoryHeapUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryHeapUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryHeapUsed,other.jvmMemoryHeapUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryHeapMax()).compareTo(other.isSetJvmMemoryHeapMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryHeapMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryHeapMax,other.jvmMemoryHeapMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryNonHeapUsed()).compareTo(other.isSetJvmMemoryNonHeapUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryNonHeapUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryNonHeapUsed,other.jvmMemoryNonHeapUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryNonHeapMax()).compareTo(other.isSetJvmMemoryNonHeapMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryNonHeapMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryNonHeapMax,other.jvmMemoryNonHeapMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsCodeCacheUsage()).compareTo(other.isSetJvmMemoryPoolsCodeCacheUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsCodeCacheUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsCodeCacheUsage,other.jvmMemoryPoolsCodeCacheUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsEdenSpaceUsage()).compareTo(other.isSetJvmMemoryPoolsEdenSpaceUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsEdenSpaceUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsEdenSpaceUsage,other.jvmMemoryPoolsEdenSpaceUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsSurvivorSpaceUsage()).compareTo(other.isSetJvmMemoryPoolsSurvivorSpaceUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsSurvivorSpaceUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsSurvivorSpaceUsage,other.jvmMemoryPoolsSurvivorSpaceUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsPermGenUsage()).compareTo(other.isSetJvmMemoryPoolsPermGenUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsPermGenUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsPermGenUsage,other.jvmMemoryPoolsPermGenUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsTenuredGenUsage()).compareTo(other.isSetJvmMemoryPoolsTenuredGenUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsTenuredGenUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsTenuredGenUsage,other.jvmMemoryPoolsTenuredGenUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcCopyCount()).compareTo(other.isSetJvmGcCopyCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcCopyCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcCopyCount,other.jvmGcCopyCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcCopyTime()).compareTo(other.isSetJvmGcCopyTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcCopyTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcCopyTime,other.jvmGcCopyTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcMarkSweepCompactCount()).compareTo(other.isSetJvmGcMarkSweepCompactCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcMarkSweepCompactCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcMarkSweepCompactCount,other.jvmGcMarkSweepCompactCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcMarkSweepCompactTime()).compareTo(other.isSetJvmGcMarkSweepCompactTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcMarkSweepCompactTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcMarkSweepCompactTime,other.jvmGcMarkSweepCompactTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMetadata()).compareTo(other.isSetMetadata());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMetadata()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.metadata,other.metadata);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
