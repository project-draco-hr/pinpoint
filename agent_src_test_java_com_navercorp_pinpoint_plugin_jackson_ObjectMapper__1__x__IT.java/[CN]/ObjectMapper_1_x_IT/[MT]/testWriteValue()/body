{
  __POJO pojo=new __POJO();
  pojo.setName("Jackson");
  Method mapperWriteValueAsString=getMethod(ObjectMapper.class,"writeValueAsString",Object.class);
  Method mapperWriteValueAsBytes=getMethod(ObjectMapper.class,"writeValueAsBytes",Object.class);
  Method mapperWriteValue=getMethod(ObjectMapper.class,"writeValue",Writer.class,Object.class);
  mapper.writeValue(new OutputStreamWriter(new ByteArrayOutputStream()),pojo);
  String jsonString=mapperWriteValueAsString == null ? null : (String)mapperWriteValueAsString.invoke(mapper,pojo);
  byte[] jsonBytes=mapperWriteValueAsBytes == null ? null : (byte[])mapperWriteValueAsBytes.invoke(mapper,pojo);
  PluginTestVerifier verifier=PluginTestVerifierHolder.getInstance();
  verifier.printCache(System.out);
  verifier.printBlocks(System.out);
  verifier.verifyApi("JACKSON",mapperWriteValue);
  if (mapperWriteValueAsString != null) {
    verifier.verifyTraceBlock(BlockType.EVENT,"JACKSON",mapperWriteValueAsString,null,null,null,null,annotation("jackson.json.length",jsonString.length()));
  }
  if (mapperWriteValueAsBytes != null) {
    verifier.verifyTraceBlock(BlockType.EVENT,"JACKSON",mapperWriteValueAsBytes,null,null,null,null,annotation("jackson.json.length",jsonBytes.length));
  }
  verifier.verifyTraceBlockCount(0);
}
