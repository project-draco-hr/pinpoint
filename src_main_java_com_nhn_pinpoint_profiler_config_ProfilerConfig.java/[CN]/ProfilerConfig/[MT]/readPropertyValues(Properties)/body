{
  this.profileEnable=readBoolean(prop,"profile.enable",true);
  this.collectorServerIp=readString(prop,"server.collector.ip","127.0.0.1");
  this.collectorServerPort=readInt(prop,"server.collector.udp.port",9995);
  this.jdbcProfile=readBoolean(prop,"profile.jdbc",true);
  this.jdbcProfileMySql=readBoolean(prop,"profile.jdbc.mysql",true);
  this.jdbcProfileMsSql=readBoolean(prop,"profile.jdbc.mssql",true);
  this.jdbcProfileOracle=readBoolean(prop,"profile.jdbc.oracle",true);
  this.jdbcProfileCubrid=readBoolean(prop,"profile.jdbc.cubrid",true);
  this.jdbcProfileDbcp=readBoolean(prop,"profile.jdbc.dbcp",true);
  this.samplingEnable=readBoolean(prop,"sampling.enable",true);
  this.samplingRate=readInt(prop,"sampling.rate",1);
  this.samplingElapsedTimeBaseEnable=readBoolean(prop,"sampling.elapsedtimebase.enable",true);
  this.samplingElapsedTimeBaseBufferSize=readInt(prop,"sampling.elapsedtimebase.buffersize",20);
  this.samplingElapsedTimeBaseDiscard=readBoolean(prop,"sampling.elapsedtimebase.discard",true);
  this.samplingElapsedTimeBaseDiscardTimeLimit=readLong(prop,"sampling.elapsedtimebase.discard.timelimit",1000);
  this.profileJvmCollectInterval=readInt(prop,"profile.jvm.collect.interval",1000);
  this.heartbeatInterval=readLong(prop,"agent.heartbeat.interval",DEFAULT_HEART_BEAT_INTERVAL);
  this.serviceType=readServiceType(prop,"agent.servicetype",ServiceType.TOMCAT);
  String profileableClass=readString(prop,"profile.include","");
  setProfilableClass(profileableClass);
  logger.info("configuration loaded successfully.");
}
