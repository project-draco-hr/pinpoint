{
  if (firstAccessTime == -1) {
    firstAccessTime=System.currentTimeMillis();
  }
  if (!checkAddAvailable(buffers)) {
    return false;
  }
  if (headerTbaseSerializer != null) {
    usedSerializerList.add(headerTbaseSerializer);
  }
  chunkCount++;
  ByteBuffer chunkFlagBuffer=ByteBufferUtils.createByteBuffer(SpanStreamConstants.DEFAULT_CHUNK_FLAG_BUFFER_SIZE);
  components[componentsIndex++]=chunkFlagBuffer;
  int usedBufferLength=0;
  for (  ByteBuffer buffer : buffers) {
    if (buffer.remaining() <= 0) {
      continue;
    }
    components[componentsIndex++]=buffer;
    usedBufferLength+=buffer.remaining();
  }
  ByteBufferUtils.putShort(chunkFlagBuffer,(short)(usedBufferLength));
  chunkFlagBuffer.flip();
  this.availableBufferCapacity=this.availableBufferCapacity - usedBufferLength - SpanStreamConstants.DEFAULT_CHUNK_FLAG_BUFFER_SIZE;
  return true;
}
