{
  try {
    invoker.invoke("objectName",null,"params");
  }
 catch (  NullPointerException ex) {
    String msg=ex.getMessage();
    if (msg.indexOf("methodName") == -1) {
      throw new RuntimeException("Invalid NullPointerException for methodName");
    }
  }
catch (  Exception ex) {
    throw new RuntimeException("Invaid Exception for methodName - " + ex.getMessage());
  }
  try {
    NimmInvoker nimmInvoker=(NimmInvoker)invoker;
    nimmInvoker.invoke(-1000L,"objectName","methodName","params");
  }
 catch (  IllegalArgumentException ex) {
    String msg=ex.getMessage();
    if (msg.indexOf("timeoutMillis") == -1) {
      throw new RuntimeException("Invalid IllegalArgumentException for timeoutMillis");
    }
  }
catch (  Exception ex) {
    throw new RuntimeException("Invaid Exception for timeoutMillis - " + ex.getMessage());
  }
  try {
    NimmInvoker nimmInvoker=(NimmInvoker)invoker;
    nimmInvoker.setTimeout(-1000L);
  }
 catch (  IllegalArgumentException ex) {
    String msg=ex.getMessage();
    if (msg.indexOf("timeoutMillis") == -1) {
      throw new RuntimeException("Invalid IllegalArgumentException for timeoutMillis");
    }
  }
catch (  Exception ex) {
    throw new RuntimeException("Invaid Exception for timeoutMillis - " + ex.getMessage());
  }
  InvocationFuture future=invoker.invoke("objectName","methodName",Integer.class);
  log.info("await");
  future.await();
  Exception ex=(Exception)future.getException();
  if (!(ex instanceof ProtocolEncoderException)) {
    throw new RuntimeException("!(ex instanceof ProtocolEncoderException)");
  }
  invoker.dispose();
}
