{
  spanChunkBo.setCollectorAcceptTime(getCollectorAcceptTime());
  SpanEncodingContext<SpanChunkBo> encodingContext=new SpanEncodingContext<>(spanChunkBo);
  Buffer qualifier=wrapBuffer(spanEncoder.encodeSpanChunkQualifier(encodingContext));
  Buffer column=wrapBuffer(spanEncoder.encodeSpanChunkColumnValue(encodingContext));
  SpanDecodingContext decodingContext=new SpanDecodingContext();
  decodingContext.setTransactionId(spanChunkBo.getTransactionId());
  decodingContext.setCollectorAcceptedTime(spanChunkBo.getCollectorAcceptTime());
  SpanChunkBo decode=(SpanChunkBo)spanDecoder.decode(qualifier,column,decodingContext);
  logger.debug("spanChunk dump \noriginal spanChunkBo:{} \ndecode spanChunkBo:{} ",spanChunkBo,decode);
  List<String> notSerializedField=Lists.newArrayList("endPoint","serviceType","applicationServiceType");
  List<String> excludeField=Lists.newArrayList("spanEventBoList");
  notSerializedField.addAll(excludeField);
  Assert.assertTrue(EqualsBuilder.reflectionEquals(decode,spanChunkBo,notSerializedField));
  List<SpanEventBo> spanEventBoList=spanChunkBo.getSpanEventBoList();
  List<SpanEventBo> decodedSpanEventBoList=decode.getSpanEventBoList();
  Assert.assertTrue(EqualsBuilder.reflectionEquals(spanEventBoList,decodedSpanEventBoList));
}
