{
  List<Integer> hashCodeList=requestHashCodeListTable.get(key);
  if (hashCodeList != null) {
    requestHashCodeListTable.remove(key);
    int hashCodeSize=hashCodeList.size();
    List<RequestThriftDTO> requestDtoList=new ArrayList<RequestThriftDTO>(hashCodeSize);
    List<RequestThriftDTO> responseDtoList=new ArrayList<RequestThriftDTO>(hashCodeSize);
    List<RequestDataListThriftDTO> responseDataListDTOList=new ArrayList<RequestDataListThriftDTO>(hashCodeSize);
    List<byte[]> responseDataByteArrayList=new ArrayList<byte[]>(hashCodeSize);
    for (    int hashCode : hashCodeList) {
      RequestThriftDTO tempReqDto=requestDTOTable.get(hashCode);
      requestDTOTable.remove(hashCode);
      RequestThriftDTO tempResDto=responseDTOTable.get(hashCode);
      responseDTOTable.remove(hashCode);
      if (responseDataListDTOTable.containsKey(hashCode)) {
        responseDataListDTOList.add(responseDataListDTOTable.get(hashCode));
        responseDataListDTOTable.remove(hashCode);
        responseDataByteArrayList.add(responseDataByteArrayTable.get(hashCode));
        responseDataByteArrayTable.remove(hashCode);
      }
 else {
        responseDataListDTOList.add(null);
        responseDataByteArrayList.add(null);
      }
      requestDtoList.add(tempReqDto);
      responseDtoList.add(tempResDto);
    }
    if (TomcatProfilerReceiverConfig.USING_HBASE) {
      String tableName=TomcatProfilerReceiverConstant.HBASE_REQUEST_TABLE + "_" + agentHashCode;
      PutRequestTransactionData put=new PutRequestTransactionData(tableName,requestDtoList,responseDtoList,responseDataByteArrayList);
      DataPutThreadManager.execute(put);
      PutDatabaseData put2=new PutDatabaseData(TomcatProfilerReceiverConstant.HBASE_DATABASE_TABLE,responseDataListDTOList);
      DataPutThreadManager.execute(put2);
    }
  }
 else {
    logger.info("hashCodeList is null key:" + key);
  }
}
