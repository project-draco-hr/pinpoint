{
  ModelAndView mv=new ModelAndView();
  mv.addObject("resultFrom",range.getFrom());
  mv.addObject("resultTo",range.getTo());
  mv.addObject("scatterIndex",ScatterIndex.MATA_DATA);
  final Map<String,List<Dot>> scatterAgentData=new HashMap<>();
  for (  Dot dot : scatterData) {
    List<Dot> list=scatterAgentData.get(dot.getAgentId());
    if (list == null) {
      list=new ArrayList<>();
      scatterAgentData.put(dot.getAgentId(),list);
    }
    list.add(dot);
  }
  if (version == 4) {
    TimeWindow timeWindow=new TimeWindow(range);
    TreeMap<Long,List<Dot>> sortedMap=new TreeMap<>();
    for (    Dot dot : scatterData) {
      long key=timeWindow.refineTimestamp(dot.getAcceptedTime());
      List<Dot> list=sortedMap.get(key);
      if (list == null) {
        list=new ArrayList<>();
        sortedMap.put(key,list);
      }
      list.add(dot);
    }
    List<Dot> averageList=new ArrayList<>();
    List<Dot> maxList=new ArrayList<>();
    List<Dot> minList=new ArrayList<>();
    for (    Map.Entry<Long,List<Dot>> entry : sortedMap.entrySet()) {
      Dot max=null;
      Dot min=null;
      int totalTime=0;
      for (      Dot dot : entry.getValue()) {
        if (max == null || dot.getElapsedTime() > max.getElapsedTime()) {
          max=dot;
        }
        if (min == null || dot.getElapsedTime() < min.getElapsedTime()) {
          min=dot;
        }
        totalTime+=dot.getElapsedTime();
      }
      int averageTime=totalTime / entry.getValue().size();
      averageList.add(new Dot(new TransactionId("",0,0),entry.getKey(),averageTime,0,""));
      maxList.add(new Dot(new TransactionId(max.getTransactionIdAsString()),entry.getKey(),max.getElapsedTime(),max.getExceptionCode(),max.getAgentId()));
      minList.add(new Dot(new TransactionId(min.getTransactionIdAsString()),entry.getKey(),min.getElapsedTime(),min.getExceptionCode(),min.getAgentId()));
    }
    scatterAgentData.put("_#AverageAgent",averageList);
    scatterAgentData.put("_#MaxAgent",maxList);
    scatterAgentData.put("_#MinAgent",minList);
  }
  mv.addObject("scatter",scatterAgentData);
  if (jsonpCallback == null) {
    mv.setViewName("jsonView");
  }
 else {
    mv.setViewName("jsonpView");
  }
  return mv;
}
