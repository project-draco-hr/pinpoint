{
  if (isDebug) {
    logger.afterInterceptor(target,args);
  }
  final Trace trace=traceContext.currentTraceObject();
  if (trace == null) {
    return;
  }
  try {
    final SpanEventRecorder recorder=trace.currentSpanEventRecorder();
    if (target instanceof HttpMethod) {
      HttpMethod httpMethod=(HttpMethod)target;
      recordDestination(trace,httpMethod,args);
      recordRequest(trace,httpMethod,throwable);
    }
    if (result != null) {
      recorder.recordAttribute(AnnotationKey.HTTP_STATUS_CODE,result);
    }
    recorder.recordApi(descriptor);
    recorder.recordException(throwable);
    final InterceptorScopeInvocation invocation=interceptorScope.getCurrentInvocation();
    if (invocation != null && invocation.getAttachment() != null && invocation.getAttachment() instanceof HttpClient3CallContext) {
      final HttpClient3CallContext callContext=(HttpClient3CallContext)invocation.getAttachment();
      if (io) {
        recordIo(recorder,callContext);
      }
      invocation.removeAttachment();
    }
  }
  finally {
    trace.traceBlockEnd();
  }
}
