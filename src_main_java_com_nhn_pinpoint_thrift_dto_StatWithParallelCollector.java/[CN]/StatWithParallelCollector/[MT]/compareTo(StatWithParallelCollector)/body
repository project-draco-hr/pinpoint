{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  StatWithParallelCollector typedOther=(StatWithParallelCollector)other;
  lastComparison=Boolean.valueOf(isSetAgentId()).compareTo(typedOther.isSetAgentId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAgentId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.agentId,typedOther.agentId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTimestamp()).compareTo(typedOther.isSetTimestamp());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTimestamp()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.timestamp,typedOther.timestamp);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryTotalUsed()).compareTo(typedOther.isSetJvmMemoryTotalUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryTotalUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryTotalUsed,typedOther.jvmMemoryTotalUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryTotalMax()).compareTo(typedOther.isSetJvmMemoryTotalMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryTotalMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryTotalMax,typedOther.jvmMemoryTotalMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryHeapUsed()).compareTo(typedOther.isSetJvmMemoryHeapUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryHeapUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryHeapUsed,typedOther.jvmMemoryHeapUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryHeapMax()).compareTo(typedOther.isSetJvmMemoryHeapMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryHeapMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryHeapMax,typedOther.jvmMemoryHeapMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryNonHeapUsed()).compareTo(typedOther.isSetJvmMemoryNonHeapUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryNonHeapUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryNonHeapUsed,typedOther.jvmMemoryNonHeapUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryNonHeapMax()).compareTo(typedOther.isSetJvmMemoryNonHeapMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryNonHeapMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryNonHeapMax,typedOther.jvmMemoryNonHeapMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsCodeCacheUsage()).compareTo(typedOther.isSetJvmMemoryPoolsCodeCacheUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsCodeCacheUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsCodeCacheUsage,typedOther.jvmMemoryPoolsCodeCacheUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsPSEdenSpaceUsage()).compareTo(typedOther.isSetJvmMemoryPoolsPSEdenSpaceUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsPSEdenSpaceUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsPSEdenSpaceUsage,typedOther.jvmMemoryPoolsPSEdenSpaceUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsPSSurvivorSpaceUsage()).compareTo(typedOther.isSetJvmMemoryPoolsPSSurvivorSpaceUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsPSSurvivorSpaceUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsPSSurvivorSpaceUsage,typedOther.jvmMemoryPoolsPSSurvivorSpaceUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsPSPermGenUsage()).compareTo(typedOther.isSetJvmMemoryPoolsPSPermGenUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsPSPermGenUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsPSPermGenUsage,typedOther.jvmMemoryPoolsPSPermGenUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsPSOldGenUsage()).compareTo(typedOther.isSetJvmMemoryPoolsPSOldGenUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsPSOldGenUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsPSOldGenUsage,typedOther.jvmMemoryPoolsPSOldGenUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcPSMarkSweepCount()).compareTo(typedOther.isSetJvmGcPSMarkSweepCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcPSMarkSweepCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcPSMarkSweepCount,typedOther.jvmGcPSMarkSweepCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcPSMarkSweepTime()).compareTo(typedOther.isSetJvmGcPSMarkSweepTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcPSMarkSweepTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcPSMarkSweepTime,typedOther.jvmGcPSMarkSweepTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcPSScavengeCount()).compareTo(typedOther.isSetJvmGcPSScavengeCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcPSScavengeCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcPSScavengeCount,typedOther.jvmGcPSScavengeCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcPSScavengeTime()).compareTo(typedOther.isSetJvmGcPSScavengeTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcPSScavengeTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcPSScavengeTime,typedOther.jvmGcPSScavengeTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMetadata()).compareTo(typedOther.isSetMetadata());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMetadata()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.metadata,typedOther.metadata);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
