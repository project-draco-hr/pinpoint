{
  if (isDebug) {
    logger.afterInterceptor(target,args);
  }
  final Trace trace=traceContext.currentRawTraceObject();
  if (trace == null) {
    return;
  }
  if (trace.getTraceType() == TraceType.USER) {
    if (isDebug) {
      logger.debug("Leave user trace. {}",trace);
    }
    final EntryPointChecker entryPointChecker=trace.getEntryPointChecker();
    entryPointChecker.leave();
  }
  if (!trace.canSampled()) {
    if (trace.getTraceType() == TraceType.USER) {
      final EntryPointChecker entryPointChecker=trace.getEntryPointChecker();
      if (!entryPointChecker.isNested()) {
        if (isDebug) {
          logger.debug("Remove user trace. {}",trace);
        }
        traceContext.removeTraceObject();
      }
    }
    return;
  }
  try {
    final SpanEventRecorder recorder=trace.currentSpanEventRecorder();
    recorder.recordApi(descriptor);
    recorder.recordServiceType(UserConstants.USER_INCLUDE);
    recorder.recordException(throwable);
  }
  finally {
    trace.traceBlockEnd();
    if (trace.getTraceType() == TraceType.USER) {
      final EntryPointChecker entryPointChecker=trace.getEntryPointChecker();
      if (!entryPointChecker.isNested()) {
        if (isDebug) {
          logger.debug("Close and remove user trace. {}",trace);
        }
        trace.close();
        traceContext.removeTraceObject();
      }
    }
  }
}
