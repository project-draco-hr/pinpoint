{
  if (isDebug) {
    logger.afterInterceptor(target,args);
  }
  final Trace trace=traceContext.currentRawTraceObject();
  if (trace == null) {
    return;
  }
  final TraceScope scope=trace.getScope(SCOPE_NAME);
  if (scope != null) {
    if (scope.canLeave()) {
      scope.leave();
    }
 else {
      if (logger.isInfoEnabled()) {
        logger.info("Detected invalid scope={}. close and remove user trace={}, sampled={}",scope.getName(),trace,trace.canSampled());
      }
      trace.close();
      traceContext.removeTraceObject();
      return;
    }
  }
  if (!trace.canSampled()) {
    if (scope != null && !scope.isActive()) {
      if (isDebug) {
        logger.debug("Remove user trace={}, sampled={}",trace,trace.canSampled());
      }
      traceContext.removeTraceObject();
    }
    return;
  }
  try {
    final SpanEventRecorder recorder=trace.currentSpanEventRecorder();
    recorder.recordApi(descriptor);
    recorder.recordServiceType(UserConstants.USER_INCLUDE);
    recorder.recordException(throwable);
  }
  finally {
    trace.traceBlockEnd();
    if (scope != null && !scope.isActive()) {
      if (isDebug) {
        logger.debug("Close and remove user trace={}, sampled={}",trace,trace.canSampled());
      }
      trace.close();
      traceContext.removeTraceObject();
    }
  }
}
