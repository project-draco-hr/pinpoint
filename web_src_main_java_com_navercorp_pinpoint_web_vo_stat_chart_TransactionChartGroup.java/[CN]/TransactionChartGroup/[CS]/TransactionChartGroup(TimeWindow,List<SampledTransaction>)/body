{
  this.transactionCharts=new HashMap<>();
  List<Point<Long,Double>> sampledNewTps=new ArrayList<>(sampledTransactions.size());
  List<Point<Long,Double>> sampledContinuationTps=new ArrayList<>(sampledTransactions.size());
  List<Point<Long,Double>> unsampledNewTps=new ArrayList<>(sampledTransactions.size());
  List<Point<Long,Double>> unsampledContinuationTps=new ArrayList<>(sampledTransactions.size());
  List<Point<Long,Double>> totalTps=new ArrayList<>();
  for (  SampledTransaction sampledTransaction : sampledTransactions) {
    sampledNewTps.add(sampledTransaction.getSampledNew());
    sampledContinuationTps.add(sampledTransaction.getSampledContinuation());
    unsampledNewTps.add(sampledTransaction.getUnsampledNew());
    unsampledContinuationTps.add(sampledTransaction.getUnsampledContinuation());
    totalTps.add(sampledTransaction.getTotal());
  }
  transactionCharts.put(TransactionChartType.TPS_SAMPLED_NEW,new TimeSeriesChartBuilder<>(timeWindow,UNCOLLECTED_TPS).build(sampledNewTps));
  transactionCharts.put(TransactionChartType.TPS_SAMPLED_CONTINUATION,new TimeSeriesChartBuilder<>(timeWindow,UNCOLLECTED_TPS).build(sampledContinuationTps));
  transactionCharts.put(TransactionChartType.TPS_UNSAMPLED_NEW,new TimeSeriesChartBuilder<>(timeWindow,UNCOLLECTED_TPS).build(unsampledNewTps));
  transactionCharts.put(TransactionChartType.TPS_UNSAMPLED_CONTINUATION,new TimeSeriesChartBuilder<>(timeWindow,UNCOLLECTED_TPS).build(unsampledContinuationTps));
  transactionCharts.put(TransactionChartType.TPS_TOTAL,new TimeSeriesChartBuilder<>(timeWindow,UNCOLLECTED_TPS).build(totalTps));
}
