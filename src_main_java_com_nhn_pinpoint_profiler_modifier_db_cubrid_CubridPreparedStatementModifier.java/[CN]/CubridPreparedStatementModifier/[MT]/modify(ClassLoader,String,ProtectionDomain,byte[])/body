{
  if (logger.isInfoEnabled()) {
    logger.info("Modifing. {}",javassistClassName);
  }
  this.byteCodeInstrumentor.checkLibrary(classLoader,javassistClassName);
  try {
    InstrumentClass preparedStatementClass=byteCodeInstrumentor.getClass(javassistClassName);
    Interceptor executeInterceptor=new JDBCScopeDelegateSimpleInterceptor(new PreparedStatementExecuteQueryInterceptor());
    preparedStatementClass.addInterceptor("execute",null,executeInterceptor);
    Interceptor executeQueryInterceptor=new JDBCScopeDelegateSimpleInterceptor(new PreparedStatementExecuteQueryInterceptor());
    preparedStatementClass.addInterceptor("executeQuery",null,executeQueryInterceptor);
    Interceptor executeUpdateInterceptor=new JDBCScopeDelegateSimpleInterceptor(new PreparedStatementExecuteQueryInterceptor());
    preparedStatementClass.addInterceptor("executeUpdate",null,executeUpdateInterceptor);
    preparedStatementClass.addTraceVariable("__url","__setUrl","__getUrl","java.lang.Object");
    preparedStatementClass.addTraceVariable("__sql","__setSql","__getSql","java.lang.Object");
    preparedStatementClass.addTraceVariable("__bindValue","__setBindValue","__getBindValue","java.util.Map","java.util.Collections.synchronizedMap(new java.util.HashMap());");
    bindVariableIntercept(preparedStatementClass,classLoader,protectedDomain);
    return preparedStatementClass.toBytecode();
  }
 catch (  InstrumentException e) {
    if (logger.isWarnEnabled()) {
      logger.warn("{} modify fail. Cause:{}",this.getClass().getSimpleName(),e.getMessage(),e);
    }
    return null;
  }
}
