{
  super(testClass);
  OnClassLoader onClassLoader=testClass.getAnnotation(OnClassLoader.class);
  this.testOnChildClassLoader=onClassLoader == null ? true : onClassLoader.child();
  this.testOnSystemClassLoader=onClassLoader == null ? true : onClassLoader.system();
  Dependency deps=testClass.getAnnotation(Dependency.class);
  this.dependencies=deps == null ? null : deps.value();
  TestRoot lib=testClass.getAnnotation(TestRoot.class);
  if (lib == null) {
    this.libraryPath=null;
    this.librarySubDirs=null;
  }
 else {
    String path=lib.value();
    if (path.isEmpty()) {
      path=lib.path();
    }
    this.libraryPath=path;
    this.librarySubDirs=lib.libraryDir();
  }
  if (deps != null && lib != null) {
    throw new IllegalArgumentException("@Dependency and @TestRoot can not annotate a class at the same time");
  }
  Repository repos=testClass.getAnnotation(Repository.class);
  this.repositories=repos == null ? new String[0] : repos.value();
}
