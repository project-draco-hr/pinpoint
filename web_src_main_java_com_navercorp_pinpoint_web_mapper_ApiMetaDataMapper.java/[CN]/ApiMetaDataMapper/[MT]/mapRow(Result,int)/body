{
  if (result.isEmpty()) {
    return Collections.emptyList();
  }
  final byte[] rowKey=getOriginalKey(result.getRow());
  List<ApiMetaDataBo> apiMetaDataList=new ArrayList<ApiMetaDataBo>();
  for (  Cell cell : result.rawCells()) {
    ApiMetaDataBo apiMetaDataBo=new ApiMetaDataBo();
    apiMetaDataBo.readRowKey(rowKey);
    byte[] qualifier=CellUtil.cloneQualifier(cell);
    byte[] value=null;
    if (API_METADATA_CF_API_QUALI_SIGNATURE.equals(Bytes.toString(qualifier))) {
      value=CellUtil.cloneValue(cell);
    }
 else {
      value=qualifier;
    }
    Buffer buffer=new FixedBuffer(value);
    String apiInfo=buffer.readPrefixedString();
    int lineNumber=buffer.readInt();
    int type=0;
    if (buffer.limit() > 0) {
      type=buffer.readInt();
    }
    apiMetaDataBo.setApiInfo(apiInfo);
    apiMetaDataBo.setLineNumber(lineNumber);
    apiMetaDataBo.setType(type);
    apiMetaDataList.add(apiMetaDataBo);
    if (logger.isDebugEnabled()) {
      logger.debug("read apiAnnotation:{}",apiMetaDataBo);
    }
  }
  return apiMetaDataList;
}
