{
  if (isDebug) {
    logger.afterInterceptor(target,args,result);
  }
  Trace trace=traceContext.currentTraceObject();
  if (trace == null) {
    if (isDebug) {
      logger.debug("trace not found");
    }
    return;
  }
  try {
    final int recordIndex=parameterExtractor.extractIndex(args);
    if (recordIndex != ParameterExtractor.NOT_FOUND) {
      final Object recordObject=parameterExtractor.extractObject(args,recordIndex);
      trace.recordApi(methodDescriptor,recordObject,recordIndex);
    }
 else {
      trace.recordApi(methodDescriptor);
    }
    if (result instanceof Future) {
      Operation op=(Operation)getOperation.invoke(((Future<?>)result));
      if (op != null) {
        MemcachedNode handlingNode=op.getHandlingNode();
        SocketAddress socketAddress=handlingNode.getSocketAddress();
        if (socketAddress instanceof InetSocketAddress) {
          InetSocketAddress address=(InetSocketAddress)socketAddress;
          trace.recordEndPoint(address.getHostName() + ":" + address.getPort());
        }
      }
 else {
        logger.info("operation not found");
      }
    }
    String serviceCode=(String)getServiceCode.invoke(target);
    if (serviceCode != null) {
      trace.recordDestinationId(serviceCode);
      trace.recordServiceType(ServiceType.ARCUS);
    }
 else {
      trace.recordDestinationId("MEMCACHED");
      trace.recordServiceType(ServiceType.MEMCACHED);
    }
    trace.markAfterTime();
  }
  finally {
    trace.traceBlockEnd();
  }
}
