{
  final ValueResolver placeHolderResolver=new PlaceHolderResolver();
  this.profileEnable=readBoolean("profiler.enable",true);
  this.collectorSpanServerIp=readString("profiler.collector.span.ip",DEFAULT_IP,placeHolderResolver);
  this.collectorSpanServerPort=readInt("profiler.collector.span.port",9996);
  this.collectorStatServerIp=readString("profiler.collector.stat.ip",DEFAULT_IP,placeHolderResolver);
  this.collectorStatServerPort=readInt("profiler.collector.stat.port",9995);
  this.collectorTcpServerIp=readString("profiler.collector.tcp.ip",DEFAULT_IP,placeHolderResolver);
  this.collectorTcpServerPort=readInt("profiler.collector.tcp.port",9994);
  this.spanDataSenderWriteQueueSize=readInt("profiler.spandatasender.write.queue.size",1024 * 5);
  this.spanDataSenderSocketSendBufferSize=readInt("profiler.spandatasender.socket.sendbuffersize",1024 * 64 * 16);
  this.spanDataSenderSocketTimeout=readInt("profiler.spandatasender.socket.timeout",1000 * 3);
  this.spanDataSenderChunkSize=readInt("profiler.spandatasender.chunk.size",1024 * 16);
  this.statDataSenderWriteQueueSize=readInt("profiler.statdatasender.write.queue.size",1024 * 5);
  this.statDataSenderSocketSendBufferSize=readInt("profiler.statdatasender.socket.sendbuffersize",1024 * 64 * 16);
  this.statDataSenderSocketTimeout=readInt("profiler.statdatasender.socket.timeout",1000 * 3);
  this.statDataSenderChunkSize=readInt("profiler.statdatasender.chunk.size",1024 * 16);
  this.tcpDataSenderCommandAcceptEnable=readBoolean("profiler.tcpdatasender.command.accept.enable",false);
  this.jdbcProfile=readBoolean("profiler.jdbc",true);
  this.jdbcSqlCacheSize=readInt("profiler.jdbc.sqlcachesize",1024);
  this.jdbcMaxSqlBindValueSize=readInt("profiler.jdbc.maxsqlbindvaluesize",1024);
  this.jdbcProfileMySql=readBoolean("profiler.jdbc.mysql",true);
  this.jdbcProfileMySqlSetAutoCommit=readBoolean("profiler.jdbc.mysql.setautocommit",false);
  this.jdbcProfileMySqlCommit=readBoolean("profiler.jdbc.mysql.commit",false);
  this.jdbcProfileMySqlRollback=readBoolean("profiler.jdbc.mysql.rollback",false);
  this.jdbcProfileJtds=readBoolean("profiler.jdbc.jtds",true);
  this.jdbcProfileJtdsSetAutoCommit=readBoolean("profiler.jdbc.jtds.setautocommit",false);
  this.jdbcProfileJtdsCommit=readBoolean("profiler.jdbc.jtds.commit",false);
  this.jdbcProfileJtdsRollback=readBoolean("profiler.jdbc.jtds.rollback",false);
  this.jdbcProfileOracle=readBoolean("profiler.jdbc.oracle",true);
  this.jdbcProfileOracleSetAutoCommit=readBoolean("profiler.jdbc.oracle.setautocommit",false);
  this.jdbcProfileOracleCommit=readBoolean("profiler.jdbc.oracle.commit",false);
  this.jdbcProfileOracleRollback=readBoolean("profiler.jdbc.oracle.rollback",false);
  this.jdbcProfileCubrid=readBoolean("profiler.jdbc.cubrid",true);
  this.jdbcProfileCubridSetAutoCommit=readBoolean("profiler.jdbc.cubrid.setautocommit",false);
  this.jdbcProfileCubridCommit=readBoolean("profiler.jdbc.cubrid.commit",false);
  this.jdbcProfileCubridRollback=readBoolean("profiler.jdbc.cubrid.rollback",false);
  this.jdbcProfileDbcp=readBoolean("profiler.jdbc.dbcp",true);
  this.jdbcProfileDbcpConnectionClose=readBoolean("profiler.jdbc.dbcp.connectionclose",false);
  this.tomcatHidePinpointHeader=readBoolean("profiler.tomcat.hidepinpointheader",true);
  final String tomcatExcludeURL=readString("profiler.tomcat.excludeurl","");
  if (!tomcatExcludeURL.isEmpty()) {
    this.tomcatExcludeUrlFilter=new ExcludeUrlFilter(tomcatExcludeURL);
  }
  this.arucs=readBoolean("profiler.arcus",true);
  this.arucsKeyTrace=readBoolean("profiler.arcus.keytrace",false);
  this.memcached=readBoolean("profiler.memcached",true);
  this.memcachedKeyTrace=readBoolean("profiler.memcached.keytrace",false);
  this.apacheHttpClient4Profile=readBoolean("profiler.apache.httpclient4",true);
  this.apacheHttpClient4ProfileCookie=readBoolean("profiler.apache.httpclient4.cookie",false);
  this.apacheHttpClient4ProfileCookieDumpType=readDumpType("profiler.apache.httpclient4.cookie.dumptype",DumpType.EXCEPTION);
  this.apacheHttpClient4ProfileCookieSamplingRate=readInt("profiler.apache.httpclient4.cookie.sampling.rate",1);
  this.apacheHttpClient4ProfileEntity=readBoolean("profiler.apache.httpclient4.entity",false);
  this.apacheHttpClient4ProfileEntityDumpType=readDumpType("profiler.apache.httpclient4.entity.dumptype",DumpType.EXCEPTION);
  this.apacheHttpClient4ProfileEntitySamplingRate=readInt("profiler.apache.httpclient4.entity.sampling.rate",1);
  this.apacheNIOHttpClient4Profile=readBoolean("profiler.apache.nio.httpclient4",true);
  this.ningAsyncHttpClientProfile=readBoolean("profiler.ning.asynchttpclient",true);
  this.ningAsyncHttpClientProfileCookie=readBoolean("profiler.ning.asynchttpclient.cookie",false);
  this.ningAsyncHttpClientProfileCookieDumpType=readDumpType("profiler.ning.asynchttpclient.cookie.dumptype",DumpType.EXCEPTION);
  this.ningAsyncHttpClientProfileCookieDumpSize=readInt("profiler.ning.asynchttpclient.cookie.dumpsize",1024);
  this.ningAsyncHttpClientProfileCookieSamplingRate=readInt("profiler.ning.asynchttpclient.cookie.sampling.rate",1);
  this.ningAsyncHttpClientProfileEntity=readBoolean("profiler.ning.asynchttpclient.entity",false);
  this.ningAsyncHttpClientProfileEntityDumpType=readDumpType("profiler.ning.asynchttpclient.entity.dumptype",DumpType.EXCEPTION);
  this.ningAsyncHttpClientProfileEntityDumpSize=readInt("profiler.ning.asynchttpclient.entity.dumpsize",1024);
  this.ningAsyncHttpClientProfileEntitySamplingRate=readInt("profiler.asynchttpclient.entity.sampling.rate",1);
  this.ningAsyncHttpClientProfileParam=readBoolean("profiler.ning.asynchttpclient.param",false);
  this.ningAsyncHttpClientProfileParamDumpType=readDumpType("profiler.ning.asynchttpclient.param.dumptype",DumpType.EXCEPTION);
  this.ningAsyncHttpClientProfileParamDumpSize=readInt("profiler.ning.asynchttpclient.param.dumpsize",1024);
  this.ningAsyncHttpClientProfileParamSamplingRate=readInt("profiler.asynchttpclient.param.sampling.rate",1);
  this.redis=readBoolean("profiler.redis",true);
  this.redisPipeline=readBoolean("profiler.redis.pipeline",true);
  this.nbaseArc=readBoolean("profiler.nbase_arc",true);
  this.nbaseArcPipeline=readBoolean("profiler.nbase_arc.pipeline",true);
  this.ibatis=readBoolean("profiler.orm.ibatis",true);
  this.mybatis=readBoolean("profiler.orm.mybatis",true);
  this.springBeans=readBoolean("profiler.spring.beans",false);
  this.springBeansNamePatterns=readString("profiler.spring.beans.name.pattern",null);
  this.springBeansClassPatterns=readString("profiler.spring.beans.class.pattern",null);
  this.springBeansAnnotations=readString("profiler.spring.beans.annotation",null);
  this.samplingEnable=readBoolean("profiler.sampling.enable",true);
  this.samplingRate=readInt("profiler.sampling.rate",1);
  this.ioBufferingEnable=readBoolean("profiler.io.buffering.enable",true);
  this.ioBufferingBufferSize=readInt("profiler.io.buffering.buffersize",20);
  this.profileJvmCollectInterval=readInt("profiler.jvm.collect.interval",1000);
  this.agentInfoSendRetryInterval=readLong("profiler.agentInfo.send.retry.interval",DEFAULT_AGENT_INFO_SEND_RETRY_INTERVAL);
  this.applicationServerType=readServiceType("profiler.applicationservertype");
  final String profileableClass=readString("profiler.include","");
  if (!profileableClass.isEmpty()) {
    this.profilableClassFilter=new ProfilableClassFilter(profileableClass);
  }
  logger.info("configuration loaded successfully.");
}
