{
  final StringBuilder sb=new StringBuilder("ProfilerConfig{");
  sb.append("profileEnable=").append(profileEnable);
  sb.append(", collectorServerIp='").append(collectorServerIp).append('\'');
  sb.append(", collectorUdpSpanServerPort=").append(collectorUdpSpanServerPort);
  sb.append(", collectorUdpServerPort=").append(collectorUdpServerPort);
  sb.append(", collectorTcpServerPort=").append(collectorTcpServerPort);
  sb.append(", spanDataSenderWriteQueueSize=").append(spanDataSenderWriteQueueSize);
  sb.append(", spanDataSenderSocketSendBufferSize=").append(spanDataSenderSocketSendBufferSize);
  sb.append(", spanDataSenderSocketTimeout=").append(spanDataSenderSocketTimeout);
  sb.append(", statDataSenderWriteQueueSize=").append(statDataSenderWriteQueueSize);
  sb.append(", statDataSenderSocketSendBufferSize=").append(statDataSenderSocketSendBufferSize);
  sb.append(", statDataSenderSocketTimeout=").append(statDataSenderSocketTimeout);
  sb.append(", tcpDataSenderCommandAcceptEnable=").append(tcpDataSenderCommandAcceptEnable);
  sb.append(", jdbcSqlCacheSize=").append(jdbcSqlCacheSize);
  sb.append(", jdbcMaxSqlBindValueSize=").append(jdbcMaxSqlBindValueSize);
  sb.append(", jdbcProfile=").append(jdbcProfile);
  sb.append(", jdbcProfileMySql=").append(jdbcProfileMySql);
  sb.append(", jdbcProfileMySqlSetAutoCommit=").append(jdbcProfileMySqlSetAutoCommit);
  sb.append(", jdbcProfileMySqlCommit=").append(jdbcProfileMySqlCommit);
  sb.append(", jdbcProfileMySqlRollback=").append(jdbcProfileMySqlRollback);
  sb.append(", jdbcProfileJtds=").append(jdbcProfileJtds);
  sb.append(", jdbcProfileJtdsSetAutoCommit=").append(jdbcProfileJtdsSetAutoCommit);
  sb.append(", jdbcProfileJtdsCommit=").append(jdbcProfileJtdsCommit);
  sb.append(", jdbcProfileJtdsRollback=").append(jdbcProfileJtdsRollback);
  sb.append(", jdbcProfileOracle=").append(jdbcProfileOracle);
  sb.append(", jdbcProfileOracleSetAutoCommit=").append(jdbcProfileOracleSetAutoCommit);
  sb.append(", jdbcProfileOracleCommit=").append(jdbcProfileOracleCommit);
  sb.append(", jdbcProfileOracleRollback=").append(jdbcProfileOracleRollback);
  sb.append(", jdbcProfileCubrid=").append(jdbcProfileCubrid);
  sb.append(", jdbcProfileCubridSetAutoCommit=").append(jdbcProfileCubridSetAutoCommit);
  sb.append(", jdbcProfileCubridCommit=").append(jdbcProfileCubridCommit);
  sb.append(", jdbcProfileCubridRollback=").append(jdbcProfileCubridRollback);
  sb.append(", jdbcProfileDbcp=").append(jdbcProfileDbcp);
  sb.append(", jdbcProfileDbcpConnectionClose=").append(jdbcProfileDbcpConnectionClose);
  sb.append(", tomcatHidePinpointHeader=").append(tomcatHidePinpointHeader);
  sb.append(", tomcatExcludeUrlFilter=").append(tomcatExcludeUrlFilter);
  sb.append(", arucs=").append(arucs);
  sb.append(", arucsKeyTrace=").append(arucsKeyTrace);
  sb.append(", memcached=").append(memcached);
  sb.append(", memcachedKeyTrace=").append(memcachedKeyTrace);
  sb.append(", ibatis=").append(ibatis);
  sb.append(", mybatis=").append(mybatis);
  sb.append(", redis=").append(redis);
  sb.append(", redisPipeline=").append(redisPipeline);
  sb.append(", nbaseArc=").append(nbaseArc);
  sb.append(", nbaseArcPipeline=").append(nbaseArcPipeline);
  sb.append(", apacheHttpClient4Profile=").append(apacheHttpClient4Profile);
  sb.append(", apacheHttpClient4ProfileCookie=").append(apacheHttpClient4ProfileCookie);
  sb.append(", apacheHttpClient4ProfileCookieDumpType=").append(apacheHttpClient4ProfileCookieDumpType);
  sb.append(", apacheHttpClient4ProfileCookieSamplingRate=").append(apacheHttpClient4ProfileCookieSamplingRate);
  sb.append(", apacheHttpClient4ProfileEntity=").append(apacheHttpClient4ProfileEntity);
  sb.append(", apacheHttpClient4ProfileEntityDumpType=").append(apacheHttpClient4ProfileEntityDumpType);
  sb.append(", apacheHttpClient4ProfileEntitySamplingRate=").append(apacheHttpClient4ProfileEntitySamplingRate);
  sb.append(", apacheNIOHttpClient4Profile=").append(apacheNIOHttpClient4Profile);
  sb.append(", ningAsyncHttpClientProfile=").append(ningAsyncHttpClientProfile);
  sb.append(", ningAsyncHttpClientProfileCookie=").append(ningAsyncHttpClientProfileCookie);
  sb.append(", ningAsyncHttpClientProfileCookieDumpType=").append(ningAsyncHttpClientProfileCookieDumpType);
  sb.append(", ningAsyncHttpClientProfileCookieDumpSize=").append(ningAsyncHttpClientProfileCookieDumpSize);
  sb.append(", ningAsyncHttpClientProfileCookieSamplingRate=").append(ningAsyncHttpClientProfileCookieSamplingRate);
  sb.append(", ningAsyncHttpClientProfileEntity=").append(ningAsyncHttpClientProfileEntity);
  sb.append(", ningAsyncHttpClientProfileEntityDumpType=").append(ningAsyncHttpClientProfileEntityDumpType);
  sb.append(", ningAsyncHttpClientProfileEntityDumpSize=").append(ningAsyncHttpClientProfileEntityDumpSize);
  sb.append(", ningAsyncHttpClientProfileEntitySamplingRate=").append(ningAsyncHttpClientProfileEntitySamplingRate);
  sb.append(", ningAsyncHttpClientProfileParam=").append(ningAsyncHttpClientProfileParam);
  sb.append(", ningAsyncHttpClientProfileParamDumpType=").append(ningAsyncHttpClientProfileParamDumpType);
  sb.append(", ningAsyncHttpClientProfileParamDumpSize=").append(ningAsyncHttpClientProfileParamDumpSize);
  sb.append(", ningAsyncHttpClientProfileParamSamplingRate=").append(ningAsyncHttpClientProfileParamSamplingRate);
  sb.append(", lineGameNettyParamDumpSize=").append(lineGameNettyParamDumpSize);
  sb.append(", lineGameNettyEntityDumpSize=").append(lineGameNettyEntityDumpSize);
  sb.append(", samplingEnable=").append(samplingEnable);
  sb.append(", samplingRate=").append(samplingRate);
  sb.append(", ioBufferingEnable=").append(ioBufferingEnable);
  sb.append(", ioBufferingBufferSize=").append(ioBufferingBufferSize);
  sb.append(", profileJvmCollectInterval=").append(profileJvmCollectInterval);
  sb.append(", profileInclude=").append(profileInclude);
  sb.append(", profileIncludeSub=").append(profileIncludeSub);
  sb.append(", DEFAULT_HEART_BEAT_INTERVAL=").append(DEFAULT_HEART_BEAT_INTERVAL);
  sb.append(", heartbeatInterval=").append(heartbeatInterval);
  sb.append(", applicationServerType=").append(applicationServerType);
  sb.append('}');
  return sb.toString();
}
