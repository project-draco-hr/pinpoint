{
  transformTemplate.transform("org.apache.http.impl.client.AbstractHttpClient",new TransformCallback(){
    @Override public byte[] doInTransform(    Instrumentor Instrument,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      InstrumentClass target=Instrument.getInstrumentClass(loader,className,classfileBuffer);
      injectHttpClientExecuteMethodWithHttpRequestInterceptor(target,false,"org.apache.http.HttpHost","org.apache.http.HttpRequest");
      injectHttpClientExecuteMethodWithHttpRequestInterceptor(target,false,"org.apache.http.HttpHost","org.apache.http.HttpRequest","org.apache.http.protocol.HttpContext");
      injectHttpClientExecuteMethodWithHttpRequestInterceptor(target,true,"org.apache.http.HttpHost","org.apache.http.HttpRequest","org.apache.http.client.ResponseHandler");
      injectHttpClientExecuteMethodWithHttpRequestInterceptor(target,true,"org.apache.http.HttpHost","org.apache.http.HttpRequest","org.apache.http.client.ResponseHandler","org.apache.http.protocol.HttpContext");
      injectHttpClientExecuteMethodWithHttpUriRequestInterceptor(target,false,"org.apache.http.client.methods.HttpUriRequest");
      injectHttpClientExecuteMethodWithHttpUriRequestInterceptor(target,false,"org.apache.http.client.methods.HttpUriRequest","org.apache.http.protocol.HttpContext");
      injectHttpClientExecuteMethodWithHttpUriRequestInterceptor(target,true,"org.apache.http.client.methods.HttpUriRequest","org.apache.http.client.ResponseHandler");
      injectHttpClientExecuteMethodWithHttpUriRequestInterceptor(target,true,"org.apache.http.client.methods.HttpUriRequest","org.apache.http.client.ResponseHandler","org.apache.http.protocol.HttpContext");
      return target.toBytecode();
    }
  }
);
}
