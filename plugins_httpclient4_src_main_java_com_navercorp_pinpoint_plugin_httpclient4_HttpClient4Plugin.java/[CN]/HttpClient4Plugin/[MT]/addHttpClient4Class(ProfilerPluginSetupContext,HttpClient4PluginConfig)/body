{
  final ClassFileTransformerBuilder classEditorBuilder=context.getClassFileTransformerBuilder("org.apache.http.impl.client.AbstractHttpClient");
  classEditorBuilder.conditional(ClassConditions.hasClass("org.apache.http.impl.client.AbstractHttpClient"),new ConditionalClassFileTransformerSetup(){
    @Override public void setup(    ConditionalClassFileTransformerBuilder conditional){
      injectHttpClientExecuteMethodWithHttpRequestInterceptor(conditional,false,"org.apache.http.HttpHost","org.apache.http.HttpRequest");
      injectHttpClientExecuteMethodWithHttpRequestInterceptor(conditional,false,"org.apache.http.HttpHost","org.apache.http.HttpRequest","org.apache.http.protocol.HttpContext");
      injectHttpClientExecuteMethodWithHttpRequestInterceptor(conditional,true,"org.apache.http.HttpHost","org.apache.http.HttpRequest","org.apache.http.client.ResponseHandler");
      injectHttpClientExecuteMethodWithHttpRequestInterceptor(conditional,true,"org.apache.http.HttpHost","org.apache.http.HttpRequest","org.apache.http.client.ResponseHandler","org.apache.http.protocol.HttpContext");
      injectHttpClientExecuteMethodWithHttpUriRequestInterceptor(conditional,false,"org.apache.http.client.methods.HttpUriRequest");
      injectHttpClientExecuteMethodWithHttpUriRequestInterceptor(conditional,false,"org.apache.http.client.methods.HttpUriRequest","org.apache.http.protocol.HttpContext");
      injectHttpClientExecuteMethodWithHttpUriRequestInterceptor(conditional,true,"org.apache.http.client.methods.HttpUriRequest","org.apache.http.client.ResponseHandler");
      injectHttpClientExecuteMethodWithHttpUriRequestInterceptor(conditional,true,"org.apache.http.client.methods.HttpUriRequest","org.apache.http.client.ResponseHandler","org.apache.http.protocol.HttpContext");
    }
  }
);
  context.addClassFileTransformer(classEditorBuilder.build());
}
