{
  transformTemplate.transform("org.apache.http.protocol.HttpRequestExecutor",new TransformCallback(){
    @Override public byte[] doInTransform(    Instrumentor instrumentor,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      InstrumentClass target=instrumentor.getInstrumentClass(loader,className,classfileBuffer);
      InstrumentMethod execute=target.getDeclaredMethod("execute","org.apache.http.HttpRequest","org.apache.http.HttpClientConnection","org.apache.http.protocol.HttpContext");
      if (execute != null) {
        execute.addInterceptor("com.navercorp.pinpoint.plugin.httpclient4.interceptor.HttpRequestExecutorExecuteMethodInterceptor");
      }
      InstrumentMethod doSendRequest=target.getDeclaredMethod("doSendRequest","org.apache.http.HttpRequest","org.apache.http.HttpClientConnection","org.apache.http.protocol.HttpContext");
      if (doSendRequest != null) {
        doSendRequest.addInterceptor("com.navercorp.pinpoint.plugin.httpclient4.interceptor.HttpRequestExecutorDoSendRequestAndDoReceiveResponseMethodInterceptor");
      }
      InstrumentMethod doReceiveResponse=target.getDeclaredMethod("doReceiveResponse","org.apache.http.HttpRequest","org.apache.http.HttpClientConnection","org.apache.http.protocol.HttpContext");
      if (doReceiveResponse != null) {
        doReceiveResponse.addInterceptor("com.navercorp.pinpoint.plugin.httpclient4.interceptor.HttpRequestExecutorDoSendRequestAndDoReceiveResponseMethodInterceptor");
      }
      return target.toBytecode();
    }
  }
);
}
