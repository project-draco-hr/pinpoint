{
  final ClassFileTransformerBuilder classEditorBuilder=context.getClassFileTransformerBuilder("org.apache.http.concurrent.BasicFuture");
  classEditorBuilder.injectMetadata(METADATA_ASYNC_TRACE_ID);
  MethodTransformerBuilder methodEditorBuilder=classEditorBuilder.editMethod("get");
  methodEditorBuilder.property(MethodTransformerProperty.IGNORE_IF_NOT_EXIST);
  methodEditorBuilder.injectInterceptor("com.navercorp.pinpoint.plugin.httpclient4.interceptor.BasicFutureMethodInterceptor");
  MethodTransformerBuilder getMethodEditorBuilder=classEditorBuilder.editMethod("get","long","java.util.concurrent.TimeUnit");
  getMethodEditorBuilder.property(MethodTransformerProperty.IGNORE_IF_NOT_EXIST);
  getMethodEditorBuilder.injectInterceptor("com.navercorp.pinpoint.plugin.httpclient4.interceptor.BasicFutureMethodInterceptor");
  MethodTransformerBuilder completedMethodEditorBuilder=classEditorBuilder.editMethod("completed","java.lang.Object");
  completedMethodEditorBuilder.property(MethodTransformerProperty.IGNORE_IF_NOT_EXIST);
  completedMethodEditorBuilder.injectInterceptor("com.navercorp.pinpoint.plugin.httpclient4.interceptor.BasicFutureMethodInterceptor");
  MethodTransformerBuilder failMethodEditorBuilder=classEditorBuilder.editMethod("failed","java.lang.Exception");
  failMethodEditorBuilder.property(MethodTransformerProperty.IGNORE_IF_NOT_EXIST);
  failMethodEditorBuilder.injectInterceptor("com.navercorp.pinpoint.plugin.httpclient4.interceptor.BasicFutureMethodInterceptor");
  MethodTransformerBuilder cancelMethodEditorBuilder=classEditorBuilder.editMethod("cancel","boolean");
  cancelMethodEditorBuilder.property(MethodTransformerProperty.IGNORE_IF_NOT_EXIST);
  cancelMethodEditorBuilder.injectInterceptor("com.navercorp.pinpoint.plugin.httpclient4.interceptor.BasicFutureMethodInterceptor");
  context.addClassFileTransformer(classEditorBuilder.build());
}
