{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  TRegionInfo typedOther=(TRegionInfo)other;
  lastComparison=Boolean.valueOf(isSetStartKey()).compareTo(typedOther.isSetStartKey());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStartKey()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.startKey,typedOther.startKey);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetEndKey()).compareTo(typedOther.isSetEndKey());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetEndKey()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.endKey,typedOther.endKey);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetId()).compareTo(typedOther.isSetId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.id,typedOther.id);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetName()).compareTo(typedOther.isSetName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.name,typedOther.name);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetVersion()).compareTo(typedOther.isSetVersion());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetVersion()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.version,typedOther.version);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
