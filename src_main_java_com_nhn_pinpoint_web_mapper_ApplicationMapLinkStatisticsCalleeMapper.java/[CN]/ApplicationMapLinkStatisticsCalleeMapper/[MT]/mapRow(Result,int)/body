{
  KeyValue[] keyList=result.raw();
  Map<Long,Map<Short,Long>> stat=new HashMap<Long,Map<Short,Long>>();
  for (  KeyValue kv : keyList) {
    byte[] qualifier=kv.getQualifier();
    String calleeApplicationName=ApplicationMapStatisticsUtils.getDestApplicationNameFromColumnName(qualifier);
    short calleeServiceType=ApplicationMapStatisticsUtils.getDestServiceTypeFromColumnName(qualifier);
    if (this.calleeServiceType.isUnknown()) {
      if (!this.calleeApplicationName.equals(calleeApplicationName)) {
        System.out.println("\tFIND CALLEE SKIP,1, DIFFERENT DEST. fetched={" + calleeApplicationName + ", "+ ServiceType.findServiceType(calleeServiceType)+ "}, params={"+ this.calleeApplicationName+ ", "+ this.calleeServiceType+ "}");
        continue;
      }
    }
 else {
      if (!this.calleeApplicationName.equals(calleeApplicationName) || this.calleeServiceType.getCode() != calleeServiceType) {
        System.out.println("\tFIND CALLEE SKIP,2, DIFFERENT DEST. fetched={" + calleeApplicationName + ", "+ ServiceType.findServiceType(calleeServiceType)+ "}, params={"+ this.calleeApplicationName+ ", "+ this.calleeServiceType+ "}");
        continue;
      }
    }
    long timestamp=ApplicationMapStatisticsUtils.getTimestampFromRowKey(kv.getRow());
    short histogramSlot=ApplicationMapStatisticsUtils.getHistogramSlotFromColumnName(qualifier);
    long requestCount=Bytes.toLong(kv.getValue());
    if (stat.containsKey(timestamp)) {
      Map<Short,Long> map=stat.get(timestamp);
      long value=(map.containsKey(histogramSlot) ? map.get(histogramSlot) + requestCount : 0);
      map.put(histogramSlot,value);
      System.out.println("FETCHED : " + map);
    }
 else {
      Map<Short,Long> map=new TreeMap<Short,Long>();
      map.put(histogramSlot,requestCount);
      stat.put(timestamp,map);
      System.out.println("FETCHED : " + map);
    }
  }
  return stat;
}
