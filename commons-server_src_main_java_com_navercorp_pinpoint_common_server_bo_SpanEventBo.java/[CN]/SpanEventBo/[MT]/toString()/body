{
  StringBuilder builder=new StringBuilder();
  builder.append("{version=");
  builder.append(version);
  builder.append(", agentId=");
  builder.append(agentId);
  builder.append(", applicationId=");
  builder.append(applicationId);
  builder.append(", agentStartTime=");
  builder.append(agentStartTime);
  builder.append(", traceAgentId=");
  builder.append(traceAgentId);
  builder.append(", traceAgentStartTime=");
  builder.append(traceAgentStartTime);
  builder.append(", traceTransactionSequence=");
  builder.append(traceTransactionSequence);
  builder.append(", sequence=");
  builder.append(sequence);
  builder.append(", startElapsed=");
  builder.append(startElapsed);
  builder.append(", endElapsed=");
  builder.append(endElapsed);
  builder.append(", rpc=");
  builder.append(rpc);
  builder.append(", serviceType=");
  builder.append(serviceType);
  builder.append(", destinationId=");
  builder.append(destinationId);
  builder.append(", endPoint=");
  builder.append(endPoint);
  builder.append(", apiId=");
  builder.append(apiId);
  builder.append(", annotationBoList=");
  builder.append(annotationBoList);
  builder.append(", depth=");
  builder.append(depth);
  builder.append(", nextSpanId=");
  builder.append(nextSpanId);
  builder.append(", hasException=");
  builder.append(hasException);
  builder.append(", exceptionId=");
  builder.append(exceptionId);
  builder.append(", exceptionMessage=");
  builder.append(exceptionMessage);
  builder.append(", exceptionClass=");
  builder.append(exceptionClass);
  builder.append(", asyncId=");
  builder.append(asyncId);
  builder.append(", nextAsyncId=");
  builder.append(nextAsyncId);
  builder.append(", asyncSequence=");
  builder.append(asyncSequence);
  builder.append("}");
  return builder.toString();
}
