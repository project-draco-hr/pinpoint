{
  try {
    Class<?> getterType=pluginContext.injectClass(classLoader,getterTypeName);
    GetterDetails getterDetails=new GetterAnalyzer().analyze(getterType);
    CtField field=ctClass.getField(fieldName);
    String fieldTypeName=JavaAssistUtils.javaClassNameToObjectName(getterDetails.getFieldType().getName());
    if (!field.getType().getName().equals(fieldTypeName)) {
      throw new IllegalArgumentException("Return type of the getter is different with the field type. getterMethod: " + getterDetails.getGetter() + ", fieldType: "+ field.getType().getName());
    }
    CtMethod getterMethod=CtNewMethod.getter(getterDetails.getGetter().getName(),field);
    if (getterMethod.getDeclaringClass() != ctClass) {
      getterMethod=CtNewMethod.copy(getterMethod,ctClass,null);
    }
    ctClass.addMethod(getterMethod);
    CtClass ctInterface=ctClass.getClassPool().get(getterTypeName);
    ctClass.addInterface(ctInterface);
  }
 catch (  Exception e) {
    throw new InstrumentException("Failed to add getter: " + getterTypeName,e);
  }
}
