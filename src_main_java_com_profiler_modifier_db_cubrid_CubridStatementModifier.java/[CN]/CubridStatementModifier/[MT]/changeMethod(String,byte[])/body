{
  StaticAroundInterceptor interceptor=new StaticAroundInterceptor(){
    @Override public void after(    Object target,    String className,    String methodName,    String parameterDescription,    Object[] args,    Object result){
      DatabaseRequestTracer.putSqlQuery(ProfilerConstant.REQ_DATA_TYPE_DB_QUERY,(String)args[0]);
    }
    @Override public void before(    Object target,    String className,    String methodName,    String parameterDescription,    Object[] args){
      DatabaseRequestTracer.put(ProfilerConstant.REQ_DATA_TYPE_DB_EXECUTE_QUERY);
      ;
    }
  }
;
  try {
    InstrumentClass aClass=this.byteCodeInstrumentor.getClass(javassistClassName);
    aClass.addInterceptor("executeQuery",new String[]{"java.lang.String"},interceptor);
    printClassConvertComplete(javassistClassName);
    CtClass cc=null;
    updateExecuteQueryMethod(cc);
    return cc.toBytecode();
  }
 catch (  Exception e) {
    if (logger.isLoggable(Level.WARNING)) {
      logger.log(Level.WARNING,e.getMessage(),e);
    }
  }
  return null;
}
