{
  final List<SpanEventBo> spanEventBoList=span.getSpanEventBoList();
  if (CollectionUtils.isEmpty(spanEventBoList)) {
    return;
  }
  final Application srcApplication=applicationFactory.createApplication(span.getApplicationId(),span.getApplicationServiceType());
  LinkDataMap sourceLinkDataMap=linkDataDuplexMap.getSourceLinkDataMap();
  for (  SpanEventBo spanEvent : spanEventBoList) {
    ServiceType destServiceType=registry.findServiceType(spanEvent.getServiceType());
    if (!destServiceType.isRecordStatistics()) {
      continue;
    }
    if (destServiceType.isRpcClient()) {
      if (!transactionSpanMap.containsKey(spanEvent.getNextSpanId())) {
        destServiceType=ServiceType.UNKNOWN;
      }
    }
    String dest=spanEvent.getDestinationId();
    if (dest == null) {
      dest="Unknown";
    }
    final Application destApplication=this.applicationFactory.createApplication(dest,destServiceType);
    final short slotTime=getHistogramSlotTime(spanEvent,destServiceType);
    final long spanEventTimeStamp=window.refineTimestamp(span.getStartTime() + spanEvent.getStartElapsed());
    if (logger.isTraceEnabled()) {
      logger.trace("spanEvent  src:{} {} -> dest:{} {}",srcApplication,span.getAgentId(),destApplication,spanEvent.getEndPoint());
    }
    final String destinationAgentId=StringUtils.defaultString(spanEvent.getEndPoint());
    sourceLinkDataMap.addLinkData(srcApplication,span.getAgentId(),destApplication,destinationAgentId,spanEventTimeStamp,slotTime,1);
  }
}
