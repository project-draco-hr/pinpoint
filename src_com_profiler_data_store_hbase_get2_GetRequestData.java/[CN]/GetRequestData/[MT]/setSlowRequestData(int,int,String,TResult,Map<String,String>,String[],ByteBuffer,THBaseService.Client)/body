{
  try {
    String urlKey=keyList[perColumnDataCount * indexRequestURL + maxValuePos];
    String[] keys=seperateFamilyQualifier(urlKey);
    String key=keys[1];
    byte[] maxRow=rowResult.getRow();
    TGet get=new TGet();
    get.setRow(maxRow);
    List<TColumn> columnList=new ArrayList<TColumn>();
    TColumn column=new TColumn();
    column.setFamily(Converter.toByteBuffer(HBASE_REQUEST_COLUMN_REQUEST_DATA));
    column.setQualifier(key.getBytes());
    columnList.add(column);
    get.setColumns(columnList);
    TResult maxDataResult=client.get(tableNameBuffer,get);
    if (maxDataResult != null && maxDataResult.getColumnValuesSize() > 0) {
      String elapsedTimeCell=columns.get(keyList[perColumnDataCount * indexElapsedTime + maxValuePos]);
      String reqParamsCell=columns.get(keyList[perColumnDataCount * indexRequestParams + maxValuePos]);
      String fromTimeCell=columns.get(keyList[perColumnDataCount * indexRequestTime + maxValuePos]);
      String toTimeCell=columns.get(keyList[perColumnDataCount * indexResponseTime + maxValuePos]);
      TColumnValue valueColumn=maxDataResult.getColumnValues().get(0);
      byte[] dtoBytes=valueColumn.getValue();
      CharSequence agentName=LocalDataManager.getAgentName(client,Integer.parseInt(agentHashCode));
      String url=columns.get(urlKey);
      byte[] fromTime=fromTimeCell.getBytes();
      byte[] toTime=toTimeCell.getBytes();
      byte[] elapsedTime=elapsedTimeCell.getBytes();
      String reqParams=new String(reqParamsCell.getBytes());
      StringBuilder requestDataString=new StringBuilder();
      requestDataString.append("Agent Name:");
      requestDataString.append(agentName);
      requestDataString.append(NEW_LINE);
      requestDataString.append("URL:");
      requestDataString.append(url);
      requestDataString.append(NEW_LINE);
      requestDataString.append("Request Params:");
      requestDataString.append(reqParams);
      requestDataString.append(NEW_LINE);
      requestDataString.append("Request Time:");
      requestDataString.append(Converter.toHmsMs(fromTime));
      requestDataString.append(NEW_LINE);
      requestDataString.append("Response Time:");
      requestDataString.append(Converter.toHmsMs(toTime));
      requestDataString.append(NEW_LINE);
      requestDataString.append("Elapsed Time:");
      requestDataString.append(Converter.toDecimalComma(elapsedTime));
      requestDataString.append(NEW_LINE);
      if (dtoBytes.length != 0) {
        requestDataString.append("<HR>");
        TDeserializer deserializer=new TDeserializer(new TBinaryProtocol.Factory());
        RequestDataListThriftDTO dto=new RequestDataListThriftDTO();
        deserializer.deserialize(dto,dtoBytes);
        requestDataString.append(RequestDataPrinter.printRequestData(dto,client));
      }
      slowRequestDataList.add(requestDataString);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
