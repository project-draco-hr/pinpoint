{
  if (logger.isLoggable(Level.INFO)) {
    logger.info("before " + StringUtils.toString(target) + " "+ className+ "."+ methodName+ parameterDescription+ " args:"+ Arrays.toString(args));
  }
  try {
    TraceContext traceContext=TraceContext.getTraceContext();
    traceContext.getActiveThreadCounter().start();
    HttpServletRequest request=(HttpServletRequest)args[0];
    String requestURL=request.getRequestURI();
    String clientIP=request.getRemoteAddr();
    String parameters=getRequestParameter(request);
    TraceID traceId=populateTraceIdFromRequest(request);
    Trace trace;
    if (traceId != null) {
      TraceID nextTraceId=traceId.getNextTraceId();
      trace=traceContext.attachTraceObject(nextTraceId);
    }
 else {
      TraceID newTraceID=TraceID.newTraceId();
      if (logger.isLoggable(Level.INFO)) {
        logger.info("TraceID not exist. start new trace. " + newTraceID);
        logger.log(Level.FINE,"requestUrl:" + requestURL + " clientIp"+ clientIP+ " parameter:"+ parameters);
      }
      trace=traceContext.attachTraceObject(newTraceID);
    }
    trace.markBeforeTime();
    trace.recordRpcName(Agent.getInstance().getApplicationName(),requestURL);
    trace.recordEndPoint(request.getProtocol() + ":" + request.getLocalName()+ ":"+ request.getLocalPort());
    trace.recordAttibute("http.url",request.getRequestURI());
    if (parameters != null && parameters.length() > 0) {
      trace.recordAttibute("http.params",parameters);
    }
    trace.record(Annotation.ServerRecv);
  }
 catch (  Exception e) {
    if (logger.isLoggable(Level.WARNING)) {
      logger.log(Level.WARNING,"Tomcat StandardHostValve trace start fail. Caused:" + e.getMessage(),e);
    }
  }
}
