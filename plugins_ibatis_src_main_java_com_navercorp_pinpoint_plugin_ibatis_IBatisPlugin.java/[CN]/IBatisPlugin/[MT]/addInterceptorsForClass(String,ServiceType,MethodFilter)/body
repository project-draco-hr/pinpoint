{
  transformTemplate.transform(targetClassName,new TransformCallback(){
    @Override public byte[] doInTransform(    Instrumentor instrumentor,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      final InstrumentClass target=instrumentor.getInstrumentClass(loader,className,classfileBuffer);
      final List<InstrumentMethod> methodsToTrace=target.getDeclaredMethods(methodFilter);
      for (      InstrumentMethod methodToTrace : methodsToTrace) {
        String sqlMapOperationInterceptor="com.navercorp.pinpoint.plugin.ibatis.interceptor.SqlMapOperationInterceptor";
        methodToTrace.addScopedInterceptor(sqlMapOperationInterceptor,va(serviceType),IBATIS_SCOPE,ExecutionPolicy.BOUNDARY);
      }
      return target.toBytecode();
    }
  }
);
}
