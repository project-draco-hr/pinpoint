{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetJvmGcNewCount()) {
    optionals.set(0);
  }
  if (struct.isSetJvmGcNewTime()) {
    optionals.set(1);
  }
  if (struct.isSetJvmPoolCodeCacheUsed()) {
    optionals.set(2);
  }
  if (struct.isSetJvmPoolNewGenUsed()) {
    optionals.set(3);
  }
  if (struct.isSetJvmPoolOldGenUsed()) {
    optionals.set(4);
  }
  if (struct.isSetJvmPoolSurvivorSpaceUsed()) {
    optionals.set(5);
  }
  if (struct.isSetJvmPoolPermGenUsed()) {
    optionals.set(6);
  }
  if (struct.isSetJvmPoolMetaspaceUsed()) {
    optionals.set(7);
  }
  oprot.writeBitSet(optionals,8);
  if (struct.isSetJvmGcNewCount()) {
    oprot.writeI64(struct.jvmGcNewCount);
  }
  if (struct.isSetJvmGcNewTime()) {
    oprot.writeI64(struct.jvmGcNewTime);
  }
  if (struct.isSetJvmPoolCodeCacheUsed()) {
    oprot.writeDouble(struct.jvmPoolCodeCacheUsed);
  }
  if (struct.isSetJvmPoolNewGenUsed()) {
    oprot.writeDouble(struct.jvmPoolNewGenUsed);
  }
  if (struct.isSetJvmPoolOldGenUsed()) {
    oprot.writeDouble(struct.jvmPoolOldGenUsed);
  }
  if (struct.isSetJvmPoolSurvivorSpaceUsed()) {
    oprot.writeDouble(struct.jvmPoolSurvivorSpaceUsed);
  }
  if (struct.isSetJvmPoolPermGenUsed()) {
    oprot.writeDouble(struct.jvmPoolPermGenUsed);
  }
  if (struct.isSetJvmPoolMetaspaceUsed()) {
    oprot.writeDouble(struct.jvmPoolMetaspaceUsed);
  }
}
