{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetJvmGcNewCount()).compareTo(other.isSetJvmGcNewCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcNewCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcNewCount,other.jvmGcNewCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcNewTime()).compareTo(other.isSetJvmGcNewTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcNewTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcNewTime,other.jvmGcNewTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmPoolCodeCacheUsed()).compareTo(other.isSetJvmPoolCodeCacheUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmPoolCodeCacheUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmPoolCodeCacheUsed,other.jvmPoolCodeCacheUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmPoolNewGenUsed()).compareTo(other.isSetJvmPoolNewGenUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmPoolNewGenUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmPoolNewGenUsed,other.jvmPoolNewGenUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmPoolOldGenUsed()).compareTo(other.isSetJvmPoolOldGenUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmPoolOldGenUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmPoolOldGenUsed,other.jvmPoolOldGenUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmPoolSurvivorSpaceUsed()).compareTo(other.isSetJvmPoolSurvivorSpaceUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmPoolSurvivorSpaceUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmPoolSurvivorSpaceUsed,other.jvmPoolSurvivorSpaceUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmPoolPermGenUsed()).compareTo(other.isSetJvmPoolPermGenUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmPoolPermGenUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmPoolPermGenUsed,other.jvmPoolPermGenUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmPoolMetaspaceUsed()).compareTo(other.isSetJvmPoolMetaspaceUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmPoolMetaspaceUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmPoolMetaspaceUsed,other.jvmPoolMetaspaceUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
