{
  if (isInfo) {
    logger.info("defineClass class:{}, cl:{}",defineClass,classLoader);
  }
  try {
    final NamedClassPool classPool=findClassPool(classLoader);
synchronized (classLoader) {
      if (this.classLoadChecker.exist(classLoader,defineClass)) {
        return classLoader.loadClass(defineClass);
      }
 else {
        final CtClass clazz=classPool.get(defineClass);
        checkTargetClassInterface(clazz);
        defineAbstractSuperClass(clazz,classLoader,protectedDomain);
        defineNestedClass(clazz,classLoader,protectedDomain);
        return clazz.toClass(classLoader,protectedDomain);
      }
    }
  }
 catch (  NotFoundException e) {
    throw new InstrumentException(defineClass + " class not found. Cause:" + e.getMessage(),e);
  }
catch (  CannotCompileException e) {
    throw new InstrumentException(defineClass + " class define fail. cl:" + classLoader+ " Cause:"+ e.getMessage(),e);
  }
catch (  ClassNotFoundException e) {
    throw new InstrumentException(defineClass + " class not found. Cause:" + e.getMessage(),e);
  }
}
