{
  boolean traceKey=config.isMemcachedKeyTrace();
  ClassEditorBuilder builder=context.newClassEditorBuilder();
  builder.edit("net.spy.memcached.MemcachedClient");
  builder.when(new Condition(){
    @Override public boolean check(    InstrumentClass target){
      return target.hasDeclaredMethod("addOp",new String[]{"java.lang.String","net.spy.memcached.ops.Operation"});
    }
  }
);
  MetadataBuilder mb=builder.newMetadataBuilder();
  mb.inject("com.nhn.pinpoint.plugin.arcus.accessor.ServiceCodeAccessor");
  InterceptorBuilder ib=builder.newInterceptorBuilder();
  ib.intercept("addOp","java.lang.String","net.spy.memcached.ops.Operation");
  ib.with("com.nhn.pinpoint.plugin.arcus.interceptor.AddOpInterceptor");
  InterceptorBuilder ib2=builder.newInterceptorBuilder();
  ib2.interceptMethodsFilteredBy(new MemcachedMethodFilter());
  ib2.with("com.nhn.pinpoint.plugin.arcus.interceptor.ApiInterceptor");
  ib2.in(Constants.ARCUS_SCOPE);
  ib2.constructedWith(traceKey);
  return builder.build();
}
