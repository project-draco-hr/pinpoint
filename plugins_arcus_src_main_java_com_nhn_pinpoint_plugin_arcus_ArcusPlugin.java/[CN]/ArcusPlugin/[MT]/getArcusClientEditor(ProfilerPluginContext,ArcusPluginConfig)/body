{
  boolean traceKey=config.isArcusKeyTrace();
  ClassEditorBuilder builder=context.newClassEditorBuilder();
  builder.edit("net.spy.memcached.ArcusClient");
  builder.when(new Condition(){
    @Override public boolean check(    InstrumentClass target){
      return target.hasMethod("addOp",new String[]{"java.lang.String","net.spy.memcached.ops.Operation"},"net.spy.memcached.ops.Operation");
    }
  }
);
  InterceptorBuilder ib=builder.newInterceptorBuilder();
  ib.intercept("setCacheManager","net.spy.memcached.CacheManager");
  ib.with("com.nhn.pinpoint.plugin.arcus.interceptor.SetCacheManagerInterceptor");
  InterceptorBuilder ib2=builder.newInterceptorBuilder();
  ib2.interceptMethodsFilteredBy(new ArcusMethodFilter());
  ib2.with("com.nhn.pinpoint.plugin.arcus.interceptor.ApiInterceptor");
  ib2.constructedWith(traceKey);
  ib2.in(Constants.ARCUS_SCOPE);
  return builder.build();
}
