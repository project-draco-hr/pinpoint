{
  if (logger.isInfoEnabled()) {
    logger.info("Modifing. {}",javassistClassName);
  }
  this.byteCodeInstrumentor.checkLibrary(classLoader,javassistClassName);
  try {
    InstrumentClass mysqlConnection=byteCodeInstrumentor.getClass(javassistClassName);
    mysqlConnection.addTraceVariable("__databaseInfo","__setDatabaseInfo","__getDatabaseInfo","java.lang.Object");
    Interceptor closeConnection=new ScopeDelegateSimpleInterceptor(new ConnectionCloseInterceptor(),JDBCScope.SCOPE);
    mysqlConnection.addInterceptor("close",null,closeConnection);
    Interceptor createStatement=new ScopeDelegateSimpleInterceptor(new StatementCreateInterceptor(),JDBCScope.SCOPE);
    mysqlConnection.addInterceptor("createStatement",null,createStatement);
    Interceptor preparedStatement=new ScopeDelegateSimpleInterceptor(new PreparedStatementCreateInterceptor(),JDBCScope.SCOPE);
    mysqlConnection.addInterceptor("prepareStatement",new String[]{"java.lang.String"},preparedStatement);
    final ProfilerConfig profilerConfig=agent.getProfilerConfig();
    if (profilerConfig.isJdbcProfileMySqlSetAutoCommit()) {
      Interceptor setAutocommit=new ScopeDelegateSimpleInterceptor(new TransactionSetAutoCommitInterceptor(),JDBCScope.SCOPE);
      mysqlConnection.addInterceptor("setAutoCommit",new String[]{"boolean"},setAutocommit);
    }
    if (profilerConfig.isJdbcProfileMySqlCommit()) {
      Interceptor commit=new ScopeDelegateSimpleInterceptor(new TransactionCommitInterceptor(),JDBCScope.SCOPE);
      mysqlConnection.addInterceptor("commit",null,commit);
    }
    if (profilerConfig.isJdbcProfileMySqlRollback()) {
      Interceptor rollback=new ScopeDelegateSimpleInterceptor(new TransactionRollbackInterceptor(),JDBCScope.SCOPE);
      mysqlConnection.addInterceptor("rollback",null,rollback);
    }
    if (this.logger.isInfoEnabled()) {
      this.logger.info("{} class is converted.",javassistClassName);
    }
    return mysqlConnection.toBytecode();
  }
 catch (  InstrumentException e) {
    if (logger.isWarnEnabled()) {
      logger.warn("{} modify fail. Cause:{}",this.getClass().getSimpleName(),e.getMessage(),e);
    }
    return null;
  }
}
