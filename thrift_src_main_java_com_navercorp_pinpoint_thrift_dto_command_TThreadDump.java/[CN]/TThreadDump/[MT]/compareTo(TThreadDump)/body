{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetThreadName()).compareTo(other.isSetThreadName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetThreadName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.threadName,other.threadName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetThreadId()).compareTo(other.isSetThreadId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetThreadId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.threadId,other.threadId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetBlockedTime()).compareTo(other.isSetBlockedTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetBlockedTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.blockedTime,other.blockedTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetBlockedCount()).compareTo(other.isSetBlockedCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetBlockedCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.blockedCount,other.blockedCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetWaitedTime()).compareTo(other.isSetWaitedTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetWaitedTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.waitedTime,other.waitedTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetWaitedCount()).compareTo(other.isSetWaitedCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetWaitedCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.waitedCount,other.waitedCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLockName()).compareTo(other.isSetLockName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLockName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.lockName,other.lockName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLockOwnerId()).compareTo(other.isSetLockOwnerId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLockOwnerId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.lockOwnerId,other.lockOwnerId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLockOwnerName()).compareTo(other.isSetLockOwnerName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLockOwnerName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.lockOwnerName,other.lockOwnerName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetInNative()).compareTo(other.isSetInNative());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetInNative()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.inNative,other.inNative);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSuspended()).compareTo(other.isSetSuspended());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSuspended()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.suspended,other.suspended);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetThreadState()).compareTo(other.isSetThreadState());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetThreadState()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.threadState,other.threadState);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetStackTrace()).compareTo(other.isSetStackTrace());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStackTrace()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.stackTrace,other.stackTrace);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLockedMonitors()).compareTo(other.isSetLockedMonitors());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLockedMonitors()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.lockedMonitors,other.lockedMonitors);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLockedSynchronizers()).compareTo(other.isSetLockedSynchronizers());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLockedSynchronizers()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.lockedSynchronizers,other.lockedSynchronizers);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
