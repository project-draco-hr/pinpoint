{
  List<Object> list=new ArrayList<Object>();
  boolean present_threadName=true && (isSetThreadName());
  list.add(present_threadName);
  if (present_threadName)   list.add(threadName);
  boolean present_threadId=true;
  list.add(present_threadId);
  if (present_threadId)   list.add(threadId);
  boolean present_blockedTime=true;
  list.add(present_blockedTime);
  if (present_blockedTime)   list.add(blockedTime);
  boolean present_blockedCount=true;
  list.add(present_blockedCount);
  if (present_blockedCount)   list.add(blockedCount);
  boolean present_waitedTime=true;
  list.add(present_waitedTime);
  if (present_waitedTime)   list.add(waitedTime);
  boolean present_waitedCount=true;
  list.add(present_waitedCount);
  if (present_waitedCount)   list.add(waitedCount);
  boolean present_lockName=true && (isSetLockName());
  list.add(present_lockName);
  if (present_lockName)   list.add(lockName);
  boolean present_lockOwnerId=true;
  list.add(present_lockOwnerId);
  if (present_lockOwnerId)   list.add(lockOwnerId);
  boolean present_lockOwnerName=true && (isSetLockOwnerName());
  list.add(present_lockOwnerName);
  if (present_lockOwnerName)   list.add(lockOwnerName);
  boolean present_inNative=true;
  list.add(present_inNative);
  if (present_inNative)   list.add(inNative);
  boolean present_suspended=true;
  list.add(present_suspended);
  if (present_suspended)   list.add(suspended);
  boolean present_threadState=true && (isSetThreadState());
  list.add(present_threadState);
  if (present_threadState)   list.add(threadState.getValue());
  boolean present_stackTrace=true && (isSetStackTrace());
  list.add(present_stackTrace);
  if (present_stackTrace)   list.add(stackTrace);
  boolean present_lockedMonitors=true && (isSetLockedMonitors());
  list.add(present_lockedMonitors);
  if (present_lockedMonitors)   list.add(lockedMonitors);
  boolean present_lockedSynchronizers=true && (isSetLockedSynchronizers());
  list.add(present_lockedSynchronizers);
  if (present_lockedSynchronizers)   list.add(lockedSynchronizers);
  return list.hashCode();
}
