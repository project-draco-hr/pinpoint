{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(15);
  if (incoming.get(0)) {
    struct.threadName=iprot.readString();
    struct.setThreadNameIsSet(true);
  }
  if (incoming.get(1)) {
    struct.threadId=iprot.readI64();
    struct.setThreadIdIsSet(true);
  }
  if (incoming.get(2)) {
    struct.blockedTime=iprot.readI64();
    struct.setBlockedTimeIsSet(true);
  }
  if (incoming.get(3)) {
    struct.blockedCount=iprot.readI64();
    struct.setBlockedCountIsSet(true);
  }
  if (incoming.get(4)) {
    struct.waitedTime=iprot.readI64();
    struct.setWaitedTimeIsSet(true);
  }
  if (incoming.get(5)) {
    struct.waitedCount=iprot.readI64();
    struct.setWaitedCountIsSet(true);
  }
  if (incoming.get(6)) {
    struct.lockName=iprot.readString();
    struct.setLockNameIsSet(true);
  }
  if (incoming.get(7)) {
    struct.lockOwnerId=iprot.readI64();
    struct.setLockOwnerIdIsSet(true);
  }
  if (incoming.get(8)) {
    struct.lockOwnerName=iprot.readString();
    struct.setLockOwnerNameIsSet(true);
  }
  if (incoming.get(9)) {
    struct.inNative=iprot.readBool();
    struct.setInNativeIsSet(true);
  }
  if (incoming.get(10)) {
    struct.suspended=iprot.readBool();
    struct.setSuspendedIsSet(true);
  }
  if (incoming.get(11)) {
    struct.threadState=com.navercorp.pinpoint.thrift.dto.command.TThreadState.findByValue(iprot.readI32());
    struct.setThreadStateIsSet(true);
  }
  if (incoming.get(12)) {
{
      org.apache.thrift.protocol.TList _list15=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.stackTrace=new ArrayList<String>(_list15.size);
      String _elem16;
      for (int _i17=0; _i17 < _list15.size; ++_i17) {
        _elem16=iprot.readString();
        struct.stackTrace.add(_elem16);
      }
    }
    struct.setStackTraceIsSet(true);
  }
  if (incoming.get(13)) {
{
      org.apache.thrift.protocol.TList _list18=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.lockedMonitors=new ArrayList<TMonitorInfo>(_list18.size);
      TMonitorInfo _elem19;
      for (int _i20=0; _i20 < _list18.size; ++_i20) {
        _elem19=new TMonitorInfo();
        _elem19.read(iprot);
        struct.lockedMonitors.add(_elem19);
      }
    }
    struct.setLockedMonitorsIsSet(true);
  }
  if (incoming.get(14)) {
{
      org.apache.thrift.protocol.TList _list21=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.lockedSynchronizers=new ArrayList<String>(_list21.size);
      String _elem22;
      for (int _i23=0; _i23 < _list21.size; ++_i23) {
        _elem22=iprot.readString();
        struct.lockedSynchronizers.add(_elem22);
      }
    }
    struct.setLockedSynchronizersIsSet(true);
  }
}
