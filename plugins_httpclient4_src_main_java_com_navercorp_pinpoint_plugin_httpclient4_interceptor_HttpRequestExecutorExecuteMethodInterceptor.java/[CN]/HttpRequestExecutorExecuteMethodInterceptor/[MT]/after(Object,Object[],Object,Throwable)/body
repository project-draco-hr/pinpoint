{
  if (isDebug) {
    logger.afterInterceptor(target,args);
  }
  final Trace trace=traceContext.currentTraceObject();
  if (trace == null) {
    return;
  }
  try {
    final SpanEventRecorder recorder=trace.currentSpanEventRecorder();
    final HttpRequest httpRequest=getHttpRequest(args);
    if (httpRequest != null) {
      recorder.recordAttribute(AnnotationKey.HTTP_URL,httpRequest.getRequestLine().getUri());
      final NameIntValuePair<String> host=getHost();
      if (host != null) {
        final String endpoint=getEndpoint(host.getName(),host.getValue());
        recorder.recordDestinationId(endpoint);
      }
      recordHttpRequest(trace,httpRequest,throwable);
    }
    if (statusCode) {
      final Integer statusCodeValue=getStatusCode(result);
      if (statusCodeValue != null) {
        recorder.recordAttribute(AnnotationKey.HTTP_STATUS_CODE,statusCodeValue);
      }
    }
    recorder.recordApi(methodDescriptor);
    recorder.recordException(throwable);
    InterceptorGroupInvocation invocation=interceptorGroup.getCurrentInvocation();
    if (invocation != null && invocation.getAttachment() != null) {
      final HttpCallContext callContext=(HttpCallContext)invocation.getAttachment();
      logger.debug("Check call context {}",callContext);
      if (io) {
        final StringBuilder sb=new StringBuilder();
        sb.append("write=").append(callContext.getWriteElapsedTime());
        if (callContext.isWriteFail()) {
          sb.append("(fail)");
        }
        sb.append(", read=").append(callContext.getReadElapsedTime());
        if (callContext.isReadFail()) {
          sb.append("(fail)");
        }
        recorder.recordAttribute(AnnotationKey.HTTP_IO,sb.toString());
      }
      invocation.removeAttachment();
    }
  }
  finally {
    trace.traceBlockEnd();
  }
}
