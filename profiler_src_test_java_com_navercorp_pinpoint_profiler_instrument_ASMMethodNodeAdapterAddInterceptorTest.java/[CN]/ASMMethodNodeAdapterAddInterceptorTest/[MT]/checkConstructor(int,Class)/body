{
  Class clazz=addInterceptor(interceptorId,"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorClass",interceptorClass);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[0],new Object[0],null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{byte.class},new Object[]{Byte.parseByte("0")},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{short.class},new Object[]{Short.parseShort("0")},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{int.class},new Object[]{Integer.parseInt("0")},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{float.class},new Object[]{Float.parseFloat("0")},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{double.class},new Object[]{Double.parseDouble("0")},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean("true")},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{char.class},new Object[]{Character.forDigit(0,0)},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{byte[].class},new Object[]{new byte[]{Byte.parseByte("0"),Byte.parseByte("1")}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{short[].class},new Object[]{new short[]{Short.parseShort("0"),Short.parseShort("1")}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{int[].class},new Object[]{new int[]{Integer.parseInt("0"),Integer.parseInt("1")}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{float[].class},new Object[]{new float[]{Float.parseFloat("0"),Float.parseFloat("1")}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{double[].class},new Object[]{new double[]{Double.parseDouble("0"),Double.parseDouble("1")}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean("true"),Boolean.parseBoolean("false")}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{char[].class},new Object[]{new char[]{Character.forDigit(0,0),Character.forDigit(1,1)}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{byte[][].class},new Object[]{new byte[][]{{Byte.parseByte("0"),Byte.parseByte("1")}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{short[][].class},new Object[]{new short[][]{{Short.parseShort("0"),Short.parseShort("1")}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{int[][].class},new Object[]{new int[][]{{Integer.parseInt("0"),Integer.parseInt("1")}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{float[][].class},new Object[]{new float[][]{{Float.parseFloat("0"),Float.parseFloat("1")}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{double[][].class},new Object[]{new double[][]{{Double.parseDouble("0"),Double.parseDouble("1")}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean("true"),Boolean.parseBoolean("false")}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{char[][].class},new Object[]{new char[][]{{Character.forDigit(0,0),Character.forDigit(1,1)}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{String.class},new Object[]{"foo"},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Object.class},new Object[]{new Object()},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Byte.class},new Object[]{new Byte("0")},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Short.class},new Object[]{new Short("0")},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Integer.class},new Object[]{new Integer(0)},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Long.class},new Object[]{new Long(0)},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Float.class},new Object[]{new Float(0)},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Double.class},new Object[]{new Double(0)},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean("true")},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Character.class},new Object[]{new Character('0')},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{String[].class},new Object[]{new String[]{"foo","bar"}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Object[].class},new Object[]{new Object[]{new Object(),new Object()}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Byte[].class},new Object[]{new Byte[]{new Byte("0"),new Byte("1")}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Short[].class},new Object[]{new Short[]{new Short("0"),new Short("1")}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Integer[].class},new Object[]{new Integer[]{new Integer(0),new Integer(1)}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Long[].class},new Object[]{new Long[]{new Long(0),new Long(1)}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Float[].class},new Object[]{new Float[]{new Float(0),new Float(1)}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Double[].class},new Object[]{new Double[]{new Double(0),new Double(1)}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean("true"),new Boolean("false")}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Character[].class},new Object[]{new Character[]{new Character('0'),new Character('1')}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{String[][].class},new Object[]{new String[][]{{"foo","bar"}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Object[][].class},new Object[]{new Object[][]{{new Object(),new Object()}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Byte[][].class},new Object[]{new Byte[][]{{new Byte("0"),new Byte("1")}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Short[][].class},new Object[]{new Short[][]{{new Short("0"),new Short("1")}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Integer[][].class},new Object[]{new Integer[][]{{new Integer(0),new Integer(1)}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Long[][].class},new Object[]{new Long[][]{{new Long(0),new Long(1)}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Float[][].class},new Object[]{new Float[][]{{new Float(0),new Float(1)}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Double[][].class},new Object[]{new Double[][]{{new Double(0),new Double(1)}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean("true"),new Boolean("false")}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Character[][].class},new Object[]{new Character[][]{{new Character('0'),new Character('1')}}},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{Class.class,Method.class,Field.class},new Object[]{null,null,null},null,false);
  invokeMethod(clazz,"<init>",interceptorClass,new Class[]{String.class,int.class,byte.class,Object.class,Enum.class,char.class,float.class,long.class},new Object[]{"foo",1,Byte.parseByte("0"),new Object(),BaseEnum.AGENT,'a',1.1f,1l},null,false);
}
