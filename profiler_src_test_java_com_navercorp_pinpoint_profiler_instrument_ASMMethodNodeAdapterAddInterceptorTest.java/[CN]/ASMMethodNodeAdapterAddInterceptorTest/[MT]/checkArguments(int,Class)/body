{
  Class clazz=addInterceptor(interceptorId,"com.navercorp.pinpoint.profiler.instrument.mock.ArgsClass",interceptorClass);
  invokeMethod(clazz,"arg",interceptorClass,new Class[0],new Object[0],null,false);
  invokeMethod(clazz,"argByteType",interceptorClass,new Class[]{byte.class},new Object[]{Byte.parseByte("0")},null,false);
  invokeMethod(clazz,"argShortType",interceptorClass,new Class[]{short.class},new Object[]{Short.parseShort("0")},null,false);
  invokeMethod(clazz,"argIntType",interceptorClass,new Class[]{int.class},new Object[]{Integer.parseInt("0")},null,false);
  invokeMethod(clazz,"argFloatType",interceptorClass,new Class[]{float.class},new Object[]{Float.parseFloat("0")},null,false);
  invokeMethod(clazz,"argDoubleType",interceptorClass,new Class[]{double.class},new Object[]{Double.parseDouble("0")},null,false);
  invokeMethod(clazz,"argBooleanType",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean("true")},null,false);
  invokeMethod(clazz,"argCharType",interceptorClass,new Class[]{char.class},new Object[]{Character.forDigit(0,0)},null,false);
  invokeMethod(clazz,"argByteArrayType",interceptorClass,new Class[]{byte[].class},new Object[]{new byte[]{Byte.parseByte("0"),Byte.parseByte("1")}},null,false);
  invokeMethod(clazz,"argShortArrayType",interceptorClass,new Class[]{short[].class},new Object[]{new short[]{Short.parseShort("0"),Short.parseShort("1")}},null,false);
  invokeMethod(clazz,"argIntArrayType",interceptorClass,new Class[]{int[].class},new Object[]{new int[]{Integer.parseInt("0"),Integer.parseInt("1")}},null,false);
  invokeMethod(clazz,"argFloatArrayType",interceptorClass,new Class[]{float[].class},new Object[]{new float[]{Float.parseFloat("0"),Float.parseFloat("1")}},null,false);
  invokeMethod(clazz,"argDoubleArrayType",interceptorClass,new Class[]{double[].class},new Object[]{new double[]{Double.parseDouble("0"),Double.parseDouble("1")}},null,false);
  invokeMethod(clazz,"argBooleanArrayType",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean("true"),Boolean.parseBoolean("false")}},null,false);
  invokeMethod(clazz,"argCharArrayType",interceptorClass,new Class[]{char[].class},new Object[]{new char[]{Character.forDigit(0,0),Character.forDigit(1,1)}},null,false);
  invokeMethod(clazz,"argByteArraysType",interceptorClass,new Class[]{byte[][].class},new Object[]{new byte[][]{{Byte.parseByte("0"),Byte.parseByte("1")}}},null,false);
  invokeMethod(clazz,"argShortArraysType",interceptorClass,new Class[]{short[][].class},new Object[]{new short[][]{{Short.parseShort("0"),Short.parseShort("1")}}},null,false);
  invokeMethod(clazz,"argIntArraysType",interceptorClass,new Class[]{int[][].class},new Object[]{new int[][]{{Integer.parseInt("0"),Integer.parseInt("1")}}},null,false);
  invokeMethod(clazz,"argFloatArraysType",interceptorClass,new Class[]{float[][].class},new Object[]{new float[][]{{Float.parseFloat("0"),Float.parseFloat("1")}}},null,false);
  invokeMethod(clazz,"argDoubleArraysType",interceptorClass,new Class[]{double[][].class},new Object[]{new double[][]{{Double.parseDouble("0"),Double.parseDouble("1")}}},null,false);
  invokeMethod(clazz,"argBooleanArraysType",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean("true"),Boolean.parseBoolean("false")}}},null,false);
  invokeMethod(clazz,"argCharArraysType",interceptorClass,new Class[]{char[][].class},new Object[]{new char[][]{{Character.forDigit(0,0),Character.forDigit(1,1)}}},null,false);
  invokeMethod(clazz,"argArgs",interceptorClass,new Class[]{Object[].class},new Object[]{new Object[]{"0","1","2","3","4","5","6","7","8","9"}},null,false);
  invokeMethod(clazz,"argArgs2",interceptorClass,new Class[]{int.class,Object[].class},new Object[]{1,new Object[]{"0","1","2","3","4","5","6","7","8","9"}},null,false);
  invokeMethod(clazz,"argInt3",interceptorClass,new Class[]{int.class,int.class,int.class},new Object[]{1,2,3},null,false);
  invokeMethod(clazz,"argObject4",interceptorClass,new Class[]{String.class,Integer.class,Long.class,Float.class},new Object[]{"foo",1,2l,3.0f},null,false);
  invokeMethod(clazz,"argString5",interceptorClass,new Class[]{String.class,String.class,String.class,String.class,String.class},new Object[]{"0","1","2","3","4"},null,false);
  invokeMethod(clazz,"argEnum",interceptorClass,new Class[]{Enum.class},new Object[]{BaseEnum.AGENT},null,false);
  invokeMethod(clazz,"argInterface",interceptorClass,new Class[]{Map.class,Map.class,Map.class},new Object[]{new HashMap(),new HashMap<String,String>(),new HashMap<Object,Object>()},null,false);
}
