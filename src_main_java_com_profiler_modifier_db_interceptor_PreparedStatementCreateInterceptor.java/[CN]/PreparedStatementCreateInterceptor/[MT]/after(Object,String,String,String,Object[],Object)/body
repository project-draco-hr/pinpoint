{
  if (isDebug) {
    LoggingUtils.logAfter(logger,target,className,methodName,parameterDescription,args,result);
  }
  if (JDBCScope.isInternal()) {
    logger.fine("internal jdbc scope. skip trace");
    return;
  }
  if (!InterceptorUtils.isSuccess(result)) {
    return;
  }
  TraceContext traceContext=DefaultTraceContext.getTraceContext();
  Trace trace=traceContext.currentTraceObject();
  if (trace == null) {
    return;
  }
  if (target instanceof Connection) {
    DatabaseInfo databaseInfo=(DatabaseInfo)getUrl.invoke(target);
    this.setUrl.invoke(result,databaseInfo);
    String sql=(String)args[0];
    ParsingResult parsingResult=trace.recordSqlInfo(sql);
    if (parsingResult != null) {
      this.setSql.invoke(result,parsingResult);
    }
    trace.recordException(result);
  }
  trace.recordApi(descriptor);
  trace.markAfterTime();
  trace.traceBlockEnd();
}
