{
  logger.info("ReactiveTimerTask started.");
  Set<String> reactiveWorkerCandidates=new HashSet<>(reactiveWorkerRepository.size());
synchronized (lock) {
    reactiveWorkerCandidates.addAll(reactiveWorkerRepository);
    reactiveWorkerRepository.clear();
    boolean turnOff=onReconnectTimerTask.compareAndSet(true,false);
  }
  for (  String agentId : reactiveWorkerCandidates) {
    try {
      AgentInfo newAgentInfo=agentService.getAgentInfo(applicationName,agentId);
      if (newAgentInfo != null) {
        responseAggregator.addActiveWorker(newAgentInfo);
      }
    }
 catch (    Exception e) {
      logger.warn("failed while to get AgentInfo(applicationName:{}, agentId:{}). error:{}.",applicationName,agentId,e.getMessage(),e);
    }
  }
}
