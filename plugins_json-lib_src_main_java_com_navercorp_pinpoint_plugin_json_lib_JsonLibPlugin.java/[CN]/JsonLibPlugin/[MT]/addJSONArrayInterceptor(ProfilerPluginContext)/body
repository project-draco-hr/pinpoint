{
  ClassFileTransformerBuilder builder=context.getClassFileTransformerBuilder("net.sf.json.JSONArray");
  builder.editMethod("fromObject","java.lang.Object").injectInterceptor("com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor").group(GROUP);
  builder.editMethod("toArray","net.sf.json.JSONArray").injectInterceptor("com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor").group(GROUP);
  builder.editMethod("toString").injectInterceptor("com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor").group(GROUP);
  MethodTransformerBuilder toCollection=builder.editMethod("toCollection","net.sf.json.JSONArray");
  toCollection.injectInterceptor("com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor").group(GROUP);
  toCollection.property(MethodTransformerProperty.IGNORE_IF_NOT_EXIST);
  builder.editMethod("toList","net.sf.json.JSONArray").injectInterceptor("com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor").group(GROUP);
  ClassFileTransformer transformer=builder.build();
  context.addClassFileTransformer(transformer);
}
