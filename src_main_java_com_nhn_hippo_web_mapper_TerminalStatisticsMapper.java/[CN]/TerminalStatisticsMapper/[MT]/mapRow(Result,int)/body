{
  KeyValue[] keyList=result.raw();
  Map<String,TerminalStatistics> stat=new HashMap<String,TerminalStatistics>();
  Map<String,Set<String>> destAppHostMap=new HashMap<String,Set<String>>();
  for (  KeyValue kv : keyList) {
    if (kv.getFamilyLength() != HBaseTables.TERMINAL_STATISTICS_CF_COUNTER.length) {
      continue;
    }
    byte[] qualifier=kv.getQualifier();
    String srcApplicationName=TerminalSpanUtils.getApplicationNameFromRowKey(kv.getRow());
    String destApplicationName=TerminalSpanUtils.getDestApplicationNameFromColumnName(qualifier);
    long requestCount=Bytes.toLong(kv.getValue());
    short destServiceType=TerminalSpanUtils.getDestServiceTypeFromColumnName(qualifier);
    short histogramSlot=TerminalSpanUtils.getHistogramSlotFromColumnName(qualifier);
    String host=TerminalSpanUtils.getHost(qualifier);
    boolean isError=histogramSlot == (short)-1;
    if (host != null) {
      if (destAppHostMap.containsKey(destApplicationName)) {
        destAppHostMap.get(destApplicationName).add(host);
      }
 else {
        Set<String> set=new HashSet<String>();
        set.add(host);
        destAppHostMap.put(destApplicationName,set);
      }
    }
    if (stat.containsKey(destApplicationName)) {
      TerminalStatistics statistics=stat.get(destApplicationName);
      if (isError) {
        statistics.getHistogram().incrErrorCount(requestCount);
      }
 else {
        statistics.getHistogram().addSample(histogramSlot,requestCount);
      }
    }
 else {
      TerminalStatistics statistics=new TerminalStatistics(srcApplicationName,destApplicationName,destServiceType);
      if (isError) {
        statistics.getHistogram().incrErrorCount(requestCount);
      }
 else {
        statistics.getHistogram().addSample(histogramSlot,requestCount);
      }
      stat.put(destApplicationName,statistics);
    }
  }
  for (  Entry<String,TerminalStatistics> entry : stat.entrySet()) {
    entry.getValue().addHosts(destAppHostMap.get(entry.getKey()));
  }
  return stat;
}
