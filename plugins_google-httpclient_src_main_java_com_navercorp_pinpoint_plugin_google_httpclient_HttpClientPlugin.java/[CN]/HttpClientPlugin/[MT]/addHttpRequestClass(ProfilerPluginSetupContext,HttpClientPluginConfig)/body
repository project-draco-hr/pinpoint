{
  context.addClassFileTransformer("com.google.api.client.http.HttpRequest",new PinpointClassFileTransformer(){
    @Override public byte[] transform(    ProfilerPluginInstrumentContext instrumentContext,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      InstrumentClass target=instrumentContext.getInstrumentClass(loader,className,classfileBuffer);
      InstrumentMethod execute=target.getDeclaredMethod("execute",new String[]{});
      if (execute != null) {
        execute.addInterceptor("com.navercorp.pinpoint.plugin.google.httpclient.interceptor.HttpRequestExecuteMethodInterceptor");
      }
      if (config.isAsync()) {
        InstrumentMethod executeAsync=target.getDeclaredMethod("executeAsync","java.util.concurrent.Executor");
        if (executeAsync != null) {
          executeAsync.addInterceptor("com.navercorp.pinpoint.plugin.google.httpclient.interceptor.HttpRequestExecuteAsyncMethodInterceptor");
        }
      }
      return target.toBytecode();
    }
  }
);
}
