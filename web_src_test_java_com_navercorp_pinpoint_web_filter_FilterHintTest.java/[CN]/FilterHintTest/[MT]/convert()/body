{
  StringBuilder json=new StringBuilder();
  json.append("{ \"TO_APPLICATION\" : [\"IP1\", 1,\"IP2\", 2], \"TO_APPLICATION2\" : [\"IP3\", 3,\"IP4\", 4] }");
  try {
    FilterHint hint=om.readValue(json.toString(),new TypeReference<FilterHint>(){
    }
);
    Assert.assertNotNull(hint);
    Assert.assertEquals(2,hint.size());
    Assert.assertTrue(hint.containApplicationHint("TO_APPLICATION"));
    Assert.assertTrue(hint.containApplicationHint("TO_APPLICATION2"));
    Assert.assertFalse(hint.containApplicationHint("TO_APPLICATION3"));
    Assert.assertTrue(hint.containApplicationEndpoint("TO_APPLICATION","IP1",1));
    Assert.assertTrue(hint.containApplicationEndpoint("TO_APPLICATION","IP2",2));
    Assert.assertTrue(hint.containApplicationEndpoint("TO_APPLICATION2","IP3",3));
    Assert.assertTrue(hint.containApplicationEndpoint("TO_APPLICATION2","IP4",4));
  }
 catch (  Exception e) {
    e.printStackTrace();
    Assert.fail(e.getMessage());
  }
}
