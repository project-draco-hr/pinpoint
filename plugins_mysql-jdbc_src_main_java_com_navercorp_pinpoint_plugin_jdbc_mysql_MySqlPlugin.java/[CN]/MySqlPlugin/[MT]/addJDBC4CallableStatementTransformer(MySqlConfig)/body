{
  transformTemplate.transform("com.mysql.jdbc.JDBC4CallableStatement",new TransformCallback(){
    @Override public byte[] doInTransform(    Instrumentor instrumentor,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      InstrumentClass target=instrumentor.getInstrumentClass(loader,className,classfileBuffer);
      if (config.isTraceSqlBindValue()) {
        final PreparedStatementBindingMethodFilter includes=PreparedStatementBindingMethodFilter.includes("setRowId","setNClob","setSQLXML");
        target.addScopedInterceptor(includes,"com.navercorp.pinpoint.bootstrap.plugin.jdbc.interceptor.CallableStatementBindVariableInterceptor",MySqlConstants.MYSQL_SCOPE,ExecutionPolicy.BOUNDARY);
      }
      return target.toBytecode();
    }
  }
);
}
