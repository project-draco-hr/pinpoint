{
  PinpointClassFileTransformer transformer=new PinpointClassFileTransformer(){
    @Override public byte[] transform(    Instrumentor instrumentContext,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      InstrumentClass target=instrumentContext.getInstrumentClass(loader,className,classfileBuffer);
      if (!target.isInterceptable()) {
        return null;
      }
      target.addField("com.navercorp.pinpoint.bootstrap.plugin.jdbc.DatabaseInfoAccessor");
      target.addGroupedInterceptor("com.navercorp.pinpoint.bootstrap.plugin.jdbc.interceptor.StatementExecuteQueryInterceptor",MySqlConstants.GROUP_NAME);
      target.addGroupedInterceptor("com.navercorp.pinpoint.bootstrap.plugin.jdbc.interceptor.StatementExecuteUpdateInterceptor",MySqlConstants.GROUP_NAME);
      return target.toBytecode();
    }
  }
;
  setupContext.addClassFileTransformer("com.mysql.jdbc.Statement",transformer);
  setupContext.addClassFileTransformer("com.mysql.jdbc.StatementImpl",transformer);
}
