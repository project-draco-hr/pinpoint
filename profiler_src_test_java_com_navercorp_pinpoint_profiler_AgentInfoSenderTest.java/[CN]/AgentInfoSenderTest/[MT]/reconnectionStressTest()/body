{
  final AtomicInteger requestCount=new AtomicInteger();
  final AtomicInteger successCount=new AtomicInteger();
  final long stressTestTime=60 * 1000L;
  final int randomMaxTime=3000;
  final long agentInfoSendRetryIntervalMs=1000L;
  final int maxTryPerAttempt=Integer.MAX_VALUE;
  final int expectedTriesUntilSuccess=(int)stressTestTime / (randomMaxTime * 2);
  ResponseServerMessageListener serverListener=new ResponseServerMessageListener(requestCount,successCount,expectedTriesUntilSuccess);
  PinpointClientFactory clientFactory=createPinpointClientFactory();
  PinpointClient pinpointClient=ClientFactoryUtils.createPinpointClient(HOST,PORT,clientFactory);
  TcpDataSender dataSender=new TcpDataSender(pinpointClient);
  AgentInfoSender agentInfoSender=new AgentInfoSender.Builder(dataSender,getAgentInfo()).sendInterval(agentInfoSendRetryIntervalMs).maxTryPerAttempt(maxTryPerAttempt).build();
  long startTime=System.currentTimeMillis();
  try {
    agentInfoSender.start();
    Random random=new Random(System.currentTimeMillis());
    while (System.currentTimeMillis() < startTime + stressTestTime) {
      createAndDeleteServer(serverListener,Math.abs(random.nextInt(randomMaxTime)));
      Thread.sleep(Math.abs(random.nextInt(1000)));
    }
  }
  finally {
    closeAll(null,agentInfoSender,pinpointClient,clientFactory);
  }
  assertEquals(1,successCount.get());
  assertEquals(expectedTriesUntilSuccess,requestCount.get());
}
