{
  final AtomicInteger requestCount=new AtomicInteger();
  final AtomicInteger successCount=new AtomicInteger();
  final long agentInfoSendRetryIntervalMs=1000L;
  ResponseServerMessageListener serverListener=new ResponseServerMessageListener(requestCount,successCount);
  PinpointServerAcceptor serverAcceptor=createServerAcceptor(serverListener);
  PinpointSocketFactory socketFactory=createPinpointSocketFactory();
  PinpointSocket socket=createPinpointSocket(HOST,PORT,socketFactory);
  TcpDataSender sender=new TcpDataSender(socket);
  AgentInfoSender agentInfoSender=new AgentInfoSender(sender,agentInfoSendRetryIntervalMs,getAgentInfo());
  final List<ServerMetaData> serverMetaDataObjects=new ArrayList<ServerMetaData>();
  serverMetaDataObjects.add(new DefaultServerMetaData("server1",Collections.<String>emptyList(),Collections.<Integer,String>emptyMap(),Collections.<ServiceInfo>emptyList()));
  serverMetaDataObjects.add(new DefaultServerMetaData("server2",Collections.<String>emptyList(),Collections.<Integer,String>emptyMap(),Collections.<ServiceInfo>emptyList()));
  serverMetaDataObjects.add(new DefaultServerMetaData("server3",Collections.<String>emptyList(),Collections.<Integer,String>emptyMap(),Collections.<ServiceInfo>emptyList()));
  serverMetaDataObjects.add(new DefaultServerMetaData("server4",Collections.<String>emptyList(),Collections.<Integer,String>emptyMap(),Collections.<ServiceInfo>emptyList()));
  serverMetaDataObjects.add(new DefaultServerMetaData("server5",Collections.<String>emptyList(),Collections.<Integer,String>emptyMap(),Collections.<ServiceInfo>emptyList()));
  try {
    for (    ServerMetaData serverMetaData : serverMetaDataObjects) {
      agentInfoSender.publishServerMetaData(serverMetaData);
    }
    Thread.sleep(10000L);
  }
  finally {
    closeAll(serverAcceptor,agentInfoSender,socket,socketFactory);
  }
  assertEquals(5,requestCount.get());
  assertEquals(5,successCount.get());
}
