{
  final AtomicInteger requestCount=new AtomicInteger();
  final AtomicInteger successCount=new AtomicInteger();
  final long agentInfoSendRetryIntervalMs=1000L;
  ResponseServerMessageListener serverListener=new ResponseServerMessageListener(requestCount,successCount);
  PinpointServerAcceptor serverAcceptor=createServerAcceptor(serverListener);
  PinpointClientFactory clientFactory=createPinpointClientFactory();
  PinpointClient pinpointClient=ClientFactoryUtils.createPinpointClient(HOST,PORT,clientFactory);
  TcpDataSender dataSender=new TcpDataSender(pinpointClient);
  AgentInfoSender agentInfoSender=new AgentInfoSender.Builder(dataSender,getAgentInfo()).sendInterval(agentInfoSendRetryIntervalMs).build();
  final List<ServerMetaData> serverMetaDataObjects=new ArrayList<ServerMetaData>();
  serverMetaDataObjects.add(new DefaultServerMetaData("server1",Collections.<String>emptyList(),Collections.<Integer,String>emptyMap(),Collections.<ServiceInfo>emptyList()));
  serverMetaDataObjects.add(new DefaultServerMetaData("server2",Collections.<String>emptyList(),Collections.<Integer,String>emptyMap(),Collections.<ServiceInfo>emptyList()));
  serverMetaDataObjects.add(new DefaultServerMetaData("server3",Collections.<String>emptyList(),Collections.<Integer,String>emptyMap(),Collections.<ServiceInfo>emptyList()));
  serverMetaDataObjects.add(new DefaultServerMetaData("server4",Collections.<String>emptyList(),Collections.<Integer,String>emptyMap(),Collections.<ServiceInfo>emptyList()));
  serverMetaDataObjects.add(new DefaultServerMetaData("server5",Collections.<String>emptyList(),Collections.<Integer,String>emptyMap(),Collections.<ServiceInfo>emptyList()));
  try {
    for (    ServerMetaData serverMetaData : serverMetaDataObjects) {
      agentInfoSender.publishServerMetaData(serverMetaData);
    }
    Thread.sleep(10000L);
  }
  finally {
    closeAll(serverAcceptor,agentInfoSender,pinpointClient,clientFactory);
  }
  assertEquals(5,requestCount.get());
  assertEquals(5,successCount.get());
}
