{
  final String sourceAgentId="agentId";
  final long sourceAgentStartTime=1234567890123L;
  final long sourceTransactionSequence=12345678L;
  final String sourceTransactionId=TransactionIdUtils.formatString(sourceAgentId,sourceAgentStartTime,sourceTransactionSequence);
  when(mockRequest.getHeader(Header.HTTP_TRACE_ID.toString())).thenReturn(sourceTransactionId);
  final long sourceParentId=99999;
  when(mockRequest.getHeader(Header.HTTP_PARENT_SPAN_ID.toString())).thenReturn(String.valueOf(sourceParentId));
  host.invoke(mockRequest,mockResponse);
  final List<SpanBo> rootSpans=getCurrentRootSpans();
  assertEquals(rootSpans.size(),1);
  final SpanBo rootSpan=rootSpans.get(0);
  assertEquals(rootSpan.getTransactionId(),sourceTransactionId);
  assertEquals(rootSpan.getTraceAgentId(),sourceAgentId);
  assertEquals(rootSpan.getTraceAgentStartTime(),sourceAgentStartTime);
  assertEquals(rootSpan.getTraceTransactionSequence(),sourceTransactionSequence);
  assertEquals(rootSpan.getParentSpanId(),sourceParentId);
}
