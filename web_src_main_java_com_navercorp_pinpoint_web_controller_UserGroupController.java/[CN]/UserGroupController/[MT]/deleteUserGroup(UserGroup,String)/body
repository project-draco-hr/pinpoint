{
  if (StringUtils.isEmpty(userGroup.getId())) {
    Map<String,String> result=new HashMap<>();
    result.put("errorCode","500");
    result.put("errorMessage","there is id of userGroup in params to delete user group");
    return result;
  }
  if (webProperties.isOpenSource() == false) {
    if (checkValid(userId,userGroup.getId()) == false) {
      Map<String,String> result=new HashMap<>();
      result.put("errorCode","500");
      result.put("errorMessage","There is not userId or you don't have authoriy for user group.");
      return result;
    }
  }
  userGroupService.deleteUserGroup(userGroup);
  userGroupService.deleteMemberByUserGroupId(userGroup.getId());
  alarmService.deleteRuleByUserGroupId(userGroup.getId());
  Map<String,String> result=new HashMap<>();
  result.put("result","SUCCESS");
  return result;
}
