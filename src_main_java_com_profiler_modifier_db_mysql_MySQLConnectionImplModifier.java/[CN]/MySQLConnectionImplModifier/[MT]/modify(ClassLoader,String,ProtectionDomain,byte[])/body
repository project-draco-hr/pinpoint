{
  if (logger.isLoggable(Level.INFO)) {
    logger.info("Modifing. " + javassistClassName);
  }
  checkLibrary(classLoader,javassistClassName);
  try {
    InstrumentClass mysqlConnection=byteCodeInstrumentor.getClass(javassistClassName);
    Interceptor createConnection=newInterceptor(classLoader,protectedDomain,"com.profiler.modifier.db.mysql.interceptors.CreateConnectionInterceptor");
    Interceptor closeConnection=newInterceptor(classLoader,protectedDomain,"com.profiler.modifier.db.mysql.interceptors.CloseConnectionInterceptor");
    Interceptor createStatement=newInterceptor(classLoader,protectedDomain,"com.profiler.modifier.db.mysql.interceptors.CreateStatementInterceptor");
    Interceptor preparedStatement=newInterceptor(classLoader,protectedDomain,"com.profiler.modifier.db.mysql.interceptors.CreatePreparedStatementInterceptor");
    String[] params=new String[]{"java.lang.String","int","java.util.Properties","java.lang.String","java.lang.String"};
    mysqlConnection.addInterceptor("getInstance",params,createConnection);
    mysqlConnection.addInterceptor("close",null,closeConnection);
    mysqlConnection.addInterceptor("createStatement",null,createStatement);
    mysqlConnection.addInterceptor("prepareStatement",new String[]{"java.lang.String"},preparedStatement);
    printClassConvertComplete(javassistClassName);
    return mysqlConnection.toBytecode();
  }
 catch (  InstrumentException e) {
    if (logger.isLoggable(Level.WARNING)) {
      logger.log(Level.WARNING,this.getClass().getSimpleName() + " modify fail. Cause:" + e.getMessage(),e);
    }
    return null;
  }
}
