{
  if (isDebug) {
    logger.afterInterceptor(target,args,result,throwable);
  }
  if (getAsyncTraceId(target) == null) {
    logger.debug("Not found asynchronous invocation metadata");
    return;
  }
  Trace trace=traceContext.currentTraceObject();
  if (trace == null) {
    return;
  }
  if (!leaveAsyncTraceScope(trace)) {
    logger.warn("Failed to leave scope of async trace {}.",trace);
    deleteAsyncTrace(trace);
    return;
  }
  try {
    final SpanEventRecorder recorder=trace.currentSpanEventRecorder();
    doInAfterTrace(recorder,target,args,result,throwable);
  }
 catch (  Throwable th) {
    if (logger.isWarnEnabled()) {
      logger.warn("AFTER error. Caused:{}",th.getMessage(),th);
    }
  }
 finally {
    trace.traceBlockEnd();
    if (isAsyncTraceDestination(trace)) {
      deleteAsyncTrace(trace);
    }
  }
}
