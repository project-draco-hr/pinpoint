{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetAgentId()).compareTo(other.isSetAgentId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAgentId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.agentId,other.agentId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTimestamp()).compareTo(other.isSetTimestamp());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTimestamp()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.timestamp,other.timestamp);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryTotalUsed()).compareTo(other.isSetJvmMemoryTotalUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryTotalUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryTotalUsed,other.jvmMemoryTotalUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryTotalMax()).compareTo(other.isSetJvmMemoryTotalMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryTotalMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryTotalMax,other.jvmMemoryTotalMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryHeapUsed()).compareTo(other.isSetJvmMemoryHeapUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryHeapUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryHeapUsed,other.jvmMemoryHeapUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryHeapMax()).compareTo(other.isSetJvmMemoryHeapMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryHeapMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryHeapMax,other.jvmMemoryHeapMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryNonHeapUsed()).compareTo(other.isSetJvmMemoryNonHeapUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryNonHeapUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryNonHeapUsed,other.jvmMemoryNonHeapUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryNonHeapMax()).compareTo(other.isSetJvmMemoryNonHeapMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryNonHeapMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryNonHeapMax,other.jvmMemoryNonHeapMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsCodeCacheUsage()).compareTo(other.isSetJvmMemoryPoolsCodeCacheUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsCodeCacheUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsCodeCacheUsage,other.jvmMemoryPoolsCodeCacheUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsG1EdenSpaceUsage()).compareTo(other.isSetJvmMemoryPoolsG1EdenSpaceUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsG1EdenSpaceUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsG1EdenSpaceUsage,other.jvmMemoryPoolsG1EdenSpaceUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsG1OldGenUsage()).compareTo(other.isSetJvmMemoryPoolsG1OldGenUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsG1OldGenUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsG1OldGenUsage,other.jvmMemoryPoolsG1OldGenUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsG1PermGenUsage()).compareTo(other.isSetJvmMemoryPoolsG1PermGenUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsG1PermGenUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsG1PermGenUsage,other.jvmMemoryPoolsG1PermGenUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsG1SurvivorSpaceUsage()).compareTo(other.isSetJvmMemoryPoolsG1SurvivorSpaceUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsG1SurvivorSpaceUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsG1SurvivorSpaceUsage,other.jvmMemoryPoolsG1SurvivorSpaceUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcG1OldGenerationCount()).compareTo(other.isSetJvmGcG1OldGenerationCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcG1OldGenerationCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcG1OldGenerationCount,other.jvmGcG1OldGenerationCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcG1OldGenerationTime()).compareTo(other.isSetJvmGcG1OldGenerationTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcG1OldGenerationTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcG1OldGenerationTime,other.jvmGcG1OldGenerationTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcG1YoungGenerationCount()).compareTo(other.isSetJvmGcG1YoungGenerationCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcG1YoungGenerationCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcG1YoungGenerationCount,other.jvmGcG1YoungGenerationCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcG1YoungGenerationTime()).compareTo(other.isSetJvmGcG1YoungGenerationTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcG1YoungGenerationTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcG1YoungGenerationTime,other.jvmGcG1YoungGenerationTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMetadata()).compareTo(other.isSetMetadata());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMetadata()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.metadata,other.metadata);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
