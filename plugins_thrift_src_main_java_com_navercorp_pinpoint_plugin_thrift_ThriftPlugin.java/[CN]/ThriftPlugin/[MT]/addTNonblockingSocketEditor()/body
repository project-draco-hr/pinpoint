{
  final String targetClassName="org.apache.thrift.transport.TNonblockingSocket";
  transformTemplate.transform(targetClassName,new TransformCallback(){
    @Override public byte[] doInTransform(    Instrumentor instrumentor,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      final InstrumentClass target=instrumentor.getInstrumentClass(loader,className,classfileBuffer);
      target.addField(ThriftConstants.FIELD_ACCESSOR_SOCKET);
      target.addField(ThriftConstants.FIELD_ACCESSOR_SOCKET_ADDRESS);
      final InstrumentMethod constructor=target.getConstructor("java.nio.channels.SocketChannel","int","java.net.SocketAddress");
      if (constructor != null) {
        String interceptor="com.navercorp.pinpoint.plugin.thrift.interceptor.transport.TNonblockingSocketConstructInterceptor";
        constructor.addInterceptor(interceptor);
      }
      return target.toBytecode();
    }
  }
);
}
