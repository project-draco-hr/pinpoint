{
  final String targetClassName=tTransportClassName;
  transformTemplate.transform(targetClassName,new TransformCallback(){
    @Override public byte[] doInTransform(    Instrumentor instrumentor,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      final InstrumentClass target=instrumentor.getInstrumentClass(loader,className,classfileBuffer);
      target.addField(ThriftConstants.FIELD_ACCESSOR_SOCKET);
      for (      String[] parameterTypeGroup : parameterTypeGroups) {
        final InstrumentMethod constructor=target.getConstructor(parameterTypeGroup);
        if (constructor != null) {
          constructor.addInterceptor(tTransportInterceptorFqcn);
        }
      }
      return target.toBytecode();
    }
  }
);
}
