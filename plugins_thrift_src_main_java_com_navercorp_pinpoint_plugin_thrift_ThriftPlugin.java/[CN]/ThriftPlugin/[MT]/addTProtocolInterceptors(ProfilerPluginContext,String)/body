{
  ThriftPluginConfig config=(ThriftPluginConfig)context.getAttribute(ATTRIBUTE_CONFIG);
  final ClassFileTransformerBuilder classTransformerBuilder=context.getClassFileTransformerBuilder(tProtocolClassName);
  if (config.traceThriftClient()) {
    final MethodTransformerBuilder writeFieldStopMethodTransformerBuilder=classTransformerBuilder.editMethod("writeFieldStop");
    writeFieldStopMethodTransformerBuilder.property(MethodTransformerProperty.IGNORE_IF_NOT_EXIST);
    writeFieldStopMethodTransformerBuilder.injectInterceptor("com.navercorp.pinpoint.plugin.thrift.interceptor.tprotocol.client.TProtocolWriteFieldStopInterceptor");
  }
  if (config.traceThriftProcessor()) {
    classTransformerBuilder.injectMetadata(METADATA_SERVER_MARKER);
    final MethodTransformerBuilder readFieldBeginMethodTransformerBuilder=classTransformerBuilder.editMethod("readFieldBegin");
    readFieldBeginMethodTransformerBuilder.property(MethodTransformerProperty.IGNORE_IF_NOT_EXIST);
    readFieldBeginMethodTransformerBuilder.injectInterceptor("com.navercorp.pinpoint.plugin.thrift.interceptor.tprotocol.server.TProtocolReadFieldBeginInterceptor");
    final Set<String> targetMethodNames=new HashSet<String>(Arrays.asList("readBool","readBinary","readI16","readI64"));
    final MethodTransformerBuilder readTTypeMethodTransformerBuilder=classTransformerBuilder.editMethods(new MethodFilter(){
      @Override public boolean filter(      MethodInfo method){
        return !targetMethodNames.contains(method.getName());
      }
    }
);
    readTTypeMethodTransformerBuilder.property(MethodTransformerProperty.IGNORE_IF_NOT_EXIST);
    readTTypeMethodTransformerBuilder.injectInterceptor("com.navercorp.pinpoint.plugin.thrift.interceptor.tprotocol.server.TProtocolReadTTypeInterceptor");
    final MethodTransformerBuilder readMessageEndMethodTransformerBuilder=classTransformerBuilder.editMethod("readMessageEnd");
    readMessageEndMethodTransformerBuilder.property(MethodTransformerProperty.IGNORE_IF_NOT_EXIST);
    readMessageEndMethodTransformerBuilder.injectInterceptor("com.navercorp.pinpoint.plugin.thrift.interceptor.tprotocol.server.TProtocolReadMessageEndInterceptor");
    classTransformerBuilder.injectMetadata(METADATA_ASYNC_MARKER);
    final MethodTransformerBuilder readMessageBeginMethodTransformerBuilder=classTransformerBuilder.editMethod("readMessageBegin");
    readMessageBeginMethodTransformerBuilder.property(MethodTransformerProperty.IGNORE_IF_NOT_EXIST);
    readMessageBeginMethodTransformerBuilder.injectInterceptor("com.navercorp.pinpoint.plugin.thrift.interceptor.tprotocol.server.TProtocolReadMessageBeginInterceptor");
  }
  context.addClassFileTransformer(classTransformerBuilder.build());
}
