{
  final String targetClassName="org.apache.thrift.TBaseAsyncProcessor";
  context.addClassFileTransformer(targetClassName,new TransformCallback(){
    @Override public byte[] doInTransform(    Instrumentor instrumentContext,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      final InstrumentClass target=instrumentContext.getInstrumentClass(loader,className,classfileBuffer);
      target.addField(ServerMarkerFlagFieldAccessor.class.getName());
      target.addField(AsyncMarkerFlagFieldAccessor.class.getName());
      final InstrumentMethod process=target.getDeclaredMethod("process","org.apache.thrift.server.AbstractNonblockingServer$AsyncFrameBuffer");
      if (process != null) {
        String interceptor="com.navercorp.pinpoint.plugin.thrift.interceptor.server.async.TBaseAsyncProcessorProcessInterceptor";
        process.addInterceptor(interceptor);
      }
      return target.toBytecode();
    }
  }
);
}
