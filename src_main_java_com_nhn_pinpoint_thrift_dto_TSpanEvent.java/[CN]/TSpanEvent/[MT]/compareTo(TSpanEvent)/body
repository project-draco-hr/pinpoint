{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  TSpanEvent typedOther=(TSpanEvent)other;
  lastComparison=Boolean.valueOf(isSetSpanId()).compareTo(typedOther.isSetSpanId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSpanId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.spanId,typedOther.spanId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSequence()).compareTo(typedOther.isSetSequence());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSequence()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.sequence,typedOther.sequence);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetStartElapsed()).compareTo(typedOther.isSetStartElapsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStartElapsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.startElapsed,typedOther.startElapsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetEndElapsed()).compareTo(typedOther.isSetEndElapsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetEndElapsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.endElapsed,typedOther.endElapsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRpc()).compareTo(typedOther.isSetRpc());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRpc()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.rpc,typedOther.rpc);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetServiceType()).compareTo(typedOther.isSetServiceType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetServiceType()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.serviceType,typedOther.serviceType);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetEndPoint()).compareTo(typedOther.isSetEndPoint());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetEndPoint()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.endPoint,typedOther.endPoint);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAnnotations()).compareTo(typedOther.isSetAnnotations());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAnnotations()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.annotations,typedOther.annotations);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetDepth()).compareTo(typedOther.isSetDepth());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDepth()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.depth,typedOther.depth);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetNextSpanId()).compareTo(typedOther.isSetNextSpanId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetNextSpanId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.nextSpanId,typedOther.nextSpanId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetDestinationId()).compareTo(typedOther.isSetDestinationId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDestinationId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.destinationId,typedOther.destinationId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetApiId()).compareTo(typedOther.isSetApiId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetApiId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.apiId,typedOther.apiId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetExceptionInfo()).compareTo(typedOther.isSetExceptionInfo());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetExceptionInfo()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.exceptionInfo,typedOther.exceptionInfo);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
