{
switch (field) {
case AGENT_KEY:
    return getAgentKey();
case PARENT_SERVICE_TYPE:
  return Short.valueOf(getParentServiceType());
case PARENT_END_POINT:
return getParentEndPoint();
case TRACE_AGENT_ID:
return getTraceAgentId();
case TRACE_AGENT_START_TIME:
return Long.valueOf(getTraceAgentStartTime());
case TRACE_TRANSACTION_SEQUENCE:
return Long.valueOf(getTraceTransactionSequence());
case SPAN_ID:
return Integer.valueOf(getSpanId());
case SEQUENCE:
return Short.valueOf(getSequence());
case START_ELAPSED:
return Integer.valueOf(getStartElapsed());
case END_ELAPSED:
return Integer.valueOf(getEndElapsed());
case RPC:
return getRpc();
case SERVICE_TYPE:
return Short.valueOf(getServiceType());
case END_POINT:
return getEndPoint();
case ANNOTATIONS:
return getAnnotations();
case DEPTH:
return Integer.valueOf(getDepth());
case NEXT_SPAN_ID:
return Integer.valueOf(getNextSpanId());
case DESTINATION_ID:
return getDestinationId();
case API_ID:
return Integer.valueOf(getApiId());
case EXCEPTION_ID:
return Integer.valueOf(getExceptionId());
}
throw new IllegalStateException();
}
