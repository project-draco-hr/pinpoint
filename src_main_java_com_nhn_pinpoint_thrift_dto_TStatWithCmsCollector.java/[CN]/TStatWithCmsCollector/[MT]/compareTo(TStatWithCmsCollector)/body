{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetAgentId()).compareTo(other.isSetAgentId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAgentId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.agentId,other.agentId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTimestamp()).compareTo(other.isSetTimestamp());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTimestamp()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.timestamp,other.timestamp);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryTotalUsed()).compareTo(other.isSetJvmMemoryTotalUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryTotalUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryTotalUsed,other.jvmMemoryTotalUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryTotalMax()).compareTo(other.isSetJvmMemoryTotalMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryTotalMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryTotalMax,other.jvmMemoryTotalMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryHeapUsed()).compareTo(other.isSetJvmMemoryHeapUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryHeapUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryHeapUsed,other.jvmMemoryHeapUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryHeapMax()).compareTo(other.isSetJvmMemoryHeapMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryHeapMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryHeapMax,other.jvmMemoryHeapMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryNonHeapUsed()).compareTo(other.isSetJvmMemoryNonHeapUsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryNonHeapUsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryNonHeapUsed,other.jvmMemoryNonHeapUsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryNonHeapMax()).compareTo(other.isSetJvmMemoryNonHeapMax());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryNonHeapMax()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryNonHeapMax,other.jvmMemoryNonHeapMax);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsCodeCacheUsage()).compareTo(other.isSetJvmMemoryPoolsCodeCacheUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsCodeCacheUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsCodeCacheUsage,other.jvmMemoryPoolsCodeCacheUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsParEdenSpaceUsage()).compareTo(other.isSetJvmMemoryPoolsParEdenSpaceUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsParEdenSpaceUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsParEdenSpaceUsage,other.jvmMemoryPoolsParEdenSpaceUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsParSurvivorSpaceUsage()).compareTo(other.isSetJvmMemoryPoolsParSurvivorSpaceUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsParSurvivorSpaceUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsParSurvivorSpaceUsage,other.jvmMemoryPoolsParSurvivorSpaceUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsCMSOldGenUsage()).compareTo(other.isSetJvmMemoryPoolsCMSOldGenUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsCMSOldGenUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsCMSOldGenUsage,other.jvmMemoryPoolsCMSOldGenUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmMemoryPoolsCMSPermGenUsage()).compareTo(other.isSetJvmMemoryPoolsCMSPermGenUsage());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmMemoryPoolsCMSPermGenUsage()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmMemoryPoolsCMSPermGenUsage,other.jvmMemoryPoolsCMSPermGenUsage);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcParNewCount()).compareTo(other.isSetJvmGcParNewCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcParNewCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcParNewCount,other.jvmGcParNewCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcParNewTime()).compareTo(other.isSetJvmGcParNewTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcParNewTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcParNewTime,other.jvmGcParNewTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcCmsCount()).compareTo(other.isSetJvmGcCmsCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcCmsCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcCmsCount,other.jvmGcCmsCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetJvmGcCmsTime()).compareTo(other.isSetJvmGcCmsTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetJvmGcCmsTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.jvmGcCmsTime,other.jvmGcCmsTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMetadata()).compareTo(other.isSetMetadata());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMetadata()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.metadata,other.metadata);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
