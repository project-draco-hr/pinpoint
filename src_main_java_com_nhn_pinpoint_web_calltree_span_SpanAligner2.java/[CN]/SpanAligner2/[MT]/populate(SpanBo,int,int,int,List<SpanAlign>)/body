{
  int depth=spanDepth + 1;
  SpanAlign element=new SpanAlign(depth,parentSpan,++sequence,pSequence);
  container.add(element);
  List<SpanEventBo> spanEventBoList=parentSpan.getSpanEventBoList();
  if (spanEventBoList == null) {
    return;
  }
  int lastChildSequence=sequence;
  for (  SpanEventBo spanEventBo : spanEventBoList) {
    if (spanEventBo.getDepth() != -1) {
      depth=spanDepth + spanEventBo.getDepth() + 1;
    }
    lastChildSequence++;
    SpanAlign sa=new SpanAlign(depth,lastChildSequence,sequence,parentSpan,spanEventBo);
    container.add(sa);
    int nextSpanId=spanEventBo.getNextSpanId();
    if (nextSpanId != ROOT && spanMap.containsKey(nextSpanId)) {
      populate(spanMap.get(nextSpanId),depth,lastChildSequence,lastChildSequence,container);
    }
  }
}
