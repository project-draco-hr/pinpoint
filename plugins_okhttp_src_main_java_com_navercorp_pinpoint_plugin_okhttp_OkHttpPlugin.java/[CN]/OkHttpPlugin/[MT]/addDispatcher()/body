{
  transformTemplate.transform("com.squareup.okhttp.Dispatcher",new TransformCallback(){
    @Override public byte[] doInTransform(    Instrumentor instrumentor,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      InstrumentClass target=instrumentor.getInstrumentClass(loader,className,classfileBuffer);
      for (      InstrumentMethod method : target.getDeclaredMethods(MethodFilters.name("execute","cancel"))) {
        logger.debug("[OkHttp] Add Dispatcher.execute | cancel interceptor.");
        method.addInterceptor(BasicMethodInterceptor.class.getName(),va(OkHttpConstants.OK_HTTP_CLIENT_INTERNAL));
      }
      InstrumentMethod enqueueMethod=target.getDeclaredMethod("enqueue","com.squareup.okhttp.Call$AsyncCall");
      if (enqueueMethod != null) {
        logger.debug("[OkHttp] Add Dispatcher.enqueue interceptor.");
        enqueueMethod.addInterceptor("com.navercorp.pinpoint.plugin.okhttp.interceptor.DispatcherEnqueueMethodInterceptor");
      }
      return target.toBytecode();
    }
  }
);
}
