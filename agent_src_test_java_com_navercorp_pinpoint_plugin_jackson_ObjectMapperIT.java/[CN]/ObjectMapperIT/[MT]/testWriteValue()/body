{
  __POJO pojo=new __POJO();
  pojo.setName("Jackson");
  String jsonStr=mapper.writeValueAsString(pojo);
  byte[] jsonByte=mapper.writeValueAsBytes(pojo);
  ObjectWriter writer=mapper.writer();
  writer.writeValueAsString(pojo);
  writer.writeValueAsBytes(pojo);
  PluginTestVerifier verifier=PluginTestVerifierHolder.getInstance();
  verifier.printCache();
  Method mapperWriteValueAsString=ObjectMapper.class.getMethod("writeValueAsString",Object.class);
  Method mapperWriteValueAsBytes=ObjectMapper.class.getMethod("writeValueAsBytes",Object.class);
  Method writerWriteValueAsString=ObjectWriter.class.getMethod("writeValueAsString",Object.class);
  Method writerWriteValueAsBytes=ObjectWriter.class.getMethod("writeValueAsBytes",Object.class);
  verifier.verifyTrace(event(SERVICE_TYPE,mapperWriteValueAsString,annotation(ANNOTATION_KEY,jsonStr.length())));
  verifier.verifyTrace(event(SERVICE_TYPE,mapperWriteValueAsBytes,annotation(ANNOTATION_KEY,jsonByte.length)));
  verifier.verifyTrace(event(SERVICE_TYPE,writerWriteValueAsString,annotation(ANNOTATION_KEY,jsonStr.length())));
  verifier.verifyTrace(event(SERVICE_TYPE,writerWriteValueAsBytes,annotation(ANNOTATION_KEY,jsonByte.length)));
  verifier.verifyTraceCount(0);
}
