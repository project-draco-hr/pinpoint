{
  if (logger.isInfoEnabled()) {
    logger.info("Modifying. {}",javassistClassName);
  }
  try {
    InstrumentableClass preparedStatementClass=byteCodeInstrumentor.getClass(classLoader,javassistClassName,classFileBuffer);
    Interceptor executeInterceptor=new PreparedStatementExecuteQueryInterceptor();
    preparedStatementClass.addGroupInterceptor("execute",null,executeInterceptor,CubridScope.SCOPE_NAME);
    Interceptor executeQueryInterceptor=new PreparedStatementExecuteQueryInterceptor();
    preparedStatementClass.addGroupInterceptor("executeQuery",null,executeQueryInterceptor,CubridScope.SCOPE_NAME);
    Interceptor executeUpdateInterceptor=new PreparedStatementExecuteQueryInterceptor();
    preparedStatementClass.addGroupInterceptor("executeUpdate",null,executeUpdateInterceptor,CubridScope.SCOPE_NAME);
    preparedStatementClass.addTraceValue(DatabaseInfoTraceValue.class);
    preparedStatementClass.addTraceValue(ParsingResultTraceValue.class);
    preparedStatementClass.addTraceValue(BindValueTraceValue.class,"new java.util.HashMap();");
    bindVariableIntercept(preparedStatementClass,classLoader,protectedDomain);
    return preparedStatementClass.toBytecode();
  }
 catch (  InstrumentException e) {
    if (logger.isWarnEnabled()) {
      logger.warn("{} modify fail. Cause:{}",this.getClass().getSimpleName(),e.getMessage(),e);
    }
    return null;
  }
}
