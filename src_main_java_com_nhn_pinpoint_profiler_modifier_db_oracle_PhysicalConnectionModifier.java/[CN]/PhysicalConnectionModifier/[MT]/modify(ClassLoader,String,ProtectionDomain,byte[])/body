{
  if (logger.isInfoEnabled()) {
    logger.info("Modifing. {}",javassistClassName);
  }
  this.byteCodeInstrumentor.checkLibrary(classLoader,javassistClassName);
  try {
    InstrumentClass oracleConnection=byteCodeInstrumentor.getClass(javassistClassName);
    oracleConnection.addTraceVariable("__databaseInfo","__setDatabaseInfo","__getDatabaseInfo","java.lang.Object");
    Interceptor closeConnection=new ConnectionCloseInterceptor();
    oracleConnection.addScopeInterceptor("close",null,closeConnection,JDBCScope.SCOPE);
    Interceptor statementCreateInterceptor1=new StatementCreateInterceptor();
    oracleConnection.addScopeInterceptor("createStatement",null,statementCreateInterceptor1,JDBCScope.SCOPE);
    Interceptor statementCreateInterceptor2=new StatementCreateInterceptor();
    oracleConnection.addScopeInterceptor("createStatement",new String[]{"int","int"},statementCreateInterceptor2,JDBCScope.SCOPE);
    Interceptor statementCreateInterceptor3=new StatementCreateInterceptor();
    oracleConnection.addScopeInterceptor("createStatement",new String[]{"int","int","int"},statementCreateInterceptor3,JDBCScope.SCOPE);
    Interceptor preparedStatementCreateInterceptor1=new PreparedStatementCreateInterceptor();
    oracleConnection.addScopeInterceptor("prepareStatement",new String[]{"java.lang.String"},preparedStatementCreateInterceptor1,JDBCScope.SCOPE);
    Interceptor preparedStatementCreateInterceptor2=new PreparedStatementCreateInterceptor();
    oracleConnection.addScopeInterceptor("prepareStatement",new String[]{"java.lang.String","int"},preparedStatementCreateInterceptor2,JDBCScope.SCOPE);
    Interceptor preparedStatementCreateInterceptor3=new PreparedStatementCreateInterceptor();
    oracleConnection.addScopeInterceptor("prepareStatement",new String[]{"java.lang.String","int[]"},preparedStatementCreateInterceptor3,JDBCScope.SCOPE);
    Interceptor preparedStatementCreateInterceptor4=new PreparedStatementCreateInterceptor();
    oracleConnection.addScopeInterceptor("prepareStatement",new String[]{"java.lang.String","java.lang.String[]"},preparedStatementCreateInterceptor4,JDBCScope.SCOPE);
    Interceptor preparedStatementCreateInterceptor5=new PreparedStatementCreateInterceptor();
    oracleConnection.addScopeInterceptor("prepareStatement",new String[]{"java.lang.String","int","int"},preparedStatementCreateInterceptor5,JDBCScope.SCOPE);
    Interceptor preparedStatementCreateInterceptor6=new PreparedStatementCreateInterceptor();
    oracleConnection.addScopeInterceptor("prepareStatement",new String[]{"java.lang.String","int","int","int"},preparedStatementCreateInterceptor6,JDBCScope.SCOPE);
    final ProfilerConfig profilerConfig=agent.getProfilerConfig();
    if (profilerConfig.isJdbcProfileOracleSetAutoCommit()) {
      Interceptor setAutocommit=new TransactionSetAutoCommitInterceptor();
      oracleConnection.addScopeInterceptor("setAutoCommit",new String[]{"boolean"},setAutocommit,JDBCScope.SCOPE);
    }
    if (profilerConfig.isJdbcProfileOracleCommit()) {
      Interceptor commit=new TransactionCommitInterceptor();
      oracleConnection.addScopeInterceptor("commit",null,commit,JDBCScope.SCOPE);
    }
    if (profilerConfig.isJdbcProfileOracleRollback()) {
      Interceptor rollback=new TransactionRollbackInterceptor();
      oracleConnection.addScopeInterceptor("rollback",null,rollback,JDBCScope.SCOPE);
    }
    if (this.logger.isInfoEnabled()) {
      this.logger.info("{} class is converted.",javassistClassName);
    }
    return oracleConnection.toBytecode();
  }
 catch (  InstrumentException e) {
    if (logger.isWarnEnabled()) {
      logger.warn("{} modify fail. Cause:{}",this.getClass().getSimpleName(),e.getMessage(),e);
    }
    return null;
  }
}
