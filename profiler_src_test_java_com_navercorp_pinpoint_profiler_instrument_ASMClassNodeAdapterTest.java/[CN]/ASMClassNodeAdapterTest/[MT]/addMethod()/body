{
  final MethodNode methodNode=ASMClassNodeLoader.get("com.navercorp.pinpoint.profiler.instrument.mock.ArgsClass","arg");
  final ASMMethodNodeAdapter adapter=new ASMMethodNodeAdapter("com.navercorp.pinpoint.profiler.instrument.mock.ArgsClass",methodNode);
  final ASMClassNodeLoader.TestClassLoader testClassLoader=ASMClassNodeLoader.getClassLoader();
  final String targetClassName="com.navercorp.pinpoint.profiler.instrument.mock.BaseClass";
  testClassLoader.setTargetClassName(targetClassName);
  testClassLoader.setCallbackHandler(new ASMClassNodeLoader.CallbackHandler(){
    @Override public void handle(    ClassNode classNode){
      ASMClassNodeAdapter classNodeAdapter=new ASMClassNodeAdapter(null,classNode);
      classNodeAdapter.copyMethod(adapter);
    }
  }
);
  Class<?> clazz=testClassLoader.loadClass(targetClassName);
  Method method=clazz.getDeclaredMethod("arg");
  method.invoke(clazz.newInstance());
}
