{
  context.addClassFileTransformer("ch.qos.logback.classic.spi.LoggingEvent",new PinpointClassFileTransformer(){
    @Override public byte[] transform(    PinpointInstrument pluginContext,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      InstrumentClass mdcClass=pluginContext.getInstrumentClass(loader,"org.slf4j.MDC",null);
      if (mdcClass == null) {
        logger.warn("modify fail. Because org.slf4j.MDC does not exist.");
        return null;
      }
      if (!mdcClass.hasMethod("put","java.lang.String","java.lang.String")) {
        logger.warn("modify fail. Because put method does not exist at org.slf4j.MDC class.");
        return null;
      }
      if (!mdcClass.hasMethod("remove","java.lang.String")) {
        logger.warn("modify fail. Because remove method does not exist at org.slf4j.MDC class.");
        return null;
      }
      InstrumentClass target=pluginContext.getInstrumentClass(loader,className,classfileBuffer);
      target.addInterceptor("com.navercorp.pinpoint.plugin.logback.interceptor.LoggingEventOfLogbackInterceptor");
      return target.toBytecode();
    }
  }
);
}
