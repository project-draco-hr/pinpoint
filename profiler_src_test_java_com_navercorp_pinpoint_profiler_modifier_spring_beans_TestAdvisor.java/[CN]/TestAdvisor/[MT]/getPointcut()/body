{
  return new Pointcut(){
    @Override public ClassFilter getClassFilter(){
      return new ClassFilter(){
        @Override public boolean matches(        Class<?> clazz){
          return clazz.equals(ProxyTarget.class);
        }
      }
;
    }
    @Override public MethodMatcher getMethodMatcher(){
      return new MethodMatcher(){
        @Override public boolean matches(        Method method,        Class<?> targetClass){
          return true;
        }
        @Override public boolean isRuntime(){
          return false;
        }
        @Override public boolean matches(        Method method,        Class<?> targetClass,        Object[] args){
          return true;
        }
      }
;
    }
  }
;
}
