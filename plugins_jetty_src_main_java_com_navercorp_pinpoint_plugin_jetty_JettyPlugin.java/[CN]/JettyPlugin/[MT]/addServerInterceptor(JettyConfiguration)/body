{
  transformTemplate.transform("org.eclipse.jetty.server.Server",new TransformCallback(){
    @Override public byte[] doInTransform(    Instrumentor instrumentor,    ClassLoader classLoader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      InstrumentClass target=instrumentor.getInstrumentClass(classLoader,className,classfileBuffer);
      InstrumentMethod handleMethodEditorBuilder=target.getDeclaredMethod("handle","org.eclipse.jetty.server.HttpChannel");
      if (handleMethodEditorBuilder != null) {
        handleMethodEditorBuilder.addInterceptor("com.navercorp.pinpoint.plugin.jetty.interceptor.ServerHandleInterceptor",va(config.getJettyExcludeUrlFilter()));
        return target.toBytecode();
      }
      InstrumentMethod jetty8HandleMethodEditorBuilder=target.getDeclaredMethod("handle","org.eclipse.jetty.server.AbstractHttpConnection");
      if (jetty8HandleMethodEditorBuilder != null) {
        jetty8HandleMethodEditorBuilder.addInterceptor("com.navercorp.pinpoint.plugin.jetty.interceptor.Jetty8ServerHandleInterceptor",va(config.getJettyExcludeUrlFilter()));
        return target.toBytecode();
      }
      return target.toBytecode();
    }
  }
);
}
