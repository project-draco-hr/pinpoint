{
  expectResult.add("#");
  expectResult.add("##");
  expectResult.add("###");
  expectResult.add("####");
  expectResult.add("###");
  expectResult.add("###");
  SpanAlign root=makeSpanAlign(0,10);
  SpanCallTree callTree=new SpanCallTree(root);
  callTree.add(1,makeSpanAlign(root.getSpanBo(),SYNC,(short)0,-1,-1,1,1));
  SpanAlign remoteRoot1=makeSpanAlign(4,5);
  SpanCallTree subTree1=new SpanCallTree(remoteRoot1);
  subTree1.add(1,makeSpanAlign(remoteRoot1.getSpanBo(),SYNC,(short)0,-1,-1,1,1));
  callTree.add(subTree1);
  SpanAlign remoteRoot2=makeSpanAlign(3,4);
  SpanCallTree subTree2=new SpanCallTree(remoteRoot2);
  callTree.add(subTree2);
  callTree.add(2,makeSpanAlign(root.getSpanBo(),SYNC,(short)1,-1,-1,2,1));
  assertDepth("before sort",callTree,expectResult);
  callTree.sort();
  expectResult.clear();
  expectResult.add("#");
  expectResult.add("##");
  expectResult.add("###");
  expectResult.add("###");
  expectResult.add("###");
  expectResult.add("####");
  assertDepth("after sort",callTree,expectResult);
}
