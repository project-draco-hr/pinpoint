{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetVersion()).compareTo(other.isSetVersion());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetVersion()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.version,other.version);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSampledNewCount()).compareTo(other.isSetSampledNewCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSampledNewCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.sampledNewCount,other.sampledNewCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSampledContinuationCount()).compareTo(other.isSetSampledContinuationCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSampledContinuationCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.sampledContinuationCount,other.sampledContinuationCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetUnsampledNewCount()).compareTo(other.isSetUnsampledNewCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetUnsampledNewCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.unsampledNewCount,other.unsampledNewCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetUnsampledContinuationCount()).compareTo(other.isSetUnsampledContinuationCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetUnsampledContinuationCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.unsampledContinuationCount,other.unsampledContinuationCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
