{
  AgentInfoPopulator agentInfoPopulator=new AgentInfoPopulator(){
    @Override public void addAgentInfos(    Node node){
      ServerInstanceList serverInstanceList=getServerInstanceList(node,agentInfoService);
      node.setServerInstanceList(serverInstanceList);
    }
  }
;
  NodeHistogramDataSource responseSource=new NodeHistogramDataSource(){
    @Override public NodeHistogram createNodeHistogram(    Application application){
      List<ResponseTime> responseHistogram=mapHistogramSummary.getResponseTimeList(application);
      final NodeHistogram nodeHistogram=new NodeHistogram(application,range,responseHistogram);
      return nodeHistogram;
    }
  }
;
  return this.build(linkDataDuplexMap,agentInfoPopulator,responseSource);
}
