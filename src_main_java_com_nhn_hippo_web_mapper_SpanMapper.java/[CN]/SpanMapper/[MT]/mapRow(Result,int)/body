{
  byte[] rowKey=result.getRow();
  if (rowKey == null) {
    return Collections.emptyList();
  }
  long most=BytesUtils.bytesToFirstLong(rowKey);
  long least=BytesUtils.bytesToSecondLong(rowKey);
  KeyValue[] keyList=result.raw();
  List<SpanBo> spanList=new ArrayList<SpanBo>();
  for (  KeyValue kv : keyList) {
    if (kv.getFamilyLength() == HBaseTables.TRACES_CF_SPAN.length || kv.getFamilyLength() == HBaseTables.TRACES_CF_TERMINALSPAN.length) {
      SpanBo spanBo=new SpanBo();
      spanBo.setMostTraceId(most);
      spanBo.setLeastTraceId(least);
      spanBo.setSpanID(Bytes.toLong(kv.getBuffer(),kv.getQualifierOffset()));
      spanBo.readValue(kv.getBuffer(),kv.getValueOffset());
      if (logger.isDebugEnabled()) {
        logger.debug("read span :{}",spanBo);
      }
      spanList.add(spanBo);
    }
  }
  if (annotationMapper != null) {
    Map<Long,List<AnnotationBo>> annotationMap=annotationMapper.mapRow(result,rowNum);
    addAnnotation(spanList,annotationMap);
  }
  return spanList;
}
