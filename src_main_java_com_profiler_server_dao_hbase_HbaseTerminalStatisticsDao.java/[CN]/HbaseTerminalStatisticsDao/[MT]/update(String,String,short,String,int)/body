{
  if (logger.isDebugEnabled()) {
    logger.debug("[WritingTerminalStatistics] " + sourceApplicationName + " -> "+ destApplicationName+ " ("+ ServiceType.parse(destServiceType)+ ")");
  }
  final byte[] columnName=TerminalSpanUtils.makeColumnName(destServiceType,destApplicationName);
  long timeSlot=TimeSlot.getSlot(System.currentTimeMillis());
  final byte[] rowKey=TerminalSpanUtils.makeRowKey(sourceApplicationName,timeSlot);
  hbaseTemplate.doUserBatchJob(TERMINAL_STATISTICS,new HBaseBatchJob(){
    @Override public void doBatch(    HTable htable){
      RowLock lock=null;
      try {
        lock=htable.lockRow(rowKey);
        if (logger.isDebugEnabled()) {
          logger.debug("The row {} is locked. lock={}",Arrays.toString(rowKey),lock.getLockId());
        }
        Get get=new Get(rowKey,lock);
        get.addColumn(TERMINAL_STATISTICS_CF_COUNTER,columnName);
        Result result=htable.get(get);
        KeyValue[] raw=result.raw();
        TerminalStatisticsBo statistics=null;
        if (raw != null && raw.length > 0) {
          logger.debug("raw len = {}",raw.length);
          statistics=TerminalStatisticsBo.parse(raw[0].getValue());
          statistics.addAgentId(agentId);
          statistics.sampleElapsedTime(elapsed);
        }
 else {
          logger.debug("value is not exists. create new one.");
          statistics=new TerminalStatisticsBo();
          statistics.addAgentId(agentId);
          statistics.sampleElapsedTime(elapsed);
        }
        logger.debug("Statistics = {}",statistics.toString());
        Put put=new Put(rowKey,lock);
        put.add(TERMINAL_STATISTICS_CF_COUNTER,columnName,statistics.toBytes());
        htable.put(put);
      }
 catch (      IOException e) {
        logger.error(e.getMessage(),e);
      }
 finally {
        if (lock != null) {
          try {
            htable.unlockRow(lock);
            if (logger.isDebugEnabled()) {
              logger.debug("Row lock {} released. lock={}",Arrays.toString(rowKey),lock.getLockId());
            }
          }
 catch (          IOException e) {
            logger.error(e.getMessage(),e);
          }
        }
      }
    }
  }
);
}
