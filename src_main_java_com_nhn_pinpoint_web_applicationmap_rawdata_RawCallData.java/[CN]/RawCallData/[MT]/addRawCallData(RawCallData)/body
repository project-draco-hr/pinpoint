{
  if (copyRawCallData == null) {
    throw new NullPointerException("copyRawCallData must not be null");
  }
  if (!this.source.equals(copyRawCallData.source)) {
    throw new IllegalArgumentException("source not equals");
  }
  if (this.sourceServiceType != copyRawCallData.sourceServiceType) {
    throw new IllegalArgumentException("sourceServiceType not equals");
  }
  if (!this.target.equals(copyRawCallData.target)) {
    throw new IllegalArgumentException("target not equals");
  }
  if (this.targetServiceType != copyRawCallData.targetServiceType) {
    throw new IllegalArgumentException("targetServiceType not equals");
  }
  for (  Map.Entry<Long,TimeHistogram> copyEntry : copyRawCallData.targetHistogramTimeMap.entrySet()) {
    final Long timeStamp=copyEntry.getKey();
    TimeHistogram histogram=targetHistogramTimeMap.get(timeStamp);
    if (histogram == null) {
      histogram=new TimeHistogram(targetServiceType,timeStamp);
      targetHistogramTimeMap.put(timeStamp,histogram);
    }
    histogram.add(copyEntry.getValue());
  }
}
