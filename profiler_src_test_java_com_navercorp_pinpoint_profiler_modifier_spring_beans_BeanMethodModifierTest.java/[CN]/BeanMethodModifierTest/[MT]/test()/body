{
  DefaultAgent agent=MockAgent.of("pinpoint-spring-bean-test.config");
  ByteCodeInstrumentor realInstrumentor=agent.getByteCodeInstrumentor();
  ByteCodeInstrumentor instrumentor=mock(ByteCodeInstrumentor.class);
  InstrumentClass instrumentClass=mock(InstrumentClass.class);
  when(instrumentor.getClass(TARGET_INTERNAL_NAME)).thenReturn(instrumentClass);
  when(instrumentClass.isInterceptable()).thenReturn(true);
  when(instrumentClass.getDeclaredMethods(BeanMethodModifier.METHOD_FILTER)).thenReturn(realInstrumentor.getClass(TARGET).getDeclaredMethods(BeanMethodModifier.METHOD_FILTER));
  ClassLoader loader=getClass().getClassLoader();
  byte[] byteCode=ClassTransformHelper.getClassFile(loader,TARGET);
  BeanMethodModifier modifier=new BeanMethodModifier(instrumentor);
  modifier.modify(loader,TARGET_INTERNAL_NAME,null,byteCode);
  verify(instrumentor).checkLibrary(loader,TARGET_INTERNAL_NAME);
  verify(instrumentor).getClass(TARGET_INTERNAL_NAME);
  verify(instrumentClass).isInterceptable();
  verify(instrumentClass).getDeclaredMethods(BeanMethodModifier.METHOD_FILTER);
  verify(instrumentClass).addInterceptor(eq("publicMethod"),eq(new String[0]),isA(MethodInterceptor.class));
  verify(instrumentClass).addInterceptor(eq("compareTo"),eq(new String[]{TARGET}),isA(MethodInterceptor.class));
  verify(instrumentClass).toBytecode();
  verifyNoMoreInteractions(instrumentor,instrumentClass);
}
