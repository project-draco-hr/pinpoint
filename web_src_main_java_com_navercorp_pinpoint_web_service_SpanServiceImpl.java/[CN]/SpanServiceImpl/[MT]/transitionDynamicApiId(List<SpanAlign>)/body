{
  this.transitionAnnotation(spans,new AnnotationReplacementCallback(){
    @Override public void replacement(    SpanAlign spanAlign,    List<AnnotationBo> annotationBoList){
      final int apiId=spanAlign.getApiId();
      List<ApiMetaDataBo> apiMetaDataList=apiMetaDataDao.getApiMetaData(spanAlign.getAgentId(),spanAlign.getAgentStartTime(),apiId);
      int size=apiMetaDataList.size();
      if (size == 0) {
        AnnotationBo api=new AnnotationBo();
        api.setKey(AnnotationKey.ERROR_API_METADATA_NOT_FOUND.getCode());
        api.setValue("API-DynamicID not found. api:" + apiId);
        annotationBoList.add(api);
      }
 else       if (size == 1) {
        ApiMetaDataBo apiMetaDataBo=apiMetaDataList.get(0);
        AnnotationBo apiMetaData=new AnnotationBo();
        apiMetaData.setKey(AnnotationKey.API_METADATA.getCode());
        apiMetaData.setValue(apiMetaDataBo);
        annotationBoList.add(apiMetaData);
        if (apiMetaDataBo.getType() == 0) {
          AnnotationBo apiAnnotation=new AnnotationBo();
          apiAnnotation.setKey(AnnotationKey.API.getCode());
          String apiInfo=getApiInfo(apiMetaDataBo);
          apiAnnotation.setValue(apiInfo);
          annotationBoList.add(apiAnnotation);
        }
 else {
          AnnotationBo apiAnnotation=new AnnotationBo();
          apiAnnotation.setKey(AnnotationKey.API_TAG.getCode());
          apiAnnotation.setValue(getApiTagInfo(apiMetaDataBo));
          annotationBoList.add(apiAnnotation);
        }
      }
 else {
        AnnotationBo apiAnnotation=new AnnotationBo();
        apiAnnotation.setKey(AnnotationKey.ERROR_API_METADATA_DID_COLLSION.getCode());
        String collisionMessage=collisionApiDidMessage(apiId,apiMetaDataList);
        apiAnnotation.setValue(collisionMessage);
        annotationBoList.add(apiAnnotation);
      }
    }
  }
);
}
