{
  if (isDebug) {
    logBeforeInterceptor(target,args);
  }
  prepareBeforeTrace(target,args);
  final Trace trace=traceContext.currentTraceObject();
  if (trace == null) {
    return;
  }
  try {
    final SpanEventRecorder recorder=trace.traceBlockBegin();
    doInBeforeTrace(recorder,target,args);
  }
 catch (  Throwable th) {
    if (logger.isWarnEnabled()) {
      logger.warn("before. Caused:{}",th.getMessage(),th);
    }
  }
}
