{
  if (logger.isInfoEnabled()) {
    logger.info("Modifing. {}",className);
  }
  byteCodeInstrumentor.checkLibrary(classLoader,className);
  try {
    final InstrumentClass instrumentClass=byteCodeInstrumentor.getClass(className);
    instrumentClass.addTraceValue(MapTraceValue.class);
    final List<MethodInfo> declaredMethods=instrumentClass.getDeclaredMethods();
    for (    MethodInfo method : declaredMethods) {
      if (method.getName().equals("getResource")) {
        final Interceptor methodInterceptor=byteCodeInstrumentor.newInterceptor(classLoader,protectedDomain,"com.nhn.pinpoint.profiler.modifier.redis.interceptor.GatewayServerMethodInterceptor");
        instrumentClass.addInterceptor(method.getName(),method.getParameterTypes(),methodInterceptor);
      }
    }
    return instrumentClass.toBytecode();
  }
 catch (  Exception e) {
    if (logger.isWarnEnabled()) {
      logger.warn("Failed to modifier. caused={}",e.getMessage(),e);
    }
  }
  return null;
}
