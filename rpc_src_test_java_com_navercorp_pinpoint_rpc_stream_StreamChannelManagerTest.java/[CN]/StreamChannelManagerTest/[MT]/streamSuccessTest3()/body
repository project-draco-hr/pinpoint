{
  PinpointServerAcceptor serverAcceptor=createServerFactory(SimpleServerMessageListener.DUPLEX_ECHO_INSTANCE,null);
  serverAcceptor.bind("localhost",bindPort);
  SimpleStreamBO bo=new SimpleStreamBO();
  PinpointClientFactory clientFactory=createSocketFactory(SimpleMessageListener.INSTANCE,new ServerListener(bo));
  try {
    PinpointClient client=clientFactory.connect("127.0.0.1",bindPort);
    Thread.sleep(100);
    List<PinpointSocket> writableServerList=serverAcceptor.getWritableSocketList();
    Assert.assertEquals(1,writableServerList.size());
    PinpointSocket writableServer=writableServerList.get(0);
    RecordedStreamChannelMessageListener clientListener=new RecordedStreamChannelMessageListener(4);
    if (writableServer instanceof PinpointServer) {
      ClientStreamChannelContext clientContext=((PinpointServer)writableServer).openStream(new byte[0],clientListener);
      int sendCount=4;
      for (int i=0; i < sendCount; i++) {
        sendRandomBytes(bo);
      }
      clientListener.getLatch().await();
      Assert.assertEquals(sendCount,clientListener.getReceivedMessage().size());
      clientContext.getStreamChannel().close();
    }
 else {
      Assert.fail();
    }
    PinpointRPCTestUtils.close(client);
  }
  finally {
    clientFactory.release();
    PinpointRPCTestUtils.close(serverAcceptor);
  }
}
