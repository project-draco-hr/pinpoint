{
  logger.info("Modifying. {}",javassistClassName);
  byteCodeInstrumentor.checkLibrary(classLoader,javassistClassName);
  try {
    InstrumentClass standardService=byteCodeInstrumentor.getClass(javassistClassName);
    LifeCycleEventListener lifeCycleEventListener=new LifeCycleEventListener(agent);
    Interceptor standardServiceStartInterceptor=byteCodeInstrumentor.newInterceptor(classLoader,protectedDomain,"com.nhn.pinpoint.profiler.modifier.tomcat.interceptor.StandardServiceStartInterceptor",new Object[]{lifeCycleEventListener},new Class[]{LifeCycleEventListener.class});
    Interceptor standardServiceStopInterceptor=byteCodeInstrumentor.newInterceptor(classLoader,protectedDomain,"com.nhn.pinpoint.profiler.modifier.tomcat.interceptor.StandardServiceStopInterceptor",new Object[]{lifeCycleEventListener},new Class[]{LifeCycleEventListener.class});
    boolean isHooked=false;
    if (standardService.hasDeclaredMethod("start",null) && standardService.hasDeclaredMethod("stop",null)) {
      standardService.addInterceptor("start",null,standardServiceStartInterceptor);
      standardService.addInterceptor("stop",null,standardServiceStopInterceptor);
      isHooked=true;
    }
 else     if (standardService.hasDeclaredMethod("startInternal",null) && standardService.hasDeclaredMethod("stopInternal",null)) {
      standardService.addInterceptor("startInternal",null,standardServiceStartInterceptor);
      standardService.addInterceptor("stopInternal",null,standardServiceStopInterceptor);
      isHooked=true;
    }
    if (isHooked) {
      logger.info("{} class is converted.",javassistClassName);
    }
 else {
      logger.warn("{} class not converted - start() or startInternal() method not found.",javassistClassName);
    }
    return standardService.toBytecode();
  }
 catch (  Exception e) {
    if (logger.isWarnEnabled()) {
      logger.warn("modify fail. Cause:" + e.getMessage(),e);
    }
  }
  return null;
}
