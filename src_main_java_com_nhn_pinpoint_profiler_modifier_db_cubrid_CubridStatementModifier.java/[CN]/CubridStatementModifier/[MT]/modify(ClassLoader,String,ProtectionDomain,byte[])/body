{
  if (logger.isInfoEnabled()) {
    logger.info("Modifing. {}",javassistClassName);
  }
  this.byteCodeInstrumentor.checkLibrary(classLoader,javassistClassName);
  try {
    InstrumentClass statementClass=byteCodeInstrumentor.getClass(javassistClassName);
    Interceptor executeQueryInterceptor=new ScopeDelegateSimpleInterceptor(new StatementExecuteQueryInterceptor(),JDBCScope.SCOPE);
    statementClass.addInterceptor("executeQuery",new String[]{"java.lang.String"},executeQueryInterceptor);
    Interceptor executeUpdateInterceptor=new ScopeDelegateSimpleInterceptor(new StatementExecuteUpdateInterceptor(),JDBCScope.SCOPE);
    statementClass.addInterceptor("executeUpdate",new String[]{"java.lang.String","int"},executeUpdateInterceptor);
    Interceptor executeInterceptor=new ScopeDelegateSimpleInterceptor(new StatementExecuteUpdateInterceptor(),JDBCScope.SCOPE);
    statementClass.addInterceptor("execute",new String[]{"java.lang.String","int"},executeInterceptor);
    statementClass.addTraceVariable("__url","__setUrl","__getUrl","java.lang.Object");
    return statementClass.toBytecode();
  }
 catch (  InstrumentException e) {
    if (logger.isWarnEnabled()) {
      logger.warn("{} modify fail. Cause:{}",this.getClass().getSimpleName(),e.getMessage(),e);
    }
    return null;
  }
}
