{
  drainStartEntry:   while (isRun()) {
    try {
      Collection<Object> dtoList=getDrainQueue();
      int drainSize=takeN(dtoList,this.maxDrainSize);
      if (drainSize > 0) {
        doExecute(dtoList);
        continue;
      }
      while (isRun()) {
        Object dto=takeOne();
        if (dto != null) {
          doExecute(dto);
          continue drainStartEntry;
        }
      }
    }
 catch (    Throwable th) {
      logger.warn("{} doExecute(). Unexpected Error. Cause:{}",executorName,th.getMessage(),th);
    }
  }
  flushQueue();
}
