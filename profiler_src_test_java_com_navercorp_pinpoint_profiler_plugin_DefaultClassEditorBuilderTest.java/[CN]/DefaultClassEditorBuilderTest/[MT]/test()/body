{
  JavassistClassPool pool=mock(JavassistClassPool.class);
  TraceContext traceContext=mock(TraceContext.class);
  InstrumentClass aClass=mock(InstrumentClass.class);
  InstrumentMethod aMethod=mock(InstrumentMethod.class);
  MethodDescriptor aDescriptor=mock(MethodDescriptor.class);
  DefaultAgent agent=mock(DefaultAgent.class);
  DefaultProfilerPluginContext context=new DefaultProfilerPluginContext(agent,new TestProfilerPluginClassLoader());
  ClassLoader classLoader=getClass().getClassLoader();
  String className="someClass";
  String methodName="someMethod";
  byte[] classFileBuffer=new byte[0];
  Class<?>[] parameterTypes=new Class<?>[]{String.class};
  String[] parameterTypeNames=TypeUtils.toClassNames(parameterTypes);
  when(agent.getClassPool()).thenReturn(pool);
  when(agent.getTraceContext()).thenReturn(traceContext);
  when(pool.getClass(context,classLoader,className,classFileBuffer)).thenReturn(aClass);
  when(aClass.getDeclaredMethod(methodName,parameterTypeNames)).thenReturn(aMethod);
  when(aMethod.getName()).thenReturn(methodName);
  when(aMethod.getParameterTypes()).thenReturn(parameterTypeNames);
  when(aMethod.getDescriptor()).thenReturn(aDescriptor);
  when(aClass.addInterceptor(eq(methodName),va(eq(parameterTypeNames)))).thenReturn(0);
}
