{
  Map<Long,Span> spanIdMap=new HashMap<Long,Span>();
  Map<Long,List<Span>> parentSpanIdMap=new HashMap<Long,List<Span>>();
  for (  Span span : spans) {
    Span spanId=spanIdMap.put(span.getSpanID(),span);
    if (spanId != null) {
      logger.info("duplicated spanId. {}",spans);
      throw new IllegalStateException("duplicated spanId.");
    }
    long parentSpanId=span.getParentSpanId();
    List<Span> spanList=parentSpanIdMap.get(parentSpanId);
    if (spanList != null) {
      spanList.add(span);
    }
 else {
      LinkedList<Span> newSpanList=new LinkedList<Span>();
      newSpanList.add(span);
      parentSpanIdMap.put(parentSpanId,newSpanList);
    }
  }
  this.depth=0;
  this.spanIdMap=spanIdMap;
  this.parentSpanIdMap=parentSpanIdMap;
}
