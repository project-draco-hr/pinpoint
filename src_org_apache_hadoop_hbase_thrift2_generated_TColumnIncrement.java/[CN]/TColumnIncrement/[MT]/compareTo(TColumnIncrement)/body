{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  TColumnIncrement typedOther=(TColumnIncrement)other;
  lastComparison=Boolean.valueOf(isSetFamily()).compareTo(typedOther.isSetFamily());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetFamily()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.family,typedOther.family);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetQualifier()).compareTo(typedOther.isSetQualifier());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetQualifier()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.qualifier,typedOther.qualifier);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAmount()).compareTo(typedOther.isSetAmount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAmount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.amount,typedOther.amount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
