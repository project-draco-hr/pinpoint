{
  StringBuilder sb=new StringBuilder("TSpan(");
  boolean first=true;
  sb.append("agentId:");
  if (this.agentId == null) {
    sb.append("null");
  }
 else {
    sb.append(this.agentId);
  }
  first=false;
  if (!first)   sb.append(", ");
  sb.append("applicationName:");
  if (this.applicationName == null) {
    sb.append("null");
  }
 else {
    sb.append(this.applicationName);
  }
  first=false;
  if (!first)   sb.append(", ");
  sb.append("agentStartTime:");
  sb.append(this.agentStartTime);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("transactionId:");
  if (this.transactionId == null) {
    sb.append("null");
  }
 else {
    org.apache.thrift.TBaseHelper.toString(this.transactionId,sb);
  }
  first=false;
  if (!first)   sb.append(", ");
  sb.append("spanId:");
  sb.append(this.spanId);
  first=false;
  if (isSetParentSpanId()) {
    if (!first)     sb.append(", ");
    sb.append("parentSpanId:");
    sb.append(this.parentSpanId);
    first=false;
  }
  if (!first)   sb.append(", ");
  sb.append("startTime:");
  sb.append(this.startTime);
  first=false;
  if (isSetElapsed()) {
    if (!first)     sb.append(", ");
    sb.append("elapsed:");
    sb.append(this.elapsed);
    first=false;
  }
  if (isSetRpc()) {
    if (!first)     sb.append(", ");
    sb.append("rpc:");
    if (this.rpc == null) {
      sb.append("null");
    }
 else {
      sb.append(this.rpc);
    }
    first=false;
  }
  if (!first)   sb.append(", ");
  sb.append("serviceType:");
  sb.append(this.serviceType);
  first=false;
  if (isSetEndPoint()) {
    if (!first)     sb.append(", ");
    sb.append("endPoint:");
    if (this.endPoint == null) {
      sb.append("null");
    }
 else {
      sb.append(this.endPoint);
    }
    first=false;
  }
  if (isSetRemoteAddr()) {
    if (!first)     sb.append(", ");
    sb.append("remoteAddr:");
    if (this.remoteAddr == null) {
      sb.append("null");
    }
 else {
      sb.append(this.remoteAddr);
    }
    first=false;
  }
  if (isSetAnnotations()) {
    if (!first)     sb.append(", ");
    sb.append("annotations:");
    if (this.annotations == null) {
      sb.append("null");
    }
 else {
      sb.append(this.annotations);
    }
    first=false;
  }
  if (isSetFlag()) {
    if (!first)     sb.append(", ");
    sb.append("flag:");
    sb.append(this.flag);
    first=false;
  }
  if (isSetErr()) {
    if (!first)     sb.append(", ");
    sb.append("err:");
    sb.append(this.err);
    first=false;
  }
  if (isSetSpanEventList()) {
    if (!first)     sb.append(", ");
    sb.append("spanEventList:");
    if (this.spanEventList == null) {
      sb.append("null");
    }
 else {
      sb.append(this.spanEventList);
    }
    first=false;
  }
  if (isSetParentApplicationName()) {
    if (!first)     sb.append(", ");
    sb.append("parentApplicationName:");
    if (this.parentApplicationName == null) {
      sb.append("null");
    }
 else {
      sb.append(this.parentApplicationName);
    }
    first=false;
  }
  if (isSetParentApplicationType()) {
    if (!first)     sb.append(", ");
    sb.append("parentApplicationType:");
    sb.append(this.parentApplicationType);
    first=false;
  }
  if (isSetAcceptorHost()) {
    if (!first)     sb.append(", ");
    sb.append("acceptorHost:");
    if (this.acceptorHost == null) {
      sb.append("null");
    }
 else {
      sb.append(this.acceptorHost);
    }
    first=false;
  }
  if (isSetApiId()) {
    if (!first)     sb.append(", ");
    sb.append("apiId:");
    sb.append(this.apiId);
    first=false;
  }
  if (isSetExceptionInfo()) {
    if (!first)     sb.append(", ");
    sb.append("exceptionInfo:");
    if (this.exceptionInfo == null) {
      sb.append("null");
    }
 else {
      sb.append(this.exceptionInfo);
    }
    first=false;
  }
  sb.append(")");
  return sb.toString();
}
