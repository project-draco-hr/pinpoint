{
switch (field) {
case AGENT_ID:
    return getAgentId();
case APPLICATION_NAME:
  return getApplicationName();
case AGENT_START_TIME:
return Long.valueOf(getAgentStartTime());
case TRACE_AGENT_ID:
return getTraceAgentId();
case TRACE_AGENT_START_TIME:
return Long.valueOf(getTraceAgentStartTime());
case TRACE_TRANSACTION_SEQUENCE:
return Long.valueOf(getTraceTransactionSequence());
case SPAN_ID:
return Integer.valueOf(getSpanId());
case PARENT_SPAN_ID:
return Integer.valueOf(getParentSpanId());
case START_TIME:
return Long.valueOf(getStartTime());
case ELAPSED:
return Integer.valueOf(getElapsed());
case RPC:
return getRpc();
case SERVICE_TYPE:
return Short.valueOf(getServiceType());
case END_POINT:
return getEndPoint();
case REMOTE_ADDR:
return getRemoteAddr();
case ANNOTATIONS:
return getAnnotations();
case FLAG:
return Short.valueOf(getFlag());
case ERR:
return Integer.valueOf(getErr());
case SPAN_EVENT_LIST:
return getSpanEventList();
case PARENT_APPLICATION_NAME:
return getParentApplicationName();
case PARENT_APPLICATION_TYPE:
return Short.valueOf(getParentApplicationType());
case ACCEPTOR_HOST:
return getAcceptorHost();
case API_ID:
return Integer.valueOf(getApiId());
case EXCEPTION_ID:
return Integer.valueOf(getExceptionId());
}
throw new IllegalStateException();
}
