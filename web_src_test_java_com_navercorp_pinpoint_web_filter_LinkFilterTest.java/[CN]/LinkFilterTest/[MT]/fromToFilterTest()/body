{
  ServiceType tomcat=serviceTypeRegistryService.findServiceTypeByName("TOMCAT");
  final short tomcatServiceType=tomcat.getCode();
  FilterDescriptor descriptor=new FilterDescriptor();
  descriptor.setFromApplicationName("APP_A");
  descriptor.setFromServiceType(tomcat.getName());
  descriptor.setToApplicationName("APP_B");
  descriptor.setToServiceType(tomcat.getName());
  FilterHint hint=new FilterHint(Collections.<RpcHint>emptyList());
  LinkFilter linkFilter=new LinkFilter(descriptor,hint,serviceTypeRegistryService);
  logger.debug(linkFilter.toString());
  SpanBo fromSpanBo=new SpanBo();
  fromSpanBo.setApplicationId("APP_A");
  fromSpanBo.setServiceType(tomcatServiceType);
  fromSpanBo.setAgentId("AGENT_A");
  fromSpanBo.setSpanId(100);
  SpanBo toSpanBO=new SpanBo();
  toSpanBO.setApplicationId("APP_B");
  toSpanBO.setServiceType(tomcatServiceType);
  toSpanBO.setAgentId("AGENT_B");
  toSpanBO.setParentSpanId(100);
  SpanBo spanBoC=new SpanBo();
  spanBoC.setApplicationId("APP_C");
  spanBoC.setServiceType(tomcatServiceType);
  spanBoC.setAgentId("AGENT_C");
  Assert.assertTrue(linkFilter.include(Arrays.asList(fromSpanBo,toSpanBO)));
  Assert.assertFalse(linkFilter.include(Arrays.asList(fromSpanBo,spanBoC)));
}
