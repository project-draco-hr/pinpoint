{
  StopWatch watch=new StopWatch();
  watch.start();
  List<List<SpanBo>> transactionList=this.traceDao.selectAllSpans(traceIdSet);
  List<SpanBo> transaction=new ArrayList<SpanBo>();
  for (  List<SpanBo> t : transactionList) {
    if (filter.include(t)) {
      for (      SpanBo span : t) {
        transaction.add(span);
      }
    }
  }
  LinkStatistics statistics=new LinkStatistics(from,to);
  for (  SpanBo span : transaction) {
    if (srcApplicationName.equals(span.getApplicationId()) && srcServiceType == span.getServiceType().getCode()) {
      List<SpanEventBo> spanEventBoList=span.getSpanEventBoList();
      if (spanEventBoList == null) {
        continue;
      }
      for (      SpanEventBo ev : spanEventBoList) {
        if (destServiceType == ev.getServiceType().getCode() && destApplicationName.equals(ev.getDestinationId())) {
          boolean hasException=false;
          List<AnnotationBo> annList=ev.getAnnotationBoList();
          for (          AnnotationBo ann : annList) {
            if (ann.getKey() == AnnotationKey.EXCEPTION.getCode()) {
              hasException=true;
              break;
            }
          }
          statistics.addSample(span.getStartTime() + ev.getStartElapsed(),ev.getEndElapsed(),1,hasException);
          break;
        }
      }
    }
  }
  watch.stop();
  logger.info("Fetch link statistics elapsed. {}ms",watch.getLastTaskTimeMillis());
  return statistics;
}
