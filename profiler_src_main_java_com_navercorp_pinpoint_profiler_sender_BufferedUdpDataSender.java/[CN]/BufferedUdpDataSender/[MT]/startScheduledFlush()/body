{
  final ThreadFactory threadFactory=new PinpointThreadFactory(SCHEDULED_FLUSH,true);
  final Thread thread=threadFactory.newThread(new Runnable(){
    @Override public void run(){
      final Thread currentThread=Thread.currentThread();
      while (!currentThread.isInterrupted()) {
        try {
          chunkHeaderBufferedSerializer.flush();
        }
 catch (        TException e) {
          logger.warn("Failed to flush. caused={}",e.getMessage(),e);
        }
        try {
          TimeUnit.MILLISECONDS.sleep(1000);
        }
 catch (        InterruptedException ignored) {
          currentThread.interrupt();
        }
      }
      logger.info("stop ScheduledFlush {} - {}",currentThread.getName(),currentThread.getId());
    }
  }
);
  logger.info("stop ScheduledFlush {} - {}",thread.getName(),thread.getId());
  thread.start();
  return thread;
}
