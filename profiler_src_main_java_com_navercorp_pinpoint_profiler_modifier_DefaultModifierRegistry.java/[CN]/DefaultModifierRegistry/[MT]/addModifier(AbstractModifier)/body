{
  final Matcher matcher=modifier.getMatcher();
  if (matcher instanceof ClassNameMatcher) {
    final ClassNameMatcher classNameMatcher=(ClassNameMatcher)matcher;
    String className=classNameMatcher.getClassName();
    AbstractModifier old=registry.put(className,modifier);
    if (old != null) {
      throw new IllegalStateException("Modifier already exist new:" + modifier.getClass() + " old:"+ old.getMatcher());
    }
  }
 else   if (matcher instanceof MultiClassNameMatcher) {
    final MultiClassNameMatcher classNameMatcher=(MultiClassNameMatcher)matcher;
    List<String> classNameList=classNameMatcher.getClassNames();
    for (    String className : classNameList) {
      AbstractModifier old=registry.put(className,modifier);
      if (old != null) {
        throw new IllegalStateException("Modifier already exist new:" + modifier.getClass() + " old:"+ old.getMatcher());
      }
    }
  }
 else {
    throw new IllegalArgumentException("unsupported matcher :" + matcher);
  }
}
