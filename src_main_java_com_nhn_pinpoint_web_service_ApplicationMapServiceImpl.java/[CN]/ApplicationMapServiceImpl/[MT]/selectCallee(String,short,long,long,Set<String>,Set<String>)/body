{
  if (calleeFoundApplications.contains(callerApplicationName + callerServiceType)) {
    logger.debug("ApplicationStatistics exists. Skip finding callee. " + callerApplicationName + callerServiceType);
    return new HashSet<TransactionFlowStatistics>(0);
  }
  calleeFoundApplications.add(callerApplicationName + callerServiceType);
  logger.debug("Find Callee. caller=" + callerApplicationName + ", serviceType="+ ServiceType.findServiceType(callerServiceType));
  final Set<TransactionFlowStatistics> calleeSet=new HashSet<TransactionFlowStatistics>();
  Map<String,TransactionFlowStatistics> callee=applicationMapStatisticsCalleeDao.selectCallee(callerApplicationName,callerServiceType,from,to);
  logger.debug("     Found Callee. count=" + callee.size() + ", caller="+ callerApplicationName);
  for (  Entry<String,TransactionFlowStatistics> entry : callee.entrySet()) {
    boolean replaced=replaceApplicationInfo(entry.getValue(),from,to);
    if (!replaced) {
      fillAdditionalInfo(entry.getValue(),from,to);
      calleeSet.add(entry.getValue());
    }
    if (entry.getValue().getToServiceType().isTerminal() || entry.getValue().getToServiceType().isUnknown()) {
      continue;
    }
    TransactionFlowStatistics stat=entry.getValue();
    logger.debug("     Find subCallee of " + stat.getTo());
    Set<TransactionFlowStatistics> calleeSub=selectCallee(stat.getTo(),stat.getToServiceType().getCode(),from,to,calleeFoundApplications,callerFoundApplications);
    logger.debug("     Found subCallee. count=" + calleeSub.size() + ", caller="+ stat.getTo());
    calleeSet.addAll(calleeSub);
    for (    TransactionFlowStatistics eachCallee : calleeSub) {
      logger.debug("     Find caller of " + eachCallee.getFrom());
      Set<TransactionFlowStatistics> callerSub=selectCaller(eachCallee.getFrom(),eachCallee.getFromServiceType().getCode(),from,to,calleeFoundApplications,callerFoundApplications);
      logger.debug("     Found subCaller. count=" + callerSub.size() + ", callee="+ eachCallee.getFrom());
      calleeSet.addAll(callerSub);
    }
  }
  return calleeSet;
}
