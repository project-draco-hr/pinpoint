{
  if (sourceApplication == null) {
    throw new NullPointerException("sourceApplication must not be null");
  }
  if (destinationApplication == null) {
    throw new NullPointerException("destinationApplication must not be null");
  }
  List<Map<Long,Map<Short,Long>>> list;
  if (sourceApplication.getServiceType().isUser()) {
    logger.debug("Find 'client -> any' link statistics");
    Application userApplication=new Application(destinationApplication.getName(),sourceApplication.getServiceTypeCode());
    list=applicationMapStatisticsCalleeDao.selectCalleeStatistics(userApplication,destinationApplication,range);
  }
 else   if (destinationApplication.getServiceType().isWas()) {
    logger.debug("Find 'any -> was' link statistics");
    list=applicationMapStatisticsCallerDao.selectCallerStatistics(sourceApplication,destinationApplication,range);
  }
 else {
    logger.debug("Find 'was -> terminal' link statistics");
    list=applicationMapStatisticsCalleeDao.selectCalleeStatistics(sourceApplication,destinationApplication,range);
  }
  LoadFactor statistics=new LoadFactor(range);
  HistogramSchema histogramSchema=destinationApplication.getServiceType().getHistogramSchema();
  statistics.setDefaultHistogramSlotList(histogramSchema);
  logger.debug("Fetched statistics data={}",list);
  for (  Map<Long,Map<Short,Long>> map : list) {
    for (    Entry<Long,Map<Short,Long>> entry : map.entrySet()) {
      long timestamp=entry.getKey();
      Map<Short,Long> histogramMap=entry.getValue();
      for (      Entry<Short,Long> histogram : histogramMap.entrySet()) {
        if (histogram.getKey() == -1) {
          statistics.addSample(timestamp,histogram.getKey(),histogram.getValue(),true);
        }
 else {
          statistics.addSample(timestamp,histogram.getKey(),histogram.getValue(),false);
        }
      }
    }
  }
  return statistics;
}
