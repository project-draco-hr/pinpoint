{
  com.profiler.common.dto.thrift.SubSpan subSpan=new com.profiler.common.dto.thrift.SubSpan();
  long parentSpanStartTime=parentSpan.getStartTime();
  subSpan.setStartElapsed((int)(startTime - parentSpanStartTime));
  subSpan.setEndElapsed((int)(endTime - startTime));
  subSpan.setSequence(sequence);
  if (!child) {
    subSpan.setAgentId(Agent.getInstance().getAgentId());
    TraceID parentSpanTraceID=parentSpan.getTraceID();
    subSpan.setMostTraceId(parentSpanTraceID.getId().getMostSignificantBits());
    subSpan.setLeastTraceId(parentSpanTraceID.getId().getLeastSignificantBits());
    subSpan.setSpanId(parentSpanTraceID.getSpanId());
  }
  subSpan.setRpc(rpc);
  subSpan.setServiceName(serviceName);
  subSpan.setServiceType(serviceType.getCode());
  subSpan.setEndPoint(endPoint);
  subSpan.setErr(exception);
  List<com.profiler.common.dto.thrift.Annotation> annotationList=new ArrayList<com.profiler.common.dto.thrift.Annotation>(annotations.size());
  for (  HippoAnnotation a : annotations) {
    annotationList.add(a.toThrift());
  }
  subSpan.setAnnotations(annotationList);
  return subSpan;
}
