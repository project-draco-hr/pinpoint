{
  final long expectedSampledNewCount=19L;
  final long expectedSampledContinuationCount=29L;
  final long expectedUnsampledNewCount=0L;
  final long expectedUnsampledContinuationCount=9L;
  final long expectedTotalCount=expectedSampledNewCount + expectedSampledContinuationCount + expectedUnsampledNewCount+ expectedUnsampledContinuationCount;
  for (int i=0; i < expectedSampledNewCount; ++i) {
    this.idGenerator.nextTransactionId();
  }
  for (int i=0; i < expectedSampledContinuationCount; ++i) {
    this.idGenerator.nextContinuedTransactionId();
  }
  for (int i=0; i < expectedUnsampledNewCount; ++i) {
    this.idGenerator.nextDisabledId();
  }
  for (int i=0; i < expectedUnsampledContinuationCount; ++i) {
    this.idGenerator.nextContinuedDisabledId();
  }
  final long actualSampledNewCount=this.transactionCounter.getTransactionCount(SamplingType.SAMPLED_NEW);
  final long actualSampledContinuationCount=this.transactionCounter.getTransactionCount(SamplingType.SAMPLED_CONTINUATION);
  final long actualUnsampledNewCount=this.transactionCounter.getTransactionCount(SamplingType.UNSAMPLED_NEW);
  final long actualUnsampledContinuationCount=this.transactionCounter.getTransactionCount(SamplingType.UNSAMPLED_CONTINUATION);
  final long actualTotalCount=this.transactionCounter.getTotalTransactionCount();
  assertEquals(expectedSampledNewCount,actualSampledNewCount);
  assertEquals(expectedSampledContinuationCount,actualSampledContinuationCount);
  assertEquals(expectedUnsampledNewCount,actualUnsampledNewCount);
  assertEquals(expectedUnsampledContinuationCount,actualUnsampledContinuationCount);
  assertEquals(expectedTotalCount,actualTotalCount);
}
