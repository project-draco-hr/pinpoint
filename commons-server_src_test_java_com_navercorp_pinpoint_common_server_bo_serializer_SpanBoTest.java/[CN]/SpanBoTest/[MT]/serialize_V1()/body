{
  final SpanBo spanBo=new SpanBo();
  spanBo.setAgentId("agentId");
  spanBo.setApplicationId("applicationId");
  spanBo.setEndPoint("end");
  spanBo.setRpc("rpc");
  spanBo.setParentSpanId(5);
  spanBo.setAgentStartTime(1);
  spanBo.setTraceAgentStartTime(2);
  spanBo.setTraceTransactionSequence(3);
  spanBo.setElapsed(4);
  spanBo.setStartTime(5);
  spanBo.setServiceType(ServiceType.STAND_ALONE.getCode());
  spanBo.setLoggingTransactionInfo(LoggingInfo.INFO.getCode());
  spanBo.setExceptionInfo(1000,"Exception");
  byte[] bytes=spanSerializer.writeColumnValue(spanBo);
  byte[] deprecated=spanBo.writeValue();
  logger.debug("length:{}",bytes.length);
  Assert.assertArrayEquals(bytes,deprecated);
  SpanBo newSpanBo=new SpanBo();
  int i=newSpanBo.readValue(bytes,0);
  logger.debug("length:{}",i);
  Assert.assertEquals(bytes.length,i);
  Assert.assertEquals(newSpanBo.getAgentId(),spanBo.getAgentId());
  Assert.assertEquals(newSpanBo.getApplicationId(),spanBo.getApplicationId());
  Assert.assertEquals(newSpanBo.getAgentStartTime(),spanBo.getAgentStartTime());
  Assert.assertEquals(newSpanBo.getElapsed(),spanBo.getElapsed());
  Assert.assertEquals(newSpanBo.getEndPoint(),spanBo.getEndPoint());
  Assert.assertEquals(newSpanBo.getErrCode(),spanBo.getErrCode());
  Assert.assertEquals(newSpanBo.getFlag(),spanBo.getFlag());
  Assert.assertEquals(newSpanBo.getParentSpanId(),spanBo.getParentSpanId());
  Assert.assertEquals(newSpanBo.getServiceType(),spanBo.getServiceType());
  Assert.assertEquals(newSpanBo.getApplicationServiceType(),spanBo.getServiceType());
  Assert.assertEquals(newSpanBo.getVersion(),spanBo.getVersion());
  Assert.assertEquals(newSpanBo.getLoggingTransactionInfo(),spanBo.getLoggingTransactionInfo());
  Assert.assertEquals(newSpanBo.getExceptionId(),spanBo.getExceptionId());
  Assert.assertEquals(newSpanBo.getExceptionMessage(),spanBo.getExceptionMessage());
}
