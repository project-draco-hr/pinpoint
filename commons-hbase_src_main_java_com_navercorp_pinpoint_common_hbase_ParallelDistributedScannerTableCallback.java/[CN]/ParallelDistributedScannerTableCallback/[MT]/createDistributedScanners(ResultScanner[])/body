{
  int maxIndividualScans=(scanners.length + (this.numParallelThreads - 1)) / this.numParallelThreads;
  List<List<ResultScanner>> scannerDistributions=new ArrayList<>(this.numParallelThreads);
  for (int i=0; i < this.numParallelThreads; ++i) {
    scannerDistributions.add(new ArrayList<ResultScanner>(maxIndividualScans));
  }
  for (int i=0; i < scanners.length; ++i) {
    scannerDistributions.get(i % this.numParallelThreads).add(scanners[i]);
  }
  DistributedScanner[] distributedScanners=new DistributedScanner[this.numParallelThreads];
  for (int i=0; i < distributedScanners.length; ++i) {
    List<ResultScanner> scannerDistribution=scannerDistributions.get(i);
    ResultScanner[] scannersForDistributedScanner=scannerDistribution.toArray(new ResultScanner[scannerDistribution.size()]);
    distributedScanners[i]=new DistributedScanner(rowKeyDistributor,scannersForDistributedScanner);
  }
  return distributedScanners;
}
