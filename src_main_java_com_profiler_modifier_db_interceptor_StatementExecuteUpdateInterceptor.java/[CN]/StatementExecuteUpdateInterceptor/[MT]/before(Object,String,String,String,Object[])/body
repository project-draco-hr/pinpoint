{
  if (isDebug) {
    LoggingUtils.logBefore(logger,target,className,methodName,parameterDescription,args);
  }
  if (JDBCScope.isInternal()) {
    logger.fine("internal jdbc scope. skip trace");
    return;
  }
  TraceContext traceContext=DefaultTraceContext.getTraceContext();
  Trace trace=traceContext.currentTraceObject();
  if (trace == null) {
    return;
  }
  trace.traceBlockBegin();
  trace.markBeforeTime();
  try {
    DatabaseInfo databaseInfo=(DatabaseInfo)this.getUrl.invoke(target);
    trace.recordServiceType(databaseInfo.getType());
    trace.recordEndPoint(databaseInfo.getMultipleHost());
    trace.recordDestinationId(databaseInfo.getDatabaseId());
    trace.recordDestinationAddress(databaseInfo.getHost());
    trace.recordApi(descriptor);
    if (args.length > 0) {
      Object arg=args[0];
      if (arg instanceof String) {
        trace.recordSqlInfo((String)arg);
      }
    }
  }
 catch (  Exception e) {
    if (logger.isLoggable(Level.WARNING)) {
      logger.log(Level.WARNING,e.getMessage(),e);
    }
  }
}
