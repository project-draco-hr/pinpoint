{
  logger.debug("traceId:{}",traceIdParam);
  final TransactionId traceId=new TransactionId(traceIdParam);
  ModelAndView mv=new ModelAndView("transactionInfo");
  try {
    final SpanResult spanResult=this.spanService.selectSpan(traceId,focusTimestamp);
    List<SpanAlign> spanAligns=spanResult.getSpanAlign();
    if (spanAligns.isEmpty()) {
      mv.addObject("errorCode",9);
      mv.setViewName("error");
      return mv;
    }
    mv.addObject("spanList",spanAligns);
    mv.addObject("traceId",traceId);
    ApplicationMap map=filteredApplicationMapService.selectApplicationMap(traceId);
    mv.addObject("nodes",map.getNodes());
    mv.addObject("links",map.getLinks());
    RecordSet recordSet=this.transactionInfoService.createRecordSet(spanAligns,focusTimestamp);
    mv.addObject("recordSet",recordSet);
    mv.addObject("applicationName",recordSet.getApplicationName());
    mv.addObject("callstack",recordSet.getRecordList());
    mv.addObject("timeline",recordSet.getRecordList());
    mv.addObject("callstackStart",recordSet.getStartTime());
    mv.addObject("callstackEnd",recordSet.getEndTime());
    mv.addObject("completeState",spanResult.getCompleteTypeString());
  }
 catch (  Exception e) {
    logger.warn("BusinessTransactionController Error Cause" + e.getMessage(),e);
  }
  if (jsonResult) {
    if (viewVersion == 2) {
      mv.setViewName("transactionInfoJsonHash");
    }
 else {
      mv.setViewName("transactionInfoJson");
    }
  }
  return mv;
}
