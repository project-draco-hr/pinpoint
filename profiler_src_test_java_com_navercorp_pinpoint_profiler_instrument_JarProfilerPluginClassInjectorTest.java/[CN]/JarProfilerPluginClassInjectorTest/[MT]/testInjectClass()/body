{
  final URL sampleJar=getSampleJar(Logger.class);
  final ClassLoader contextTypeMatchClassLoader=createContextTypeMatchClassLoader(new URL[]{sampleJar});
  InstrumentClassPool pool=Mockito.mock(InstrumentClassPool.class);
  final Instrumentation instrumentation=Mockito.mock(Instrumentation.class);
  final ProfilerPlugin profilerPlugin=Mockito.mock(ProfilerPlugin.class);
  final String packageName=logger.getClass().getPackage().getName();
  final PluginPackageFilter filter=new PluginPackageFilter(Arrays.asList(packageName));
  PluginConfig pluginConfig=new PluginConfig(sampleJar,profilerPlugin,instrumentation,pool,sampleJar.getPath(),filter);
  PlainClassLoaderHandler injector=new PlainClassLoaderHandler(pluginConfig);
  final Class<?> loggerClass=injector.injectClass(contextTypeMatchClassLoader,logger.getClass().getName());
  logger.debug("ClassLoader{}",loggerClass.getClassLoader());
  Assert.assertEquals("check className",loggerClass.getName(),"org.slf4j.impl.Log4jLoggerAdapter");
  Assert.assertEquals("check ClassLoader",loggerClass.getClassLoader().getClass().getName(),CONTEXT_TYPE_MATCH_CLASS_LOADER);
}
