{
  String jsonParm="{" + "\"userId\" : \"" + USER_ID + "\","+ "\"name\" : \""+ USER_NAME+ "\","+ "\"department\" : \""+ USER_DEPARTMENT+ "\","+ "\"phoneNumber\" : \""+ USER_PHONENUMBER+ "\","+ "\"email\" : \""+ USER_EMAIL+ "\""+ "}";
  this.mockMvc.perform(post("/user.pinpoint").contentType(MediaType.APPLICATION_JSON).content(jsonParm)).andExpect(status().isOk()).andExpect(content().contentType("application/json;charset=UTF-8")).andExpect(jsonPath("$",hasKey("result"))).andExpect(jsonPath("$.result").value("SUCCESS")).andReturn();
  MvcResult mvcResult=this.mockMvc.perform(get("/user.pinpoint").contentType(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json;charset=UTF-8")).andExpect(jsonPath("$[0]",hasKey("userId"))).andExpect(jsonPath("$[0]",hasKey("name"))).andExpect(jsonPath("$[0]",hasKey("department"))).andExpect(jsonPath("$[0]",hasKey("phoneNumber"))).andExpect(jsonPath("$[0]",hasKey("email"))).andReturn();
  System.out.println(mvcResult.getResponse().getContentAsString());
  this.mockMvc.perform(delete("/user.pinpoint").contentType(MediaType.APPLICATION_JSON).content("{\"userId\" : \"" + USER_ID + "\"}")).andExpect(status().isOk()).andExpect(content().contentType("application/json;charset=UTF-8")).andExpect(jsonPath("$",hasKey("result"))).andExpect(jsonPath("$.result").value("SUCCESS")).andReturn();
}
