{
  StringBuilder sb=new StringBuilder("TStatWithSerialCollector(");
  boolean first=true;
  sb.append("agentId:");
  if (this.agentId == null) {
    sb.append("null");
  }
 else {
    sb.append(this.agentId);
  }
  first=false;
  if (!first)   sb.append(", ");
  sb.append("timestamp:");
  sb.append(this.timestamp);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmMemoryTotalUsed:");
  sb.append(this.jvmMemoryTotalUsed);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmMemoryTotalMax:");
  sb.append(this.jvmMemoryTotalMax);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmMemoryHeapUsed:");
  sb.append(this.jvmMemoryHeapUsed);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmMemoryHeapMax:");
  sb.append(this.jvmMemoryHeapMax);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmMemoryNonHeapUsed:");
  sb.append(this.jvmMemoryNonHeapUsed);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmMemoryNonHeapMax:");
  sb.append(this.jvmMemoryNonHeapMax);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmMemoryPoolsCodeCacheUsage:");
  sb.append(this.jvmMemoryPoolsCodeCacheUsage);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmMemoryPoolsEdenSpaceUsage:");
  sb.append(this.jvmMemoryPoolsEdenSpaceUsage);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmMemoryPoolsSurvivorSpaceUsage:");
  sb.append(this.jvmMemoryPoolsSurvivorSpaceUsage);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmMemoryPoolsPermGenUsage:");
  sb.append(this.jvmMemoryPoolsPermGenUsage);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmMemoryPoolsTenuredGenUsage:");
  sb.append(this.jvmMemoryPoolsTenuredGenUsage);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmGcCopyCount:");
  sb.append(this.jvmGcCopyCount);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmGcCopyTime:");
  sb.append(this.jvmGcCopyTime);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmGcMarkSweepCompactCount:");
  sb.append(this.jvmGcMarkSweepCompactCount);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("jvmGcMarkSweepCompactTime:");
  sb.append(this.jvmGcMarkSweepCompactTime);
  first=false;
  if (isSetMetadata()) {
    if (!first)     sb.append(", ");
    sb.append("metadata:");
    if (this.metadata == null) {
      sb.append("null");
    }
 else {
      sb.append(this.metadata);
    }
    first=false;
  }
  sb.append(")");
  return sb.toString();
}
