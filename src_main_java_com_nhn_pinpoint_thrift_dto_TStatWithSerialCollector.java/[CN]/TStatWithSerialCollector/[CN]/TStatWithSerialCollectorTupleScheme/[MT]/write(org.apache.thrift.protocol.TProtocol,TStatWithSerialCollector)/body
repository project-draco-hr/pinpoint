{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetAgentId()) {
    optionals.set(0);
  }
  if (struct.isSetTimestamp()) {
    optionals.set(1);
  }
  if (struct.isSetJvmMemoryTotalUsed()) {
    optionals.set(2);
  }
  if (struct.isSetJvmMemoryTotalMax()) {
    optionals.set(3);
  }
  if (struct.isSetJvmMemoryHeapUsed()) {
    optionals.set(4);
  }
  if (struct.isSetJvmMemoryHeapMax()) {
    optionals.set(5);
  }
  if (struct.isSetJvmMemoryNonHeapUsed()) {
    optionals.set(6);
  }
  if (struct.isSetJvmMemoryNonHeapMax()) {
    optionals.set(7);
  }
  if (struct.isSetJvmMemoryPoolsCodeCacheUsage()) {
    optionals.set(8);
  }
  if (struct.isSetJvmMemoryPoolsEdenSpaceUsage()) {
    optionals.set(9);
  }
  if (struct.isSetJvmMemoryPoolsSurvivorSpaceUsage()) {
    optionals.set(10);
  }
  if (struct.isSetJvmMemoryPoolsPermGenUsage()) {
    optionals.set(11);
  }
  if (struct.isSetJvmMemoryPoolsTenuredGenUsage()) {
    optionals.set(12);
  }
  if (struct.isSetJvmGcCopyCount()) {
    optionals.set(13);
  }
  if (struct.isSetJvmGcCopyTime()) {
    optionals.set(14);
  }
  if (struct.isSetJvmGcMarkSweepCompactCount()) {
    optionals.set(15);
  }
  if (struct.isSetJvmGcMarkSweepCompactTime()) {
    optionals.set(16);
  }
  if (struct.isSetMetadata()) {
    optionals.set(17);
  }
  oprot.writeBitSet(optionals,18);
  if (struct.isSetAgentId()) {
    oprot.writeString(struct.agentId);
  }
  if (struct.isSetTimestamp()) {
    oprot.writeI64(struct.timestamp);
  }
  if (struct.isSetJvmMemoryTotalUsed()) {
    oprot.writeI64(struct.jvmMemoryTotalUsed);
  }
  if (struct.isSetJvmMemoryTotalMax()) {
    oprot.writeI64(struct.jvmMemoryTotalMax);
  }
  if (struct.isSetJvmMemoryHeapUsed()) {
    oprot.writeI64(struct.jvmMemoryHeapUsed);
  }
  if (struct.isSetJvmMemoryHeapMax()) {
    oprot.writeI64(struct.jvmMemoryHeapMax);
  }
  if (struct.isSetJvmMemoryNonHeapUsed()) {
    oprot.writeI64(struct.jvmMemoryNonHeapUsed);
  }
  if (struct.isSetJvmMemoryNonHeapMax()) {
    oprot.writeI64(struct.jvmMemoryNonHeapMax);
  }
  if (struct.isSetJvmMemoryPoolsCodeCacheUsage()) {
    oprot.writeI64(struct.jvmMemoryPoolsCodeCacheUsage);
  }
  if (struct.isSetJvmMemoryPoolsEdenSpaceUsage()) {
    oprot.writeI64(struct.jvmMemoryPoolsEdenSpaceUsage);
  }
  if (struct.isSetJvmMemoryPoolsSurvivorSpaceUsage()) {
    oprot.writeI64(struct.jvmMemoryPoolsSurvivorSpaceUsage);
  }
  if (struct.isSetJvmMemoryPoolsPermGenUsage()) {
    oprot.writeI64(struct.jvmMemoryPoolsPermGenUsage);
  }
  if (struct.isSetJvmMemoryPoolsTenuredGenUsage()) {
    oprot.writeI64(struct.jvmMemoryPoolsTenuredGenUsage);
  }
  if (struct.isSetJvmGcCopyCount()) {
    oprot.writeI64(struct.jvmGcCopyCount);
  }
  if (struct.isSetJvmGcCopyTime()) {
    oprot.writeI64(struct.jvmGcCopyTime);
  }
  if (struct.isSetJvmGcMarkSweepCompactCount()) {
    oprot.writeI64(struct.jvmGcMarkSweepCompactCount);
  }
  if (struct.isSetJvmGcMarkSweepCompactTime()) {
    oprot.writeI64(struct.jvmGcMarkSweepCompactTime);
  }
  if (struct.isSetMetadata()) {
    oprot.writeString(struct.metadata);
  }
}
