{
  PinpointClassFileTransformer transformer=new PinpointClassFileTransformer(){
    @Override public byte[] transform(    PinpointInstrument instrumentContext,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      InstrumentClass target=instrumentContext.getInstrumentClass(loader,className,classfileBuffer);
      target.addField("com.navercorp.pinpoint.bootstrap.plugin.jdbc.DatabaseInfoAccessor");
      InterceptorGroup group=instrumentContext.getInterceptorGroup(GROUP_JTDS);
      target.addInterceptor("com.navercorp.pinpoint.bootstrap.plugin.jdbc.interceptor.ConnectionCloseInterceptor",group);
      target.addInterceptor("com.navercorp.pinpoint.bootstrap.plugin.jdbc.interceptor.StatementCreateInterceptor",group);
      target.addInterceptor("com.navercorp.pinpoint.bootstrap.plugin.jdbc.interceptor.PreparedStatementCreateInterceptor",group);
      if (config.isProfileSetAutoCommit()) {
        target.addInterceptor("com.navercorp.pinpoint.bootstrap.plugin.jdbc.interceptor.TransactionSetAutoCommitInterceptor",group);
      }
      if (config.isProfileCommit()) {
        target.addInterceptor("com.navercorp.pinpoint.bootstrap.plugin.jdbc.interceptor.TransactionCommitInterceptor",group);
      }
      if (config.isProfileRollback()) {
        target.addInterceptor("com.navercorp.pinpoint.bootstrap.plugin.jdbc.interceptor.TransactionRollbackInterceptor",group);
      }
      return target.toBytecode();
    }
  }
;
  setupContext.addClassFileTransformer("net.sourceforge.jtds.jdbc.ConnectionJDBC2",transformer);
  setupContext.addClassFileTransformer("net.sourceforge.jtds.jdbc.JtdsConnection",transformer);
}
