{
  try {
    RequestThriftDTO tempDto=responseDtoList.get(0);
    long tempTime=tempDto.getDataTime();
    long timestamp=tempTime - tempTime % 1000;
    String time=TomcatProfilerReceiverConstant.DATE_FORMAT_YMD_HM.format(new Date(tempTime));
    ByteBuffer row=ByteBuffer.wrap(time.getBytes());
    int listSize=requestDtoList.size();
    List<BatchMutation> rowBatches=new ArrayList<BatchMutation>(listSize);
    for (int loop=0; loop < listSize; loop++) {
      List<Mutation> mutations=new ArrayList<Mutation>();
      RequestThriftDTO requestDto=requestDtoList.get(loop);
      RequestThriftDTO responseDto=responseDtoList.get(loop);
      long requestHashCode=requestDto.getRequestHashCode();
      long requestTime=requestDto.getDataTime();
      long responseTime=responseDto.getDataTime();
      long elapsedTime=responseTime - requestTime;
      String url=requestDto.getRequestURL();
      String clientIP=requestDto.getClientIP();
      String requestParams=requestDto.getExtraData1();
      mutations.add(getMutation(HBASE_REQUEST_COLUMN_REQUEST_TIME + requestHashCode,(requestTime + "").getBytes()));
      mutations.add(getMutation(HBASE_REQUEST_COLUMN_RESPONSE_TIME + requestHashCode,(responseTime + "").getBytes()));
      mutations.add(getMutation(HBASE_REQUEST_COLUMN_ELAPSED_TIME + requestHashCode,(elapsedTime + "").getBytes()));
      mutations.add(getMutation(HBASE_REQUEST_COLUMN_REQUEST_URL + requestHashCode,(url).getBytes()));
      mutations.add(getMutation(HBASE_REQUEST_COLUMN_CLIENT_IP + requestHashCode,(clientIP).getBytes()));
      if (requestParams != null) {
        mutations.add(getMutation(HBASE_REQUEST_COLUMN_REQUEST_PARAMS + requestHashCode,(requestParams).getBytes()));
      }
 else {
        mutations.add(getMutation(HBASE_REQUEST_COLUMN_REQUEST_PARAMS + requestHashCode,"".getBytes()));
      }
      byte[] tempByteData=null;
      if ((tempByteData=responseDataByteArrayList.get(loop)) != null) {
        mutations.add(getMutation(HBASE_REQUEST_COLUMN_REQUEST_DATA + requestHashCode,tempByteData));
      }
 else {
        tempByteData=new String().getBytes();
        mutations.add(getMutation(HBASE_REQUEST_COLUMN_REQUEST_DATA + requestHashCode,tempByteData));
      }
      BatchMutation tempBatch=new BatchMutation(row,mutations);
      rowBatches.add(tempBatch);
    }
    client.mutateRowsTs(tableNameBuffer,rowBatches,timestamp);
  }
 catch (  IOError ioe) {
    logger.error("PutRequestTransactionData " + ioe.getMessage());
  }
catch (  Exception e) {
    e.printStackTrace();
  }
}
