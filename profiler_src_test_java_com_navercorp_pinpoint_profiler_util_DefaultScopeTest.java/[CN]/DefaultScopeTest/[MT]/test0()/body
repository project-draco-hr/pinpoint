{
  Scope scope=new DefaultScope("test");
  assertFalse(scope.isIn());
  assertFalse(scope.tryEnter(ExecutionPoint.INTERNAL));
  assertFalse(scope.isIn());
  assertTrue(scope.tryEnter(ExecutionPoint.BOUNDARY));
  assertTrue(scope.isIn());
  scope.entered(ExecutionPoint.BOUNDARY);
  assertTrue(scope.isIn());
  assertTrue(scope.tryEnter(ExecutionPoint.INTERNAL));
  assertTrue(scope.isIn());
  scope.entered(ExecutionPoint.INTERNAL);
  assertTrue(scope.isIn());
  assertFalse(scope.tryEnter(ExecutionPoint.BOUNDARY));
  assertTrue(scope.isIn());
  assertFalse(scope.tryLeave(ExecutionPoint.BOUNDARY));
  assertTrue(scope.isIn());
  assertTrue(scope.tryLeave(ExecutionPoint.INTERNAL));
  scope.leaved(ExecutionPoint.INTERNAL);
  assertTrue(scope.isIn());
  assertTrue(scope.tryLeave(ExecutionPoint.BOUNDARY));
  assertTrue(scope.isIn());
  scope.leaved(ExecutionPoint.BOUNDARY);
  assertFalse(scope.isIn());
  assertFalse(scope.tryLeave(ExecutionPoint.INTERNAL));
  assertFalse(scope.isIn());
}
