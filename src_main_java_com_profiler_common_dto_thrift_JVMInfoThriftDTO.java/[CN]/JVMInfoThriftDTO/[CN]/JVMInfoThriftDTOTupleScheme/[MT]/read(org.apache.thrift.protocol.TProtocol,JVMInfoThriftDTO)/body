{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(12);
  if (incoming.get(0)) {
    struct.agentId=iprot.readString();
    struct.setAgentIdIsSet(true);
  }
  if (incoming.get(1)) {
    struct.dataTime=iprot.readI64();
    struct.setDataTimeIsSet(true);
  }
  if (incoming.get(2)) {
    struct.activeThreadCount=iprot.readI32();
    struct.setActiveThreadCountIsSet(true);
  }
  if (incoming.get(3)) {
    struct.gc1Count=iprot.readI64();
    struct.setGc1CountIsSet(true);
  }
  if (incoming.get(4)) {
    struct.gc1Time=iprot.readI64();
    struct.setGc1TimeIsSet(true);
  }
  if (incoming.get(5)) {
    struct.gc2Count=iprot.readI64();
    struct.setGc2CountIsSet(true);
  }
  if (incoming.get(6)) {
    struct.gc2Time=iprot.readI64();
    struct.setGc2TimeIsSet(true);
  }
  if (incoming.get(7)) {
    struct.heapUsed=iprot.readI64();
    struct.setHeapUsedIsSet(true);
  }
  if (incoming.get(8)) {
    struct.heapCommitted=iprot.readI64();
    struct.setHeapCommittedIsSet(true);
  }
  if (incoming.get(9)) {
    struct.nonHeapUsed=iprot.readI64();
    struct.setNonHeapUsedIsSet(true);
  }
  if (incoming.get(10)) {
    struct.nonHeapCommitted=iprot.readI64();
    struct.setNonHeapCommittedIsSet(true);
  }
  if (incoming.get(11)) {
    struct.processCPUTime=iprot.readDouble();
    struct.setProcessCPUTimeIsSet(true);
  }
}
