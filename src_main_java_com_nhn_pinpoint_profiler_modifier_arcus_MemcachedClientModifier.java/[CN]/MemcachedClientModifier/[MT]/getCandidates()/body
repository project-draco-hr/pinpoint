{
  Map<String,String[]> candidates=new HashMap<String,String[]>();
  try {
    InstrumentClass aClass=byteCodeInstrumentor.getClass(getTargetClass().replace("/","."));
    CtMethod[] declaredMethods=aClass.getDeclaredMethods();
    for (    CtMethod m : declaredMethods) {
      if (m.getModifiers() != Modifier.PUBLIC || m.getName().startsWith("_")) {
        continue;
      }
      String methodName=m.getName();
      CtClass[] paramTypes=m.getParameterTypes();
      List<String> params=new ArrayList<String>(5);
      for (      CtClass c : paramTypes) {
        params.add(c.getName());
      }
      String[] paramArray=new String[params.size()];
      candidates.put(methodName,params.toArray(paramArray));
    }
  }
 catch (  Exception e) {
    if (logger.isWarnEnabled()) {
      logger.warn(e.getMessage(),e);
    }
  }
  return candidates;
}
