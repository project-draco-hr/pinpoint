{
  Class<? extends Interceptor> interceptorType=pluginContext.injectClass(classLoader,interceptorClassName);
  if (group == null) {
    Group interceptorGroup=interceptorType.getAnnotation(Group.class);
    if (interceptorGroup != null) {
      String groupName=interceptorGroup.value();
      group=pluginContext.getInterceptorGroup(groupName);
      policy=interceptorGroup.executionPolicy();
    }
  }
  AutoBindingObjectFactory factory=new AutoBindingObjectFactory(pluginContext,classLoader);
  ObjectFactory objectFactory=ObjectFactory.byConstructor(interceptorClassName,providedArguments);
  InterceptorArgumentProvider interceptorArgumentProvider=new InterceptorArgumentProvider(pluginContext.getTraceContext(),group,target,targetMethod);
  Interceptor interceptor=(Interceptor)factory.createInstance(objectFactory,interceptorArgumentProvider);
  if (group != null) {
    interceptor=wrapByGroup(interceptor,group,policy == null ? ExecutionPolicy.BOUNDARY : policy);
  }
  return interceptor;
}
