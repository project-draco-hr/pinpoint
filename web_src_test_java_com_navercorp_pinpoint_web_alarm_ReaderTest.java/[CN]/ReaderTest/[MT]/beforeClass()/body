{
  applicationIndexDao=new ApplicationIndexDao(){
    @Override public List<Application> selectAllApplicationNames(){
      List<Application> apps=new LinkedList<Application>();
      for (int i=0; i < 7; i++) {
        apps.add(new Application(APP_NAME + i,ServiceType.TOMCAT));
      }
      return apps;
    }
    @Override public List<String> selectAgentIds(    String applicationName){
      return null;
    }
    @Override public void deleteApplicationName(    String applicationName){
    }
  }
;
  alarmResourceDao=new MySqlAlarmResourceDao(){
    private Map<String,Rule> ruleMap;
{
      ruleMap=new HashMap<String,Rule>();
      for (int i=0; i <= 6; i++) {
        ruleMap.put(APP_NAME + i,new Rule(APP_NAME + i,CheckerCategory.SLOW_COUNT.getName(),76,"testGroup",false,false));
      }
    }
    @Override public java.util.List<Rule> selectAppRule(    String applicationName){
      List<Rule> rules=new LinkedList<Rule>();
      rules.add(ruleMap.get(applicationName));
      return rules;
    }
  }
;
  dataCollectorFactory=new DataCollectorFactory(){
    @Override public DataCollector createDataCollector(    CheckerCategory checker,    Application application,    long timeSlotEndTime,    long slotInterval){
      return new ResponseTimeDataCollector(null,null,0,0);
    }
  }
;
}
