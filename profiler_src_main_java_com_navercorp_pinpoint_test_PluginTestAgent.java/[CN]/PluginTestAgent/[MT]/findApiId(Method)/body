{
  Class<?> clazz=method.getDeclaringClass();
  InstrumentClass ic;
  try {
    ic=getByteCodeInstrumentor().getClass(clazz.getClassLoader(),clazz.getName(),null);
  }
 catch (  InstrumentException e) {
    throw new RuntimeException("Cannot get instruemntClass " + clazz.getName(),e);
  }
  Class<?>[] parameterTypes=method.getParameterTypes();
  String[] parameterTypeNames=new String[parameterTypes.length];
  for (int i=0; i < parameterTypes.length; i++) {
    parameterTypeNames[i]=parameterTypes[i].getName();
  }
  MethodInfo methodInfo=ic.getDeclaredMethod(method.getName(),parameterTypeNames);
  String desc=methodInfo.getDescriptor().getFullName();
  int apiId;
  try {
    apiId=((TestTcpDataSender)getTcpDataSender()).getApiId(desc);
  }
 catch (  NoSuchElementException e) {
    throw new AssertionError("Cannot find apiId of [" + desc + "]");
  }
  return apiId;
}
