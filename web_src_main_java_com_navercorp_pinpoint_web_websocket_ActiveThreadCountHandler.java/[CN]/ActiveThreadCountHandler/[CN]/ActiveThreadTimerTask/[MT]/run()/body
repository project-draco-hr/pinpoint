{
  try {
    logger.info("ActiveThreadTimerTask started.");
    Collection<PinpointWebSocketResponseAggregator> values=aggregatorRepository.values();
    for (    final PinpointWebSocketResponseAggregator aggregator : values) {
      try {
        aggregator.flush(webSocketflushExecutor);
      }
 catch (      Exception e) {
        logger.warn("failed while flushing ActiveThreadCount to aggregator. applicationName:{}, error:{}",aggregator.getApplicationName(),e.getMessage(),e);
      }
    }
  }
  finally {
    long waitTimeMillis=getWaitTimeMillis();
    if (flushTimer != null && onTimerTask.get()) {
      flushTimer.schedule(new ActiveThreadTimerTask(startTimeMillis,delay,times),waitTimeMillis);
    }
  }
}
