{
  logger.info("{} handshakeStart method started. channel:{}",simpleClassNameAndHashCodeString(),channel);
  if (channel == null) {
    logger.warn("{} handshakeStart method failed. caused:channel may not be null.",simpleClassNameAndHashCodeString());
    return;
  }
  if (!channel.isConnected()) {
    logger.warn("{} handshakeStart method failed. caused:channel is not connected.",simpleClassNameAndHashCodeString());
    return;
  }
  if (!state.compareAndSet(STATE_INIT,STATE_STARTED)) {
    logger.warn("{} handshakeStart method failed. caused:unexpected state.",simpleClassNameAndHashCodeString());
    return;
  }
  HandshakeJob handshakeJob=null;
  try {
    handshakeJob=createHandshakeJob(channel,handshakeData);
  }
 catch (  Exception e) {
    logger.warn("{} create HandshakeJob failed. caused:{}",simpleClassNameAndHashCodeString(),e.getMessage(),e);
  }
  if (handshakeJob == null) {
    logger.warn("{} handshakeStart method failed. caused:handshakeJob may not be null.",simpleClassNameAndHashCodeString());
    handshakeAbort();
    return;
  }
  handshake(handshakeJob);
  reserveHandshake(handshakeJob);
  logger.info("{} handshakeStart method completed. channel:{}, data:{}",simpleClassNameAndHashCodeString(),channel,handshakeData);
}
