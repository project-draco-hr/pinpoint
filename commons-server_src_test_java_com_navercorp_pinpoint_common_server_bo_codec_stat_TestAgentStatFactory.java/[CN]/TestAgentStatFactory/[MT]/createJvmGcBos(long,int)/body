{
  List<JvmGcBo> jvmGcBos=new ArrayList<>(numValues);
  List<Long> timestamps=createTimestamps(initialTimestamp,numValues);
  List<Long> heapUseds=TestAgentStatDataPointFactory.LONG.createFluctuatingValues(256 * 1024 * 1024L,512 * 1024 * 1024L,10 * 1024 * 1024L,30 * 1024 * 1024L,numValues);
  List<Long> heapMaxes=TestAgentStatDataPointFactory.LONG.createConstantValues(2 * 1024 * 1024* 1024L,2 * 1024 * 1024* 1024L,numValues);
  List<Long> nonHeapUseds=TestAgentStatDataPointFactory.LONG.createIncreasingValues(16 * 1024 * 1024L,64 * 1024 * 1024L,1 * 1024 * 1024L,3 * 1024 * 1024L,numValues);
  List<Long> nonHeapMaxes=TestAgentStatDataPointFactory.LONG.createConstantValues(128 * 1024 * 1024L,128 * 1024 * 1024L,numValues);
  List<Long> gcOldCounts=TestAgentStatDataPointFactory.LONG.createIncreasingValues(0L,1000L,0L,10L,numValues);
  List<Long> gcOldTimes=TestAgentStatDataPointFactory.LONG.createIncreasingValues(0L,100000000L,100L,5000L,numValues);
  for (int i=0; i < numValues; ++i) {
    JvmGcBo jvmGcBo=new JvmGcBo();
    jvmGcBo.setGcType(JvmGcType.CMS);
    jvmGcBo.setTimestamp(timestamps.get(i));
    jvmGcBo.setHeapUsed(heapUseds.get(i));
    jvmGcBo.setHeapMax(heapMaxes.get(i));
    jvmGcBo.setNonHeapUsed(nonHeapUseds.get(i));
    jvmGcBo.setNonHeapMax(nonHeapMaxes.get(i));
    jvmGcBo.setGcOldCount(gcOldCounts.get(i));
    jvmGcBo.setGcOldTime(gcOldTimes.get(i));
    jvmGcBos.add(jvmGcBo);
  }
  return jvmGcBos;
}
