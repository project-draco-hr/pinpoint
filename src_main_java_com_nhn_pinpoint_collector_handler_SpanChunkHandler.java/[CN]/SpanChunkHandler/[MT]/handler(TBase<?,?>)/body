{
  if (!(tbase instanceof TSpanChunk)) {
    throw new IllegalArgumentException("unexpected tbase:" + tbase + " expected:"+ this.getClass().getName());
  }
  try {
    TSpanChunk spanChunk=(TSpanChunk)tbase;
    if (logger.isDebugEnabled()) {
      logger.debug("Received SpanChunk={}",spanChunk);
    }
    traceDao.insertSpanChunk(spanChunk);
    List<TSpanEvent> spanEventList=spanChunk.getSpanEventList();
    if (spanEventList != null) {
      logger.debug("SpanChunk Size:{}",spanEventList.size());
      for (      TSpanEvent spanEvent : spanEventList) {
        ServiceType serviceType=ServiceType.findServiceType(spanEvent.getServiceType());
        if (!serviceType.isRecordStatistics()) {
          continue;
        }
        int elapsed=spanEvent.getEndElapsed();
        boolean hasException=SpanEventUtils.hasException(spanEvent);
        statisticsHandler.updateApplication(spanEvent.getDestinationId(),serviceType.getCode(),spanEvent.getEndPoint(),elapsed,hasException);
        statisticsHandler.updateCallee(spanEvent.getDestinationId(),serviceType.getCode(),spanChunk.getApplicationName(),spanChunk.getServiceType(),spanEvent.getEndPoint(),elapsed,hasException);
        statisticsHandler.updateCaller(spanChunk.getApplicationName(),spanChunk.getServiceType(),spanEvent.getDestinationId(),spanEvent.getServiceType(),spanChunk.getEndPoint(),elapsed,hasException);
      }
    }
  }
 catch (  Exception e) {
    logger.warn("SpanChunk handle error Caused:{}",e.getMessage(),e);
  }
}
