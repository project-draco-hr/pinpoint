{
  final JvmVersion jvmVersion=JvmUtils.getVersion();
  if (jvmVersion == JvmVersion.JAVA_6) {
    return new PinpointThreadLocalRandomFactory();
  }
 else   if (jvmVersion.onOrAfter(JvmVersion.JAVA_7)) {
    try {
      final Class<? extends ThreadLocalRandomFactory> threadLocalRandomFactoryClass=(Class<? extends ThreadLocalRandomFactory>)Class.forName(DEFAULT_THREAD_LOCAL_RANDOM_FACTORY,true,null);
      return threadLocalRandomFactoryClass.newInstance();
    }
 catch (    ClassNotFoundException e) {
      logError(e);
    }
catch (    InstantiationException e) {
      logError(e);
    }
catch (    IllegalAccessException e) {
      logError(e);
    }
    return new PinpointThreadLocalRandomFactory();
  }
 else {
    throw new RuntimeException("Unsupported jvm version " + jvmVersion);
  }
}
