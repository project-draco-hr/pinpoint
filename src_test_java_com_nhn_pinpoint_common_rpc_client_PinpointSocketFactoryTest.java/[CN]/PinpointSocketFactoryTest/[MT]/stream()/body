{
  PinpointServerSocket ss=new PinpointServerSocket();
  TestSeverMessageListener testSeverMessageListener=new TestSeverMessageListener();
  ss.setMessageListener(testSeverMessageListener);
  ss.bind("localhost",10234);
  PinpointSocketFactory pinpointSocketFactory=new PinpointSocketFactory();
  try {
    PinpointSocket socket=pinpointSocketFactory.connect("localhost",10234);
    StreamChannel streamChannel=socket.createStreamChannel();
    byte[] openBytes=TestByteUtils.createRandomByte(30);
    RecordedStreamChannelMessageListener clientListener=new RecordedStreamChannelMessageListener(4);
    streamChannel.setStreamChannelMessageListener(clientListener);
    Future<StreamCreateResponse> open=streamChannel.open(openBytes);
    open.await();
    StreamCreateResponse response=open.getResult();
    Assert.assertTrue(response.isSuccess());
    Assert.assertArrayEquals(response.getMessage(),openBytes);
    clientListener.getLatch().await();
    List<byte[]> receivedMessage=clientListener.getReceivedMessage();
    List<byte[]> sendMessage=testSeverMessageListener.getSendMessage();
    Assert.assertEquals(receivedMessage.size(),sendMessage.size());
    for (int i=0; i < receivedMessage.size(); i++) {
      Assert.assertArrayEquals(receivedMessage.get(i),sendMessage.get(i));
    }
    socket.close();
  }
  finally {
    pinpointSocketFactory.release();
    ss.close();
  }
}
