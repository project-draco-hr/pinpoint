{
  final HeaderTBaseDeserializer deserializer=new HeaderTBaseDeserializer();
  byte[] bytes=requestPacket.getPayload();
  SocketAddress remoteAddress=socketChannel.getRemoteAddress();
  try {
    TBase<?,?> tBase=deserializer.deserialize(bytes);
    TBase result=dispatchHandler.dispatch(tBase,bytes,Header.HEADER_SIZE,bytes.length);
    if (result != null) {
      HeaderTBaseSerializer serializer=new HeaderTBaseSerializer();
      byte[] resultBytes=serializer.serialize(result);
      socketChannel.sendResponseMessage(requestPacket,resultBytes);
    }
  }
 catch (  TException e) {
    if (logger.isWarnEnabled()) {
      logger.warn("packet serialize error. SendSocketAddress:{} Cause:{}",remoteAddress,e.getMessage(),e);
    }
    if (logger.isDebugEnabled()) {
      logger.debug("packet dump hex:{}",PacketUtils.dumpByteArray(bytes));
    }
  }
catch (  Exception e) {
    if (logger.isWarnEnabled()) {
      logger.warn("Unexpected error. SendSocketAddress:{} Cause:{}",remoteAddress,e.getMessage(),e);
    }
    if (logger.isDebugEnabled()) {
      logger.debug("packet dump hex:{}",PacketUtils.dumpByteArray(bytes));
    }
  }
}
