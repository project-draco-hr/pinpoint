{
  setL4TcpChannel(pinpointServerSocket);
  this.pinpointServerSocket.setMessageListener(new ServerMessageListener(){
    @Override public void handleSend(    SendPacket sendPacket,    SocketChannel channel){
      receive(sendPacket,channel);
    }
    @Override public void handleRequest(    RequestPacket requestPacket,    SocketChannel channel){
      requestResponse(requestPacket,channel);
    }
    @Override public void handleStream(    StreamPacket streamPacket,    ServerStreamChannel streamChannel){
      logger.warn("unsupported streamPacket received {}",streamPacket);
    }
    @Override public int handleEnableWorker(    Map properties){
      if (properties == null) {
        return ControlEnableWorkerConfirmPacket.ILLEGAL_PROTOCOL;
      }
      boolean hasAllType=AgentPropertiesType.hasAllType(properties);
      if (!hasAllType) {
        return ControlEnableWorkerConfirmPacket.INVALID_PROPERTIES;
      }
      return ControlEnableWorkerConfirmPacket.SUCCESS;
    }
  }
);
  this.pinpointServerSocket.bind(bindAddress,port);
}
