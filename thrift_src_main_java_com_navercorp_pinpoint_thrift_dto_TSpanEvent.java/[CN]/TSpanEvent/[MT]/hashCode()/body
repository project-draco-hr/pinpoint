{
  List<Object> list=new ArrayList<Object>();
  boolean present_spanId=true && (isSetSpanId());
  list.add(present_spanId);
  if (present_spanId)   list.add(spanId);
  boolean present_sequence=true;
  list.add(present_sequence);
  if (present_sequence)   list.add(sequence);
  boolean present_startElapsed=true;
  list.add(present_startElapsed);
  if (present_startElapsed)   list.add(startElapsed);
  boolean present_endElapsed=true && (isSetEndElapsed());
  list.add(present_endElapsed);
  if (present_endElapsed)   list.add(endElapsed);
  boolean present_rpc=true && (isSetRpc());
  list.add(present_rpc);
  if (present_rpc)   list.add(rpc);
  boolean present_serviceType=true;
  list.add(present_serviceType);
  if (present_serviceType)   list.add(serviceType);
  boolean present_endPoint=true && (isSetEndPoint());
  list.add(present_endPoint);
  if (present_endPoint)   list.add(endPoint);
  boolean present_annotations=true && (isSetAnnotations());
  list.add(present_annotations);
  if (present_annotations)   list.add(annotations);
  boolean present_depth=true && (isSetDepth());
  list.add(present_depth);
  if (present_depth)   list.add(depth);
  boolean present_nextSpanId=true && (isSetNextSpanId());
  list.add(present_nextSpanId);
  if (present_nextSpanId)   list.add(nextSpanId);
  boolean present_destinationId=true && (isSetDestinationId());
  list.add(present_destinationId);
  if (present_destinationId)   list.add(destinationId);
  boolean present_apiId=true && (isSetApiId());
  list.add(present_apiId);
  if (present_apiId)   list.add(apiId);
  boolean present_exceptionInfo=true && (isSetExceptionInfo());
  list.add(present_exceptionInfo);
  if (present_exceptionInfo)   list.add(exceptionInfo);
  boolean present_asyncId=true && (isSetAsyncId());
  list.add(present_asyncId);
  if (present_asyncId)   list.add(asyncId);
  boolean present_nextAsyncId=true && (isSetNextAsyncId());
  list.add(present_nextAsyncId);
  if (present_nextAsyncId)   list.add(nextAsyncId);
  boolean present_asyncSequence=true && (isSetAsyncSequence());
  list.add(present_asyncSequence);
  if (present_asyncSequence)   list.add(asyncSequence);
  return list.hashCode();
}
