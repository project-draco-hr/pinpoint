{
  context.addClassFileTransformer(clazzName,new PinpointClassFileTransformer(){
    @Override public byte[] transform(    Instrumentor instrumentContext,    ClassLoader classLoader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {
      InstrumentClass target=instrumentContext.getInstrumentClass(classLoader,className,classfileBuffer);
      InterceptorGroup group=instrumentContext.getInterceptorGroup(GROUP);
      for (      InstrumentMethod method : target.getDeclaredMethods(MethodFilters.name("fromObject"))) {
        addInterceptor(method,PARSING_INTERCEPTOR,group);
      }
      for (      InstrumentMethod method : target.getDeclaredMethods(MethodFilters.name("toBean"))) {
        addInterceptor(method,BASIC_INTERCEPTOR,group,SERVICE_TYPE);
      }
      for (      InstrumentMethod method : target.getDeclaredMethods(MethodFilters.name("toString"))) {
        addInterceptor(method,TO_STRING_INTERCEPTOR,group);
      }
      return target.toBytecode();
    }
  }
);
}
