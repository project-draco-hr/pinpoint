{
  if (applicationName == null) {
    throw new NullPointerException("applicationName must not be null");
  }
  if (area == null) {
    throw new NullPointerException("range must not be null");
  }
  if (limit < 0) {
    throw new IllegalArgumentException("negative limit:" + limit);
  }
  logger.debug("scanTraceScatter");
  Scan scan=createScan(applicationName,area.getTimeRange());
  ResponseTimeRange responseTimeRange=area.getResponseTimeRange();
  byte[] responseFrom=Bytes.toBytes(responseTimeRange.getFrom());
  byte[] responseTo=Bytes.toBytes(responseTimeRange.getTo());
  FilterList filterList=new FilterList(Operator.MUST_PASS_ALL);
  filterList.addFilter(new QualifierFilter(CompareOp.GREATER_OR_EQUAL,new BinaryPrefixComparator(responseFrom)));
  filterList.addFilter(new QualifierFilter(CompareOp.LESS_OR_EQUAL,new BinaryPrefixComparator(responseTo)));
  if (offsetTransactionId != null) {
    final Buffer buffer=new AutomaticBuffer(32);
    buffer.put(offsetTransactionElapsed);
    buffer.putPrefixedString(offsetTransactionId.getAgentId());
    buffer.putSVar(offsetTransactionId.getAgentStartTime());
    buffer.putVar(offsetTransactionId.getTransactionSequence());
    byte[] qualifierOffset=buffer.getBuffer();
    filterList.addFilter(new QualifierFilter(CompareOp.GREATER,new BinaryPrefixComparator(qualifierOffset)));
  }
  scan.setFilter(filterList);
  LastRowAccessor lastRowAccessor=new LastRowAccessor();
  List<List<Dot>> dotListList=hbaseOperations2.find(HBaseTables.APPLICATION_TRACE_INDEX,scan,traceIdRowKeyDistributor,limit,traceIndexScatterMapper,lastRowAccessor);
  List<Dot> result=new ArrayList<Dot>();
  for (  List<Dot> dotList : dotListList) {
    result.addAll(dotList);
  }
  return result;
}
