{
  PinpointServerSocket ss=new PinpointServerSocket();
  ss.bind("127.0.0.1",10234);
  ss.setMessageListener(new AlwaysHandshakeSuccessListener());
  PinpointSocketFactory socketFactory1=createPinpointSocketFactory();
  EchoMessageListener echoMessageListener1=new EchoMessageListener();
  socketFactory1.setMessageListener(echoMessageListener1);
  PinpointSocketFactory socketFactory2=createPinpointSocketFactory();
  EchoMessageListener echoMessageListener2=new EchoMessageListener();
  socketFactory2.setMessageListener(echoMessageListener2);
  try {
    PinpointSocket socket=socketFactory1.connect("127.0.0.1",10234);
    PinpointSocket socket2=socketFactory2.connect("127.0.0.1",10234);
    Thread.sleep(500);
    List<ChannelContext> channelContextList=ss.getDuplexCommunicationChannelContext();
    if (channelContextList.size() != 2) {
      Assert.fail();
    }
    ChannelContext channelContext=channelContextList.get(0);
    assertRequestMessage(channelContext,"socket1",null);
    ChannelContext channelContext2=channelContextList.get(1);
    assertRequestMessage(channelContext2,"socket2",null);
    Assert.assertEquals(1,echoMessageListener1.getRequestPacketRepository().size());
    Assert.assertEquals(1,echoMessageListener2.getRequestPacketRepository().size());
    socket.close();
    socket2.close();
  }
  finally {
    socketFactory1.release();
    socketFactory2.release();
    ss.close();
  }
}
