{
  PinpointServerAcceptor serverAcceptor=PinpointRPCTestUtils.createPinpointServerFactory(bindPort,new AlwaysHandshakeSuccessListener());
  EchoClientListener echoMessageListener1=PinpointRPCTestUtils.createEchoClientListener();
  PinpointSocketFactory clientSocketFactory1=PinpointRPCTestUtils.createSocketFactory(PinpointRPCTestUtils.getParams(),echoMessageListener1);
  EchoClientListener echoMessageListener2=PinpointRPCTestUtils.createEchoClientListener();
  PinpointSocketFactory clientSocketFactory2=PinpointRPCTestUtils.createSocketFactory(PinpointRPCTestUtils.getParams(),echoMessageListener2);
  try {
    PinpointSocket socket=clientSocketFactory1.connect("127.0.0.1",bindPort);
    PinpointSocket socket2=clientSocketFactory2.connect("127.0.0.1",bindPort);
    Thread.sleep(500);
    List<PinpointServer> writableServerList=serverAcceptor.getWritableServerList();
    if (writableServerList.size() != 2) {
      Assert.fail();
    }
    PinpointServer writableServer=writableServerList.get(0);
    assertRequestMessage(writableServer,"socket1",null);
    PinpointServer writableServer2=writableServerList.get(1);
    assertRequestMessage(writableServer2,"socket2",null);
    Assert.assertEquals(1,echoMessageListener1.getRequestPacketRepository().size());
    Assert.assertEquals(1,echoMessageListener2.getRequestPacketRepository().size());
    PinpointRPCTestUtils.close(socket,socket2);
  }
  finally {
    clientSocketFactory1.release();
    clientSocketFactory2.release();
    PinpointRPCTestUtils.close(serverAcceptor);
  }
}
