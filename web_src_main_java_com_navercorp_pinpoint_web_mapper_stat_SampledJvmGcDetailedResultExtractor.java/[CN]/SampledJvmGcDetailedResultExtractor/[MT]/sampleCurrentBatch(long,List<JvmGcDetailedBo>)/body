{
  List<Long> gcNewCounts=new ArrayList<>(dataPointsToSample.size());
  List<Long> gcNewTimes=new ArrayList<>(dataPointsToSample.size());
  List<Double> codeCacheUseds=new ArrayList<>(dataPointsToSample.size());
  List<Double> newGenUseds=new ArrayList<>(dataPointsToSample.size());
  List<Double> oldGenUseds=new ArrayList<>(dataPointsToSample.size());
  List<Double> survivorSpaceUseds=new ArrayList<>(dataPointsToSample.size());
  List<Double> permGenUseds=new ArrayList<>(dataPointsToSample.size());
  List<Double> metaspaceUseds=new ArrayList<>(dataPointsToSample.size());
  for (  JvmGcDetailedBo jvmGcDetailedBo : dataPointsToSample) {
    gcNewCounts.add(jvmGcDetailedBo.getGcNewCount());
    gcNewTimes.add(jvmGcDetailedBo.getGcNewTime());
    codeCacheUseds.add(jvmGcDetailedBo.getCodeCacheUsed() * 100);
    newGenUseds.add(jvmGcDetailedBo.getNewGenUsed() * 100);
    oldGenUseds.add(jvmGcDetailedBo.getOldGenUsed() * 100);
    survivorSpaceUseds.add(jvmGcDetailedBo.getSurvivorSpaceUsed() * 100);
    permGenUseds.add(jvmGcDetailedBo.getPermGenUsed() * 100);
    metaspaceUseds.add(jvmGcDetailedBo.getMetaspaceUsed() * 100);
  }
  SampledJvmGcDetailed sampledJvmGcDetailed=new SampledJvmGcDetailed();
  sampledJvmGcDetailed.setGcNewCount(createLongPoint(timestamp,gcNewCounts));
  sampledJvmGcDetailed.setGcNewTime(createLongPoint(timestamp,gcNewTimes));
  sampledJvmGcDetailed.setCodeCacheUsed(createDoublePoint(timestamp,codeCacheUseds));
  sampledJvmGcDetailed.setNewGenUsed(createDoublePoint(timestamp,newGenUseds));
  sampledJvmGcDetailed.setOldGenUsed(createDoublePoint(timestamp,oldGenUseds));
  sampledJvmGcDetailed.setSurvivorSpaceUsed(createDoublePoint(timestamp,survivorSpaceUseds));
  sampledJvmGcDetailed.setPermGenUsed(createDoublePoint(timestamp,permGenUseds));
  sampledJvmGcDetailed.setMetaspaceUsed(createDoublePoint(timestamp,metaspaceUseds));
  return sampledJvmGcDetailed;
}
