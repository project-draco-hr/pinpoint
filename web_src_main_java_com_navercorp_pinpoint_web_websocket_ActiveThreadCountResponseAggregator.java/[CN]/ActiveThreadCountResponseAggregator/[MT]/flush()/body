{
  logger.info("flush started. applicationName:{}",applicationName);
  if (isStopped) {
    return;
  }
  AgentActiveThreadCountList response=new AgentActiveThreadCountList();
synchronized (aggregatorLock) {
    for (    ActiveThreadCountWorker activeThreadCountWorker : activeThreadCountWorkerRepository.values()) {
      String agentId=activeThreadCountWorker.getAgentId();
      AgentActiveThreadCount agentActiveThreadCount=activeThreadCountMap.get(agentId);
      if (agentActiveThreadCount != null) {
        response.add(agentActiveThreadCount);
      }
 else {
        response.add(activeThreadCountWorker.getDefaultFailedResponse());
      }
    }
    activeThreadCountMap=new HashMap<>(activeThreadCountWorkerRepository.size());
  }
  flush0(response);
}
