{
  if (JDBCScope.isInternal()) {
    logger.debug("internal jdbc scope. skip trace");
    return;
  }
  int pop=BindValueScope.pop();
  if (isDebug) {
    logger.debug("bindValueScope pop:{}",pop);
  }
  if (pop != DepthScope.ZERO) {
    logger.debug("internal bindValue scope. skip trace");
    return;
  }
  if (isDebug) {
    logger.afterInterceptor(target,className,methodName,parameterDescription,args,result);
  }
  Trace trace=traceContext.currentTraceObject();
  if (trace == null) {
    return;
  }
  Map bindList=getBindValue.invoke(target);
  if (bindList == null) {
    if (logger.isWarnEnabled()) {
      logger.warn("bindValue is null");
    }
    return;
  }
  Integer index=NumberUtils.toInteger(args[0]);
  if (index == null) {
    return;
  }
  String value=BindValueConverter.convert(methodName,args);
  bindList.put(index,value);
}
