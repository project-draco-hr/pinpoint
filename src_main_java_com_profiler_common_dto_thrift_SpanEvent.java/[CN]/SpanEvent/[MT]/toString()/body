{
  StringBuilder sb=new StringBuilder("SpanEventBo(");
  boolean first=true;
  if (isSetAgentId()) {
    sb.append("agentId:");
    if (this.agentId == null) {
      sb.append("null");
    }
 else {
      sb.append(this.agentId);
    }
    first=false;
  }
  if (isSetApplicationId()) {
    if (!first)     sb.append(", ");
    sb.append("applicationId:");
    if (this.applicationId == null) {
      sb.append("null");
    }
 else {
      sb.append(this.applicationId);
    }
    first=false;
  }
  if (isSetAgentIdentifier()) {
    if (!first)     sb.append(", ");
    sb.append("agentIdentifier:");
    sb.append(this.agentIdentifier);
    first=false;
  }
  if (isSetMostTraceId()) {
    if (!first)     sb.append(", ");
    sb.append("mostTraceId:");
    sb.append(this.mostTraceId);
    first=false;
  }
  if (isSetLeastTraceId()) {
    if (!first)     sb.append(", ");
    sb.append("leastTraceId:");
    sb.append(this.leastTraceId);
    first=false;
  }
  if (isSetSpanId()) {
    if (!first)     sb.append(", ");
    sb.append("spanId:");
    sb.append(this.spanId);
    first=false;
  }
  if (!first)   sb.append(", ");
  sb.append("sequence:");
  sb.append(this.sequence);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("startElapsed:");
  sb.append(this.startElapsed);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("endElapsed:");
  sb.append(this.endElapsed);
  first=false;
  if (isSetRpc()) {
    if (!first)     sb.append(", ");
    sb.append("rpc:");
    if (this.rpc == null) {
      sb.append("null");
    }
 else {
      sb.append(this.rpc);
    }
    first=false;
  }
  if (!first)   sb.append(", ");
  sb.append("serviceType:");
  sb.append(this.serviceType);
  first=false;
  if (isSetEndPoint()) {
    if (!first)     sb.append(", ");
    sb.append("endPoint:");
    if (this.endPoint == null) {
      sb.append("null");
    }
 else {
      sb.append(this.endPoint);
    }
    first=false;
  }
  if (!first)   sb.append(", ");
  sb.append("annotations:");
  if (this.annotations == null) {
    sb.append("null");
  }
 else {
    sb.append(this.annotations);
  }
  first=false;
  if (isSetDepth()) {
    if (!first)     sb.append(", ");
    sb.append("depth:");
    sb.append(this.depth);
    first=false;
  }
  if (isSetNextSpanId()) {
    if (!first)     sb.append(", ");
    sb.append("nextSpanId:");
    sb.append(this.nextSpanId);
    first=false;
  }
  if (isSetDestinationId()) {
    if (!first)     sb.append(", ");
    sb.append("destinationId:");
    if (this.destinationId == null) {
      sb.append("null");
    }
 else {
      sb.append(this.destinationId);
    }
    first=false;
  }
  if (isSetDestinationAddress()) {
    if (!first)     sb.append(", ");
    sb.append("destinationAddress:");
    if (this.destinationAddress == null) {
      sb.append("null");
    }
 else {
      sb.append(this.destinationAddress);
    }
    first=false;
  }
  sb.append(")");
  return sb.toString();
}
