{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  Span typedOther=(Span)other;
  lastComparison=Boolean.valueOf(isSetAgentId()).compareTo(typedOther.isSetAgentId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAgentId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.agentId,typedOther.agentId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetApplicationName()).compareTo(typedOther.isSetApplicationName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetApplicationName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.applicationName,typedOther.applicationName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAgentStartTime()).compareTo(typedOther.isSetAgentStartTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAgentStartTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.agentStartTime,typedOther.agentStartTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMostTraceId()).compareTo(typedOther.isSetMostTraceId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMostTraceId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.mostTraceId,typedOther.mostTraceId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLeastTraceId()).compareTo(typedOther.isSetLeastTraceId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLeastTraceId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.leastTraceId,typedOther.leastTraceId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSpanId()).compareTo(typedOther.isSetSpanId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSpanId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.spanId,typedOther.spanId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetParentSpanId()).compareTo(typedOther.isSetParentSpanId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetParentSpanId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.parentSpanId,typedOther.parentSpanId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetStartTime()).compareTo(typedOther.isSetStartTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStartTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.startTime,typedOther.startTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetElapsed()).compareTo(typedOther.isSetElapsed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetElapsed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.elapsed,typedOther.elapsed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRpc()).compareTo(typedOther.isSetRpc());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRpc()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.rpc,typedOther.rpc);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetServiceType()).compareTo(typedOther.isSetServiceType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetServiceType()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.serviceType,typedOther.serviceType);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetEndPoint()).compareTo(typedOther.isSetEndPoint());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetEndPoint()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.endPoint,typedOther.endPoint);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRemoteAddr()).compareTo(typedOther.isSetRemoteAddr());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRemoteAddr()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.remoteAddr,typedOther.remoteAddr);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAnnotations()).compareTo(typedOther.isSetAnnotations());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAnnotations()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.annotations,typedOther.annotations);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetFlag()).compareTo(typedOther.isSetFlag());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetFlag()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.flag,typedOther.flag);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetErr()).compareTo(typedOther.isSetErr());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetErr()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.err,typedOther.err);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSpanEventList()).compareTo(typedOther.isSetSpanEventList());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSpanEventList()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.spanEventList,typedOther.spanEventList);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetParentApplicationName()).compareTo(typedOther.isSetParentApplicationName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetParentApplicationName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.parentApplicationName,typedOther.parentApplicationName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetParentApplicationType()).compareTo(typedOther.isSetParentApplicationType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetParentApplicationType()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.parentApplicationType,typedOther.parentApplicationType);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAcceptorHost()).compareTo(typedOther.isSetAcceptorHost());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAcceptorHost()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.acceptorHost,typedOther.acceptorHost);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
