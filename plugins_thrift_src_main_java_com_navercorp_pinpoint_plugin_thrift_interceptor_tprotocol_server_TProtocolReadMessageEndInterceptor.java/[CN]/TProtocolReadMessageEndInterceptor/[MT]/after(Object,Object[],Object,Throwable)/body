{
  if (isDebug) {
    logger.afterInterceptor(target,args,result,throwable);
  }
  if (!validate(target)) {
    return;
  }
  final boolean shouldTrace=((ServerMarkerFlagFieldAccessor)target)._$PINPOINT$_getServerMarkerFlag();
  if (shouldTrace) {
    InterceptorScopeInvocation currentTransaction=this.scope.getCurrentInvocation();
    Object attachment=currentTransaction.getAttachment();
    if (attachment instanceof ThriftClientCallContext) {
      ThriftClientCallContext clientCallContext=(ThriftClientCallContext)attachment;
      String methodName=clientCallContext.getMethodName();
      ThriftRequestProperty parentTraceInfo=clientCallContext.getTraceHeader();
      try {
        this.logger.debug("parentTraceInfo : {}",parentTraceInfo);
        recordTrace(target,parentTraceInfo,methodName);
      }
 catch (      Throwable t) {
        logger.warn("Error creating trace object. Cause:{}",t.getMessage(),t);
      }
    }
  }
}
