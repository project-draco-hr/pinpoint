{
  logger.info("ReconnectTimerTask started.");
  try {
synchronized (lock) {
      Iterator<Map.Entry<AgentInfo,ReconnectProperties>> iterator=reconnectJobRepository.entrySet().iterator();
      while (iterator.hasNext()) {
        Map.Entry<AgentInfo,ReconnectProperties> entry=iterator.next();
        AgentInfo agentInfo=entry.getKey();
        ReconnectProperties reconnectProperties=entry.getValue();
        AgentInfo newAgentInfo=agentService.getAgentInfo(agentInfo.getApplicationName(),agentInfo.getAgentId());
        if (newAgentInfo != null) {
          ClientStreamChannelContext clientStreamChannelContext=agentService.openStream(newAgentInfo,reconnectProperties.commandObject,reconnectProperties.messageListener,reconnectProperties.stateChangeListener);
          if (clientStreamChannelContext != null && clientStreamChannelContext.getCreateFailPacket() == null) {
            iterator.remove();
          }
        }
      }
      if (reconnectJobRepository.size() == 0) {
        boolean turnOff=onReconnectTimerTask.compareAndSet(true,false);
      }
    }
  }
  finally {
    if (timer != null && onReconnectTimerTask.get() && !isStopped.get()) {
      timer.newTimeout(this,DEFAULT_RECONNECT_DELAY,TimeUnit.MILLISECONDS);
    }
  }
}
