{
  MetricRegistry r=registry.getRegistry();
  TStatWithParallelCollector stat=(TStatWithParallelCollector)typeObject;
  if (stat == null) {
    stat=new TStatWithParallelCollector();
    agentStat.setParallel(stat);
  }
  stat.setAgentId(agentId);
  stat.setTimestamp(System.currentTimeMillis());
  stat.setJvmMemoryTotalMax(MetricMonitorValues.getLong(r,JVM_MEMORY_TOTAL_MAX));
  stat.setJvmMemoryTotalUsed(MetricMonitorValues.getLong(r,JVM_MEMORY_TOTAL_USED));
  stat.setJvmMemoryHeapMax(MetricMonitorValues.getLong(r,JVM_MEMORY_HEAP_MAX));
  stat.setJvmMemoryHeapUsed(MetricMonitorValues.getLong(r,JVM_MEMORY_HEAP_USED));
  stat.setJvmMemoryNonHeapMax(MetricMonitorValues.getLong(r,JVM_MEMORY_NONHEAP_MAX));
  stat.setJvmMemoryNonHeapUsed(MetricMonitorValues.getLong(r,JVM_MEMORY_NONHEAP_USED));
  stat.setJvmMemoryPoolsCodeCacheUsage(MetricMonitorValues.getLong(r,JVM_MEMORY_POOLS_CODECACHE));
  stat.setJvmMemoryPoolsPSEdenSpaceUsage(MetricMonitorValues.getLong(r,JVM_MEMORY_POOLS_PS_EDEN));
  stat.setJvmMemoryPoolsPSSurvivorSpaceUsage(MetricMonitorValues.getLong(r,JVM_MEMORY_POOLS_PS_SURVIVOR));
  stat.setJvmMemoryPoolsPSOldGenUsage(MetricMonitorValues.getLong(r,JVM_MEMORY_POOLS_PS_OLDGEN));
  stat.setJvmMemoryPoolsPSPermGenUsage(MetricMonitorValues.getLong(r,JVM_MEMORY_POOLS_PS_PERMGEN));
  stat.setJvmGcPSMarkSweepCount(MetricMonitorValues.getLong(r,JVM_GC_PS_MS_COUNT));
  stat.setJvmGcPSMarkSweepTime(MetricMonitorValues.getLong(r,JVM_GC_PS_MS_TIME));
  stat.setJvmGcPSScavengeCount(MetricMonitorValues.getLong(r,JVM_GC_PS_SCAVENGE_COUNT));
  stat.setJvmGcPSMarkSweepTime(MetricMonitorValues.getLong(r,JVM_GC_PS_SCAVENGE_TIME));
}
