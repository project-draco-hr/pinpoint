{
  if (sourceApplication == null) {
    throw new NullPointerException("sourceApplication must not be null");
  }
  if (destinationApplication == null) {
    throw new NullPointerException("destApplicationName must not be null");
  }
  if (filter == null) {
    throw new NullPointerException("filter must not be null");
  }
  StopWatch watch=new StopWatch();
  watch.start();
  List<List<SpanBo>> originalList=this.traceDao.selectAllSpans(traceIdSet);
  List<SpanBo> filteredTransactionList=filterList(originalList,filter);
  LinkStatistics statistics=new LinkStatistics(range);
  for (  SpanBo span : filteredTransactionList) {
    if (sourceApplication.getName().equals(span.getApplicationId()) && sourceApplication.getServiceTypeCode() == span.getServiceType().getCode()) {
      List<SpanEventBo> spanEventBoList=span.getSpanEventBoList();
      if (spanEventBoList == null) {
        continue;
      }
      for (      SpanEventBo spanEventBo : spanEventBoList) {
        if (destinationApplication.getServiceTypeCode() == spanEventBo.getServiceType().getCode() && destinationApplication.getName().equals(spanEventBo.getDestinationId())) {
          boolean hasException=spanEventBo.hasException();
          statistics.addSample(span.getStartTime() + spanEventBo.getStartElapsed(),spanEventBo.getEndElapsed(),1,hasException);
          break;
        }
      }
    }
  }
  watch.stop();
  logger.info("Fetch link statistics elapsed. {}ms",watch.getLastTaskTimeMillis());
  return statistics;
}
