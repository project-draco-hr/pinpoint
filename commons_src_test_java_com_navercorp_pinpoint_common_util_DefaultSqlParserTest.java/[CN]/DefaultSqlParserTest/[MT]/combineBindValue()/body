{
  OutputParameterParser parameterParser=new OutputParameterParser();
  String sql="select * from table a = 1 and b=50 and c=? and d='11'";
  String expected="select * from table a = 1 and b=50 and c='foo' and d='11'";
  List<String> bindValues=parameterParser.parseOutputParameter("foo");
  String result=sqlParser.combineBindValues(sql,bindValues);
  Assert.assertEquals(expected,result);
  sql="select * from table a = ? and b=? and c=? and d=?";
  expected="select * from table a = '1' and b='50' and c='foo' and d='11'";
  bindValues=parameterParser.parseOutputParameter("1, 50, foo, 11");
  result=sqlParser.combineBindValues(sql,bindValues);
  Assert.assertEquals(expected,result);
  sql="select * from table id = \"foo ? bar\" and number=?";
  expected="select * from table id = \"foo ? bar\" and number='99'";
  bindValues=parameterParser.parseOutputParameter("99");
  result=sqlParser.combineBindValues(sql,bindValues);
  Assert.assertEquals(expected,result);
  sql="select * from table id = 'hi ? name''s foo' and number=?";
  expected="select * from table id = 'hi ? name's foo' and number='99'";
  bindValues=parameterParser.parseOutputParameter("99");
  result=sqlParser.combineBindValues(sql,bindValues);
  Assert.assertEquals(expected,result);
  sql="/** comment ? */ select * from table id = ?";
  expected="/** comment ? */ select * from table id = 'foo,bar'";
  bindValues=parameterParser.parseOutputParameter("foo,,bar");
  result=sqlParser.combineBindValues(sql,bindValues);
  Assert.assertEquals(expected,result);
  sql="select /*! STRAIGHT_JOIN ? */ * from table id = ?";
  expected="select /*! STRAIGHT_JOIN ? */ * from table id = 'foo,bar'";
  bindValues=parameterParser.parseOutputParameter("foo,,bar");
  result=sqlParser.combineBindValues(sql,bindValues);
  Assert.assertEquals(expected,result);
  sql="select * from table id = ?; -- This ? comment";
  expected="select * from table id = 'foo'; -- This ? comment";
  bindValues=parameterParser.parseOutputParameter("foo");
  result=sqlParser.combineBindValues(sql,bindValues);
  Assert.assertEquals(expected,result);
}
