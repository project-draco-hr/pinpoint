{
  List<DefaultProfilerPluginContext> pluginContexts=new ArrayList<DefaultProfilerPluginContext>(pluginJars.length);
  List<String> disabled=agent.getProfilerConfig().getDisabledPlugins();
  for (  URL jar : pluginJars) {
    final JarFile pluginJarFile=createJarFile(jar);
    final List<String> pluginPackageList=getPluginPackage(pluginJarFile);
    final ClassNameFilter pluginFilterChain=createPluginFilterChain(pluginPackageList);
    final List<ProfilerPlugin> plugins=PluginLoader.load(ProfilerPlugin.class,new URL[]{jar});
    for (    ProfilerPlugin plugin : plugins) {
      if (disabled.contains(plugin.getClass().getName())) {
        logger.info("Skip disabled plugin: {}",plugin.getClass().getName());
        continue;
      }
      if (logger.isInfoEnabled()) {
        logger.info("{} Plugin {}:{}",plugin.getClass(),PluginConfig.PINPOINT_PLUGIN_PACKAGE,pluginPackageList);
      }
      logger.info("Loading plugin:{} pluginPackage:{}",plugin.getClass().getName(),plugin);
      PluginConfig pluginConfig=new PluginConfig(jar,plugin,agent.getInstrumentation(),agent.getClassPool(),agent.getBootstrapCoreJar(),pluginFilterChain);
      final DefaultProfilerPluginContext context=setupPlugin(pluginConfig);
      pluginContexts.add(context);
    }
  }
  return pluginContexts;
}
