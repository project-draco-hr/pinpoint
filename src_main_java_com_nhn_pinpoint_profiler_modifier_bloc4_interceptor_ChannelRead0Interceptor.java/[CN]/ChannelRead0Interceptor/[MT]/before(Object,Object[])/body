{
  if (isDebug) {
    logger.beforeInterceptor(target,args);
  }
  if (args.length != 2) {
    return;
  }
  if (!(args[0] instanceof io.netty.channel.ChannelHandlerContext) || !(args[1] instanceof io.netty.handler.codec.http.FullHttpRequest)) {
    return;
  }
  try {
    io.netty.channel.ChannelHandlerContext ctx=(io.netty.channel.ChannelHandlerContext)args[0];
    io.netty.handler.codec.http.FullHttpRequest request=(io.netty.handler.codec.http.FullHttpRequest)args[1];
    boolean sampling=samplingEnable(request);
    if (!sampling) {
      traceContext.disableSampling();
      if (isDebug) {
        logger.debug("mark disable sampling. skip trace");
      }
      return;
    }
    String requestURL=request.getUri();
    String remoteAddr=((SocketChannel)ctx.channel()).remoteAddress().toString();
    TraceId traceId=populateTraceIdFromRequest(request);
    Trace trace;
    if (traceId != null) {
      trace=traceContext.continueTraceObject(traceId);
      if (!trace.canSampled()) {
        if (isDebug) {
          logger.debug("TraceID exist. camSampled is false. skip trace. traceId:{}, requestUrl:{}, remoteAddr:{}",new Object[]{traceId,requestURL,remoteAddr});
        }
        return;
      }
 else {
        if (isDebug) {
          logger.debug("TraceID exist. continue trace. traceId:{}, requestUrl:{}, remoteAddr:{}",new Object[]{traceId,requestURL,remoteAddr});
        }
      }
    }
 else {
      trace=traceContext.newTraceObject();
      if (!trace.canSampled()) {
        if (isDebug) {
          logger.debug("TraceID not exist. camSampled is false. skip trace. requestUrl:{}, remoteAddr:{}",new Object[]{requestURL,remoteAddr});
        }
        return;
      }
 else {
        if (isDebug) {
          logger.debug("TraceID not exist. start new trace. requestUrl:{}, remoteAddr:{}",new Object[]{requestURL,remoteAddr});
        }
      }
    }
    trace.markBeforeTime();
    trace.recordServiceType(ServiceType.BLOC);
    trace.recordRpcName(requestURL);
    trace.recordEndPoint(request.getProtocolVersion().protocolName() + ":" + ctx.channel().localAddress());
    trace.recordAttribute(AnnotationKey.HTTP_URL,request.getUri());
  }
 catch (  Throwable e) {
    if (logger.isWarnEnabled()) {
      logger.warn("BLOC4.x http handler trace start fail. Caused:{}",e.getMessage(),e);
    }
  }
}
