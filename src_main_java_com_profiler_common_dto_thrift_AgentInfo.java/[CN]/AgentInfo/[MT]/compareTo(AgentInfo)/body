{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  AgentInfo typedOther=(AgentInfo)other;
  lastComparison=Boolean.valueOf(isSetHostname()).compareTo(typedOther.isSetHostname());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetHostname()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.hostname,typedOther.hostname);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetIp()).compareTo(typedOther.isSetIp());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetIp()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.ip,typedOther.ip);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPorts()).compareTo(typedOther.isSetPorts());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPorts()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.ports,typedOther.ports);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAgentId()).compareTo(typedOther.isSetAgentId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAgentId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.agentId,typedOther.agentId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetApplicationName()).compareTo(typedOther.isSetApplicationName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetApplicationName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.applicationName,typedOther.applicationName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetServiceType()).compareTo(typedOther.isSetServiceType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetServiceType()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.serviceType,typedOther.serviceType);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetIsAlive()).compareTo(typedOther.isSetIsAlive());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetIsAlive()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.isAlive,typedOther.isAlive);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTimestamp()).compareTo(typedOther.isSetTimestamp());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTimestamp()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.timestamp,typedOther.timestamp);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetIdentifier()).compareTo(typedOther.isSetIdentifier());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetIdentifier()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.identifier,typedOther.identifier);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
