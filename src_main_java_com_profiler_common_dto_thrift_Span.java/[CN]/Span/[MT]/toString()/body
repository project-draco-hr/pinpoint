{
  StringBuilder sb=new StringBuilder("Span(");
  boolean first=true;
  sb.append("agentID:");
  if (this.agentID == null) {
    sb.append("null");
  }
 else {
    sb.append(this.agentID);
  }
  first=false;
  if (!first)   sb.append(", ");
  sb.append("timestamp:");
  sb.append(this.timestamp);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("mostTraceID:");
  sb.append(this.mostTraceID);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("leastTraceID:");
  sb.append(this.leastTraceID);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("name:");
  if (this.name == null) {
    sb.append("null");
  }
 else {
    sb.append(this.name);
  }
  first=false;
  if (!first)   sb.append(", ");
  sb.append("serviceName:");
  if (this.serviceName == null) {
    sb.append("null");
  }
 else {
    sb.append(this.serviceName);
  }
  first=false;
  if (!first)   sb.append(", ");
  sb.append("spanID:");
  sb.append(this.spanID);
  first=false;
  if (isSetParentSpanId()) {
    if (!first)     sb.append(", ");
    sb.append("parentSpanId:");
    sb.append(this.parentSpanId);
    first=false;
  }
  if (!first)   sb.append(", ");
  sb.append("annotations:");
  if (this.annotations == null) {
    sb.append("null");
  }
 else {
    sb.append(this.annotations);
  }
  first=false;
  if (isSetFlag()) {
    if (!first)     sb.append(", ");
    sb.append("flag:");
    sb.append(this.flag);
    first=false;
  }
  if (!first)   sb.append(", ");
  sb.append("endPoint:");
  if (this.endPoint == null) {
    sb.append("null");
  }
 else {
    sb.append(this.endPoint);
  }
  first=false;
  if (!first)   sb.append(", ");
  sb.append("terminal:");
  sb.append(this.terminal);
  first=false;
  sb.append(")");
  return sb.toString();
}
