{
  StringBuilder builder=new StringBuilder();
  builder.append("{tab=");
  builder.append(tab);
  builder.append(", id=");
  builder.append(id);
  builder.append(", parentId=");
  builder.append(parentId);
  builder.append(", method=");
  builder.append(method);
  builder.append(", title=");
  builder.append(title);
  builder.append(", simpleClassName=");
  builder.append(simpleClassName);
  builder.append(", fullApiDescription=");
  builder.append(fullApiDescription);
  builder.append(", arguments=");
  builder.append(arguments);
  builder.append(", begin=");
  builder.append(begin);
  builder.append(", elapsed=");
  builder.append(elapsed);
  builder.append(", gap=");
  builder.append(gap);
  builder.append(", executionMilliseconds=");
  builder.append(executionMilliseconds);
  builder.append(", agent=");
  builder.append(agent);
  builder.append(", applicationName=");
  builder.append(applicationName);
  builder.append(", serviceType=");
  builder.append(serviceType);
  builder.append(", destinationId=");
  builder.append(destinationId);
  builder.append(", excludeFromTimeline=");
  builder.append(excludeFromTimeline);
  builder.append(", transactionId=");
  builder.append(transactionId);
  builder.append(", spanId=");
  builder.append(spanId);
  builder.append(", focused=");
  builder.append(focused);
  builder.append(", hasChild=");
  builder.append(hasChild);
  builder.append(", hasException=");
  builder.append(hasException);
  builder.append(", logPageUrl=");
  builder.append(logPageUrl);
  builder.append(", logButtonName=");
  builder.append(logButtonName);
  builder.append(", methodType=");
  builder.append(methodType);
  builder.append("}");
  return builder.toString();
}
