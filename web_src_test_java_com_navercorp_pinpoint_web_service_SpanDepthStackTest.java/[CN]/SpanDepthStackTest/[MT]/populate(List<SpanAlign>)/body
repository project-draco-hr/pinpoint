{
  Stack<SpanDepth> stack=new Stack<SpanDepth>();
  for (int i=0; i < spanAlignList.size(); i++) {
    final SpanAlign spanAlign=spanAlignList.get(i);
    if (i == 0) {
      if (!spanAlign.isSpan()) {
        throw new IllegalArgumentException("root is not span");
      }
      final SpanDepth spanDepth=new SpanDepth(spanAlign,getNextId(),spanAlign.getSpanBo().getStartTime());
      stack.push(spanDepth);
    }
 else {
      final SpanDepth lastSpanDepth=stack.getLast();
      final int parentDepth=lastSpanDepth.getSpanAlign().getDepth();
      final int currentDepth=spanAlign.getDepth();
      if (parentDepth < spanAlign.getDepth()) {
        final SpanDepth last=stack.getLast();
        final long beforeStartTime=getStartTime(last.getSpanAlign());
        final SpanDepth spanDepth=new SpanDepth(spanAlign,getNextId(),beforeStartTime);
        stack.push(spanDepth);
      }
 else {
        if (parentDepth > currentDepth) {
          SpanDepth lastPopSpanDepth;
          while (true) {
            lastPopSpanDepth=stack.pop();
            SpanDepth popLast=stack.getLast();
            if (popLast.getSpanAlign().getDepth() < currentDepth) {
              break;
            }
          }
          final long beforeLastEndTime=getLastTime(lastPopSpanDepth.getSpanAlign());
          stack.push(new SpanDepth(spanAlign,getNextId(),beforeLastEndTime));
        }
 else {
          final SpanDepth before=stack.pop();
          final long beforeLastEndTime=getLastTime(before.getSpanAlign());
          stack.push(new SpanDepth(spanAlign,getNextId(),beforeLastEndTime));
        }
      }
    }
    if (spanAlign.isSpan()) {
      SpanBo spanBo=spanAlign.getSpanBo();
      final long begin=spanBo.getStartTime();
      final long elapsed=spanBo.getElapsed();
      final int spanBoSequence=stack.getLast().getId();
      int parentSequence;
      final SpanDepth parent=stack.getParent();
      if (parent == null) {
        parentSequence=0;
      }
 else {
        parentSequence=parent.getId();
      }
    }
 else {
      SpanEventBo spanEventBo=spanAlign.getSpanEventBo();
      SpanBo spanBo=spanAlign.getSpanBo();
      final int spanBoEventSequence=stack.getLast().getId();
      final SpanDepth parent=stack.getParent();
      if (parent == null) {
        throw new IllegalStateException("parent is null. stack:" + stack);
      }
      final int parentSequence=parent.getId();
    }
  }
}
