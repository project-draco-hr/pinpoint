{
  if (message instanceof TBase) {
    final TBase dto=(TBase)message;
    final byte[] internalBufferData=serialize(this.serializer,dto);
    if (internalBufferData == null) {
      logger.warn("interBufferData is null");
      return;
    }
    final int internalBufferSize=this.serializer.getInterBufferSize();
    if (isLimit(internalBufferSize)) {
      logger.warn("discard packet. Caused:too large message. size:{}, {}",internalBufferSize,dto);
      return;
    }
    reusePacket.setData(internalBufferData,0,internalBufferSize);
    try {
      udpSocket.send(reusePacket);
      if (isDebug) {
        logger.debug("Data sent. size:{}, {}",internalBufferSize,dto);
      }
    }
 catch (    IOException e) {
      logger.info("packet send error. size:{}, {}",internalBufferSize,dto,e);
    }
  }
 else {
    logger.warn("sendPacket fail. invalid type:{}",message != null ? message.getClass() : null);
    return;
  }
}
